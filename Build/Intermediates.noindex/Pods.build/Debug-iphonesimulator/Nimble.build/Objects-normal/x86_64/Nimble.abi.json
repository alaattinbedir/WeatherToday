{
  "kind": "Root",
  "name": "TopLevel",
  "printedName": "TopLevel",
  "children": [
    {
      "kind": "TypeDecl",
      "name": "AssertionHandler",
      "printedName": "AssertionHandler",
      "children": [
        {
          "kind": "Function",
          "name": "assert",
          "printedName": "assert(_:message:location:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "FailureMessage",
              "printedName": "Nimble.FailureMessage",
              "usr": "c:@M@Nimble@objc(cs)FailureMessage"
            },
            {
              "kind": "TypeNominal",
              "name": "SourceLocation",
              "printedName": "Nimble.SourceLocation",
              "usr": "c:@M@Nimble@objc(cs)SourceLocation"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble16AssertionHandlerP6assert_7message8locationySb_AA14FailureMessageCAA14SourceLocationCtF",
          "mangledName": "$s6Nimble16AssertionHandlerP6assert_7message8locationySb_AA14FailureMessageCAA14SourceLocationCtF",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0 where τ_0_0 : Nimble.AssertionHandler>",
          "sugared_genericSig": "<Self where Self : Nimble.AssertionHandler>",
          "protocolReq": true,
          "reqNewWitnessTableEntry": true,
          "funcSelfKind": "NonMutating"
        }
      ],
      "declKind": "Protocol",
      "usr": "s:6Nimble16AssertionHandlerP",
      "mangledName": "$s6Nimble16AssertionHandlerP",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ]
    },
    {
      "kind": "Var",
      "name": "NimbleAssertionHandler",
      "printedName": "NimbleAssertionHandler",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "AssertionHandler",
          "printedName": "Nimble.AssertionHandler",
          "usr": "s:6Nimble16AssertionHandlerP"
        }
      ],
      "declKind": "Var",
      "usr": "s:6Nimble0A16AssertionHandlerAA0bC0_pvp",
      "mangledName": "$s6Nimble0A16AssertionHandlerAA0bC0_pvp",
      "moduleName": "Nimble",
      "declAttributes": [
        "HasInitialValue",
        "HasStorage",
        "AccessControl",
        "RawDocComment"
      ],
      "hasStorage": true
    },
    {
      "kind": "Function",
      "name": "allPass",
      "printedName": "allPass(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeFunc",
          "name": "Function",
          "printedName": "(τ_0_0.Element) throws -> Swift.Bool",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "DependentMember",
              "printedName": "τ_0_0.Element"
            }
          ]
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble7allPassyAA9PredicateVyxGSb7ElementQzKcSTRzlF",
      "mangledName": "$s6Nimble7allPassyAA9PredicateVyxGSb7ElementQzKcSTRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Sequence>",
      "sugared_genericSig": "<S where S : Swift.Sequence>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "allPass",
      "printedName": "allPass(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "String",
          "printedName": "Swift.String",
          "usr": "s:SS"
        },
        {
          "kind": "TypeFunc",
          "name": "Function",
          "printedName": "(τ_0_0.Element) throws -> Swift.Bool",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "DependentMember",
              "printedName": "τ_0_0.Element"
            }
          ]
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble7allPassyAA9PredicateVyxGSS_Sb7ElementQzKctSTRzlF",
      "mangledName": "$s6Nimble7allPassyAA9PredicateVyxGSS_Sb7ElementQzKctSTRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Sequence>",
      "sugared_genericSig": "<S where S : Swift.Sequence>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "allPass",
      "printedName": "allPass(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0.Element>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "DependentMember",
              "printedName": "τ_0_0.Element"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble7allPassyAA9PredicateVyxGADy7ElementQzGSTRzlF",
      "mangledName": "$s6Nimble7allPassyAA9PredicateVyxGADy7ElementQzGSTRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Sequence>",
      "sugared_genericSig": "<S where S : Swift.Sequence>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "TypeDecl",
      "name": "AssertionDispatcher",
      "printedName": "AssertionDispatcher",
      "children": [
        {
          "kind": "Var",
          "name": "handlers",
          "printedName": "handlers",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Nimble.AssertionHandler]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "AssertionHandler",
                  "printedName": "Nimble.AssertionHandler",
                  "usr": "s:6Nimble16AssertionHandlerP"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble19AssertionDispatcherC8handlersSayAA0B7Handler_pGvp",
          "mangledName": "$s6Nimble19AssertionDispatcherC8handlersSayAA0B7Handler_pGvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "Final",
            "HasStorage"
          ],
          "fixedbinaryorder": 0,
          "isLet": true,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Array",
                  "printedName": "[Nimble.AssertionHandler]",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "AssertionHandler",
                      "printedName": "Nimble.AssertionHandler",
                      "usr": "s:6Nimble16AssertionHandlerP"
                    }
                  ],
                  "usr": "s:Sa"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble19AssertionDispatcherC8handlersSayAA0B7Handler_pGvg",
              "mangledName": "$s6Nimble19AssertionDispatcherC8handlersSayAA0B7Handler_pGvg",
              "moduleName": "Nimble",
              "implicit": true,
              "declAttributes": [
                "Transparent",
                "Final"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(handlers:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "AssertionDispatcher",
              "printedName": "Nimble.AssertionDispatcher",
              "usr": "s:6Nimble19AssertionDispatcherC"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Nimble.AssertionHandler]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "AssertionHandler",
                  "printedName": "Nimble.AssertionHandler",
                  "usr": "s:6Nimble16AssertionHandlerP"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble19AssertionDispatcherC8handlersACSayAA0B7Handler_pG_tcfc",
          "mangledName": "$s6Nimble19AssertionDispatcherC8handlersACSayAA0B7Handler_pG_tcfc",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Function",
          "name": "assert",
          "printedName": "assert(_:message:location:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "FailureMessage",
              "printedName": "Nimble.FailureMessage",
              "usr": "c:@M@Nimble@objc(cs)FailureMessage"
            },
            {
              "kind": "TypeNominal",
              "name": "SourceLocation",
              "printedName": "Nimble.SourceLocation",
              "usr": "c:@M@Nimble@objc(cs)SourceLocation"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble19AssertionDispatcherC6assert_7message8locationySb_AA14FailureMessageCAA14SourceLocationCtF",
          "mangledName": "$s6Nimble19AssertionDispatcherC6assert_7message8locationySb_AA14FailureMessageCAA14SourceLocationCtF",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        }
      ],
      "declKind": "Class",
      "usr": "s:6Nimble19AssertionDispatcherC",
      "mangledName": "$s6Nimble19AssertionDispatcherC",
      "moduleName": "Nimble",
      "isOpen": true,
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "AssertionHandler",
          "printedName": "AssertionHandler",
          "usr": "s:6Nimble16AssertionHandlerP",
          "mangledName": "$s6Nimble16AssertionHandlerP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "AssertionRecord",
      "printedName": "AssertionRecord",
      "children": [
        {
          "kind": "Var",
          "name": "success",
          "printedName": "success",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble15AssertionRecordV7successSbvp",
          "mangledName": "$s6Nimble15AssertionRecordV7successSbvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "HasStorage",
            "AccessControl",
            "RawDocComment"
          ],
          "fixedbinaryorder": 0,
          "isLet": true,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Bool",
                  "printedName": "Swift.Bool",
                  "usr": "s:Sb"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble15AssertionRecordV7successSbvg",
              "mangledName": "$s6Nimble15AssertionRecordV7successSbvg",
              "moduleName": "Nimble",
              "implicit": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "message",
          "printedName": "message",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "FailureMessage",
              "printedName": "Nimble.FailureMessage",
              "usr": "c:@M@Nimble@objc(cs)FailureMessage"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble15AssertionRecordV7messageAA14FailureMessageCvp",
          "mangledName": "$s6Nimble15AssertionRecordV7messageAA14FailureMessageCvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "HasStorage",
            "AccessControl",
            "RawDocComment"
          ],
          "fixedbinaryorder": 1,
          "isLet": true,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "FailureMessage",
                  "printedName": "Nimble.FailureMessage",
                  "usr": "c:@M@Nimble@objc(cs)FailureMessage"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble15AssertionRecordV7messageAA14FailureMessageCvg",
              "mangledName": "$s6Nimble15AssertionRecordV7messageAA14FailureMessageCvg",
              "moduleName": "Nimble",
              "implicit": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "location",
          "printedName": "location",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "SourceLocation",
              "printedName": "Nimble.SourceLocation",
              "usr": "c:@M@Nimble@objc(cs)SourceLocation"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble15AssertionRecordV8locationAA14SourceLocationCvp",
          "mangledName": "$s6Nimble15AssertionRecordV8locationAA14SourceLocationCvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "HasStorage",
            "AccessControl",
            "RawDocComment"
          ],
          "fixedbinaryorder": 2,
          "isLet": true,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SourceLocation",
                  "printedName": "Nimble.SourceLocation",
                  "usr": "c:@M@Nimble@objc(cs)SourceLocation"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble15AssertionRecordV8locationAA14SourceLocationCvg",
              "mangledName": "$s6Nimble15AssertionRecordV8locationAA14SourceLocationCvg",
              "moduleName": "Nimble",
              "implicit": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "description",
          "printedName": "description",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble15AssertionRecordV11descriptionSSvp",
          "mangledName": "$s6Nimble15AssertionRecordV11descriptionSSvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble15AssertionRecordV11descriptionSSvg",
              "mangledName": "$s6Nimble15AssertionRecordV11descriptionSSvg",
              "moduleName": "Nimble",
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(success:message:location:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "AssertionRecord",
              "printedName": "Nimble.AssertionRecord",
              "usr": "s:6Nimble15AssertionRecordV"
            },
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "FailureMessage",
              "printedName": "Nimble.FailureMessage",
              "usr": "c:@M@Nimble@objc(cs)FailureMessage"
            },
            {
              "kind": "TypeNominal",
              "name": "SourceLocation",
              "printedName": "Nimble.SourceLocation",
              "usr": "c:@M@Nimble@objc(cs)SourceLocation"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble15AssertionRecordV7success7message8locationACSb_AA14FailureMessageCAA14SourceLocationCtcfc",
          "mangledName": "$s6Nimble15AssertionRecordV7success7message8locationACSb_AA14FailureMessageCAA14SourceLocationCtcfc",
          "moduleName": "Nimble",
          "implicit": true,
          "init_kind": "Designated"
        }
      ],
      "declKind": "Struct",
      "usr": "s:6Nimble15AssertionRecordV",
      "mangledName": "$s6Nimble15AssertionRecordV",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "AssertionRecorder",
      "printedName": "AssertionRecorder",
      "children": [
        {
          "kind": "Var",
          "name": "assertions",
          "printedName": "assertions",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Nimble.AssertionRecord]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "AssertionRecord",
                  "printedName": "Nimble.AssertionRecord",
                  "usr": "s:6Nimble15AssertionRecordV"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble17AssertionRecorderC10assertionsSayAA0B6RecordVGvp",
          "mangledName": "$s6Nimble17AssertionRecorderC10assertionsSayAA0B6RecordVGvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "HasInitialValue",
            "HasStorage",
            "AccessControl",
            "RawDocComment"
          ],
          "fixedbinaryorder": 0,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Array",
                  "printedName": "[Nimble.AssertionRecord]",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "AssertionRecord",
                      "printedName": "Nimble.AssertionRecord",
                      "usr": "s:6Nimble15AssertionRecordV"
                    }
                  ],
                  "usr": "s:Sa"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble17AssertionRecorderC10assertionsSayAA0B6RecordVGvg",
              "mangledName": "$s6Nimble17AssertionRecorderC10assertionsSayAA0B6RecordVGvg",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "get"
            },
            {
              "kind": "Accessor",
              "name": "Set",
              "printedName": "Set()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Array",
                  "printedName": "[Nimble.AssertionRecord]",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "AssertionRecord",
                      "printedName": "Nimble.AssertionRecord",
                      "usr": "s:6Nimble15AssertionRecordV"
                    }
                  ],
                  "usr": "s:Sa"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble17AssertionRecorderC10assertionsSayAA0B6RecordVGvs",
              "mangledName": "$s6Nimble17AssertionRecorderC10assertionsSayAA0B6RecordVGvs",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "set"
            },
            {
              "kind": "Accessor",
              "name": "Modify",
              "printedName": "Modify()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble17AssertionRecorderC10assertionsSayAA0B6RecordVGvM",
              "mangledName": "$s6Nimble17AssertionRecorderC10assertionsSayAA0B6RecordVGvM",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "_modify"
            }
          ]
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "AssertionRecorder",
              "printedName": "Nimble.AssertionRecorder",
              "usr": "s:6Nimble17AssertionRecorderC"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble17AssertionRecorderCACycfc",
          "mangledName": "$s6Nimble17AssertionRecorderCACycfc",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Function",
          "name": "assert",
          "printedName": "assert(_:message:location:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "FailureMessage",
              "printedName": "Nimble.FailureMessage",
              "usr": "c:@M@Nimble@objc(cs)FailureMessage"
            },
            {
              "kind": "TypeNominal",
              "name": "SourceLocation",
              "printedName": "Nimble.SourceLocation",
              "usr": "c:@M@Nimble@objc(cs)SourceLocation"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble17AssertionRecorderC6assert_7message8locationySb_AA14FailureMessageCAA14SourceLocationCtF",
          "mangledName": "$s6Nimble17AssertionRecorderC6assert_7message8locationySb_AA14FailureMessageCAA14SourceLocationCtF",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        }
      ],
      "declKind": "Class",
      "usr": "s:6Nimble17AssertionRecorderC",
      "mangledName": "$s6Nimble17AssertionRecorderC",
      "moduleName": "Nimble",
      "isOpen": true,
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "AssertionHandler",
          "printedName": "AssertionHandler",
          "usr": "s:6Nimble16AssertionHandlerP",
          "mangledName": "$s6Nimble16AssertionHandlerP"
        }
      ]
    },
    {
      "kind": "Function",
      "name": "withAssertionHandler",
      "printedName": "withAssertionHandler(_:file:line:closure:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "AssertionHandler",
          "printedName": "Nimble.AssertionHandler",
          "usr": "s:6Nimble16AssertionHandlerP"
        },
        {
          "kind": "TypeNominal",
          "name": "String",
          "printedName": "Swift.String",
          "hasDefaultArg": true,
          "usr": "s:SS"
        },
        {
          "kind": "TypeNominal",
          "name": "UInt",
          "printedName": "Swift.UInt",
          "hasDefaultArg": true,
          "usr": "s:Su"
        },
        {
          "kind": "TypeFunc",
          "name": "Function",
          "printedName": "() throws -> ()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            }
          ],
          "typeAttributes": [
            "noescape"
          ]
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble20withAssertionHandler_4file4line7closureyAA0cD0_p_SSSuyyKXEtF",
      "mangledName": "$s6Nimble20withAssertionHandler_4file4line7closureyAA0cD0_p_SSSuyyKXEtF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "gatherExpectations",
      "printedName": "gatherExpectations(silently:closure:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Array",
          "printedName": "[Nimble.AssertionRecord]",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "AssertionRecord",
              "printedName": "Nimble.AssertionRecord",
              "usr": "s:6Nimble15AssertionRecordV"
            }
          ],
          "usr": "s:Sa"
        },
        {
          "kind": "TypeNominal",
          "name": "Bool",
          "printedName": "Swift.Bool",
          "hasDefaultArg": true,
          "usr": "s:Sb"
        },
        {
          "kind": "TypeFunc",
          "name": "Function",
          "printedName": "() -> ()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            }
          ],
          "typeAttributes": [
            "noescape"
          ]
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble18gatherExpectations8silently7closureSayAA15AssertionRecordVGSb_yyXEtF",
      "mangledName": "$s6Nimble18gatherExpectations8silently7closureSayAA15AssertionRecordVGSb_yyXEtF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "gatherFailingExpectations",
      "printedName": "gatherFailingExpectations(silently:closure:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Array",
          "printedName": "[Nimble.AssertionRecord]",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "AssertionRecord",
              "printedName": "Nimble.AssertionRecord",
              "usr": "s:6Nimble15AssertionRecordV"
            }
          ],
          "usr": "s:Sa"
        },
        {
          "kind": "TypeNominal",
          "name": "Bool",
          "printedName": "Swift.Bool",
          "hasDefaultArg": true,
          "usr": "s:Sb"
        },
        {
          "kind": "TypeFunc",
          "name": "Function",
          "printedName": "() -> ()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            }
          ],
          "typeAttributes": [
            "noescape"
          ]
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble25gatherFailingExpectations8silently7closureSayAA15AssertionRecordVGSb_yyXEtF",
      "mangledName": "$s6Nimble25gatherFailingExpectations8silently7closureSayAA15AssertionRecordVGSb_yyXEtF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Import",
      "name": "Dispatch",
      "printedName": "Dispatch",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "TypeDecl",
      "name": "AsyncDefaults",
      "printedName": "AsyncDefaults",
      "children": [
        {
          "kind": "Var",
          "name": "timeout",
          "printedName": "timeout",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "DispatchTimeInterval",
              "printedName": "Dispatch.DispatchTimeInterval",
              "usr": "s:8Dispatch0A12TimeIntervalO"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble13AsyncDefaultsV7timeout8Dispatch0E12TimeIntervalOvpZ",
          "mangledName": "$s6Nimble13AsyncDefaultsV7timeout8Dispatch0E12TimeIntervalOvpZ",
          "moduleName": "Nimble",
          "static": true,
          "declAttributes": [
            "HasInitialValue",
            "HasStorage",
            "AccessControl"
          ],
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "DispatchTimeInterval",
                  "printedName": "Dispatch.DispatchTimeInterval",
                  "usr": "s:8Dispatch0A12TimeIntervalO"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble13AsyncDefaultsV7timeout8Dispatch0E12TimeIntervalOvgZ",
              "mangledName": "$s6Nimble13AsyncDefaultsV7timeout8Dispatch0E12TimeIntervalOvgZ",
              "moduleName": "Nimble",
              "static": true,
              "implicit": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "get"
            },
            {
              "kind": "Accessor",
              "name": "Set",
              "printedName": "Set()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "DispatchTimeInterval",
                  "printedName": "Dispatch.DispatchTimeInterval",
                  "usr": "s:8Dispatch0A12TimeIntervalO"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble13AsyncDefaultsV7timeout8Dispatch0E12TimeIntervalOvsZ",
              "mangledName": "$s6Nimble13AsyncDefaultsV7timeout8Dispatch0E12TimeIntervalOvsZ",
              "moduleName": "Nimble",
              "static": true,
              "implicit": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "set"
            },
            {
              "kind": "Accessor",
              "name": "Modify",
              "printedName": "Modify()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble13AsyncDefaultsV7timeout8Dispatch0E12TimeIntervalOvMZ",
              "mangledName": "$s6Nimble13AsyncDefaultsV7timeout8Dispatch0E12TimeIntervalOvMZ",
              "moduleName": "Nimble",
              "static": true,
              "implicit": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "_modify"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "pollInterval",
          "printedName": "pollInterval",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "DispatchTimeInterval",
              "printedName": "Dispatch.DispatchTimeInterval",
              "usr": "s:8Dispatch0A12TimeIntervalO"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble13AsyncDefaultsV12pollInterval8Dispatch0f4TimeE0OvpZ",
          "mangledName": "$s6Nimble13AsyncDefaultsV12pollInterval8Dispatch0f4TimeE0OvpZ",
          "moduleName": "Nimble",
          "static": true,
          "declAttributes": [
            "HasInitialValue",
            "HasStorage",
            "AccessControl"
          ],
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "DispatchTimeInterval",
                  "printedName": "Dispatch.DispatchTimeInterval",
                  "usr": "s:8Dispatch0A12TimeIntervalO"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble13AsyncDefaultsV12pollInterval8Dispatch0f4TimeE0OvgZ",
              "mangledName": "$s6Nimble13AsyncDefaultsV12pollInterval8Dispatch0f4TimeE0OvgZ",
              "moduleName": "Nimble",
              "static": true,
              "implicit": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "get"
            },
            {
              "kind": "Accessor",
              "name": "Set",
              "printedName": "Set()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "DispatchTimeInterval",
                  "printedName": "Dispatch.DispatchTimeInterval",
                  "usr": "s:8Dispatch0A12TimeIntervalO"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble13AsyncDefaultsV12pollInterval8Dispatch0f4TimeE0OvsZ",
              "mangledName": "$s6Nimble13AsyncDefaultsV12pollInterval8Dispatch0f4TimeE0OvsZ",
              "moduleName": "Nimble",
              "static": true,
              "implicit": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "set"
            },
            {
              "kind": "Accessor",
              "name": "Modify",
              "printedName": "Modify()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble13AsyncDefaultsV12pollInterval8Dispatch0f4TimeE0OvMZ",
              "mangledName": "$s6Nimble13AsyncDefaultsV12pollInterval8Dispatch0f4TimeE0OvMZ",
              "moduleName": "Nimble",
              "static": true,
              "implicit": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "_modify"
            }
          ]
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "AsyncDefaults",
              "printedName": "Nimble.AsyncDefaults",
              "usr": "s:6Nimble13AsyncDefaultsV"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble13AsyncDefaultsVACycfc",
          "mangledName": "$s6Nimble13AsyncDefaultsVACycfc",
          "moduleName": "Nimble",
          "implicit": true,
          "init_kind": "Designated"
        }
      ],
      "declKind": "Struct",
      "usr": "s:6Nimble13AsyncDefaultsV",
      "mangledName": "$s6Nimble13AsyncDefaultsV",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ]
    },
    {
      "kind": "Import",
      "name": "CoreFoundation",
      "printedName": "CoreFoundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Import",
      "name": "Dispatch",
      "printedName": "Dispatch",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "TypeDecl",
      "name": "WaitingInfo",
      "printedName": "WaitingInfo",
      "children": [
        {
          "kind": "Var",
          "name": "name",
          "printedName": "name",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble11WaitingInfoV4nameSSvp",
          "mangledName": "$s6Nimble11WaitingInfoV4nameSSvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "HasStorage"
          ],
          "fixedbinaryorder": 0,
          "isLet": true,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble11WaitingInfoV4nameSSvg",
              "mangledName": "$s6Nimble11WaitingInfoV4nameSSvg",
              "moduleName": "Nimble",
              "implicit": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "file",
          "printedName": "file",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble11WaitingInfoV4fileSSvp",
          "mangledName": "$s6Nimble11WaitingInfoV4fileSSvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "HasStorage"
          ],
          "fixedbinaryorder": 1,
          "isLet": true,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble11WaitingInfoV4fileSSvg",
              "mangledName": "$s6Nimble11WaitingInfoV4fileSSvg",
              "moduleName": "Nimble",
              "implicit": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "lineNumber",
          "printedName": "lineNumber",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "UInt",
              "printedName": "Swift.UInt",
              "usr": "s:Su"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble11WaitingInfoV10lineNumberSuvp",
          "mangledName": "$s6Nimble11WaitingInfoV10lineNumberSuvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "HasStorage"
          ],
          "fixedbinaryorder": 2,
          "isLet": true,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt",
                  "printedName": "Swift.UInt",
                  "usr": "s:Su"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble11WaitingInfoV10lineNumberSuvg",
              "mangledName": "$s6Nimble11WaitingInfoV10lineNumberSuvg",
              "moduleName": "Nimble",
              "implicit": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "description",
          "printedName": "description",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble11WaitingInfoV11descriptionSSvp",
          "mangledName": "$s6Nimble11WaitingInfoV11descriptionSSvp",
          "moduleName": "Nimble",
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble11WaitingInfoV11descriptionSSvg",
              "mangledName": "$s6Nimble11WaitingInfoV11descriptionSSvg",
              "moduleName": "Nimble",
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(name:file:lineNumber:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "WaitingInfo",
              "printedName": "Nimble.WaitingInfo",
              "usr": "s:6Nimble11WaitingInfoV"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "UInt",
              "printedName": "Swift.UInt",
              "usr": "s:Su"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble11WaitingInfoV4name4file10lineNumberACSS_SSSutcfc",
          "mangledName": "$s6Nimble11WaitingInfoV4name4file10lineNumberACSS_SSSutcfc",
          "moduleName": "Nimble",
          "implicit": true,
          "init_kind": "Designated"
        }
      ],
      "declKind": "Struct",
      "usr": "s:6Nimble11WaitingInfoV",
      "mangledName": "$s6Nimble11WaitingInfoV",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "Sendable",
          "printedName": "Sendable",
          "usr": "s:s8SendableP",
          "mangledName": "$ss8SendableP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "WaitLock",
      "printedName": "WaitLock",
      "children": [
        {
          "kind": "Function",
          "name": "acquireWaitingLock",
          "printedName": "acquireWaitingLock(_:file:line:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "UInt",
              "printedName": "Swift.UInt",
              "usr": "s:Su"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble8WaitLockP014acquireWaitingC0_4file4lineySS_SSSutF",
          "mangledName": "$s6Nimble8WaitLockP014acquireWaitingC0_4file4lineySS_SSSutF",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0 where τ_0_0 : Nimble.WaitLock>",
          "sugared_genericSig": "<Self where Self : Nimble.WaitLock>",
          "protocolReq": true,
          "reqNewWitnessTableEntry": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "releaseWaitingLock",
          "printedName": "releaseWaitingLock()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble8WaitLockP014releaseWaitingC0yyF",
          "mangledName": "$s6Nimble8WaitLockP014releaseWaitingC0yyF",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0 where τ_0_0 : Nimble.WaitLock>",
          "sugared_genericSig": "<Self where Self : Nimble.WaitLock>",
          "protocolReq": true,
          "reqNewWitnessTableEntry": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "isWaitingLocked",
          "printedName": "isWaitingLocked()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble8WaitLockP15isWaitingLockedSbyF",
          "mangledName": "$s6Nimble8WaitLockP15isWaitingLockedSbyF",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0 where τ_0_0 : Nimble.WaitLock>",
          "sugared_genericSig": "<Self where Self : Nimble.WaitLock>",
          "protocolReq": true,
          "reqNewWitnessTableEntry": true,
          "funcSelfKind": "NonMutating"
        }
      ],
      "declKind": "Protocol",
      "usr": "s:6Nimble8WaitLockP",
      "mangledName": "$s6Nimble8WaitLockP",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl"
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "AssertionWaitLock",
      "printedName": "AssertionWaitLock",
      "children": [
        {
          "kind": "Var",
          "name": "currentWaiter",
          "printedName": "currentWaiter",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "Nimble.WaitingInfo?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "WaitingInfo",
                  "printedName": "Nimble.WaitingInfo",
                  "usr": "s:6Nimble11WaitingInfoV"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble17AssertionWaitLockC13currentWaiter33_AC05A1B610115C3B08BF115598958097LLAA11WaitingInfoVSgvp",
          "mangledName": "$s6Nimble17AssertionWaitLockC13currentWaiter33_AC05A1B610115C3B08BF115598958097LLAA11WaitingInfoVSgvp",
          "moduleName": "Nimble",
          "isInternal": true,
          "declAttributes": [
            "HasInitialValue",
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 0,
          "hasStorage": true
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "AssertionWaitLock",
              "printedName": "Nimble.AssertionWaitLock",
              "usr": "s:6Nimble17AssertionWaitLockC"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble17AssertionWaitLockCACycfc",
          "mangledName": "$s6Nimble17AssertionWaitLockCACycfc",
          "moduleName": "Nimble",
          "init_kind": "Designated"
        },
        {
          "kind": "Function",
          "name": "acquireWaitingLock",
          "printedName": "acquireWaitingLock(_:file:line:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "UInt",
              "printedName": "Swift.UInt",
              "usr": "s:Su"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble17AssertionWaitLockC014acquireWaitingD0_4file4lineySS_SSSutF",
          "mangledName": "$s6Nimble17AssertionWaitLockC014acquireWaitingD0_4file4lineySS_SSSutF",
          "moduleName": "Nimble",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "isWaitingLocked",
          "printedName": "isWaitingLocked()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble17AssertionWaitLockC15isWaitingLockedSbyF",
          "mangledName": "$s6Nimble17AssertionWaitLockC15isWaitingLockedSbyF",
          "moduleName": "Nimble",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "releaseWaitingLock",
          "printedName": "releaseWaitingLock()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble17AssertionWaitLockC014releaseWaitingD0yyF",
          "mangledName": "$s6Nimble17AssertionWaitLockC014releaseWaitingD0yyF",
          "moduleName": "Nimble",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        }
      ],
      "declKind": "Class",
      "usr": "s:6Nimble17AssertionWaitLockC",
      "mangledName": "$s6Nimble17AssertionWaitLockC",
      "moduleName": "Nimble",
      "isOpen": true,
      "declAttributes": [
        "AccessControl"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "WaitLock",
          "printedName": "WaitLock",
          "usr": "s:6Nimble8WaitLockP",
          "mangledName": "$s6Nimble8WaitLockP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "AwaitResult",
      "printedName": "AwaitResult",
      "children": [
        {
          "kind": "Var",
          "name": "incomplete",
          "printedName": "incomplete",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "GenericFunction",
              "printedName": "<τ_0_0> (Nimble.AwaitResult<τ_0_0>.Type) -> Nimble.AwaitResult<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "AwaitResult",
                  "printedName": "Nimble.AwaitResult<τ_0_0>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    }
                  ],
                  "usr": "s:6Nimble11AwaitResultO"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Metatype",
                  "printedName": "Nimble.AwaitResult<τ_0_0>.Type",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "AwaitResult",
                      "printedName": "Nimble.AwaitResult<τ_0_0>",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "GenericTypeParam",
                          "printedName": "τ_0_0"
                        }
                      ],
                      "usr": "s:6Nimble11AwaitResultO"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "EnumElement",
          "usr": "s:6Nimble11AwaitResultO10incompleteyACyxGAEmlF",
          "mangledName": "$s6Nimble11AwaitResultO10incompleteyACyxGAEmlF",
          "moduleName": "Nimble",
          "declAttributes": [
            "RawDocComment"
          ],
          "fixedbinaryorder": 0
        },
        {
          "kind": "Var",
          "name": "timedOut",
          "printedName": "timedOut",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "GenericFunction",
              "printedName": "<τ_0_0> (Nimble.AwaitResult<τ_0_0>.Type) -> Nimble.AwaitResult<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "AwaitResult",
                  "printedName": "Nimble.AwaitResult<τ_0_0>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    }
                  ],
                  "usr": "s:6Nimble11AwaitResultO"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Metatype",
                  "printedName": "Nimble.AwaitResult<τ_0_0>.Type",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "AwaitResult",
                      "printedName": "Nimble.AwaitResult<τ_0_0>",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "GenericTypeParam",
                          "printedName": "τ_0_0"
                        }
                      ],
                      "usr": "s:6Nimble11AwaitResultO"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "EnumElement",
          "usr": "s:6Nimble11AwaitResultO8timedOutyACyxGAEmlF",
          "mangledName": "$s6Nimble11AwaitResultO8timedOutyACyxGAEmlF",
          "moduleName": "Nimble",
          "declAttributes": [
            "RawDocComment"
          ],
          "fixedbinaryorder": 1
        },
        {
          "kind": "Var",
          "name": "blockedRunLoop",
          "printedName": "blockedRunLoop",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "GenericFunction",
              "printedName": "<τ_0_0> (Nimble.AwaitResult<τ_0_0>.Type) -> Nimble.AwaitResult<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "AwaitResult",
                  "printedName": "Nimble.AwaitResult<τ_0_0>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    }
                  ],
                  "usr": "s:6Nimble11AwaitResultO"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Metatype",
                  "printedName": "Nimble.AwaitResult<τ_0_0>.Type",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "AwaitResult",
                      "printedName": "Nimble.AwaitResult<τ_0_0>",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "GenericTypeParam",
                          "printedName": "τ_0_0"
                        }
                      ],
                      "usr": "s:6Nimble11AwaitResultO"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "EnumElement",
          "usr": "s:6Nimble11AwaitResultO14blockedRunLoopyACyxGAEmlF",
          "mangledName": "$s6Nimble11AwaitResultO14blockedRunLoopyACyxGAEmlF",
          "moduleName": "Nimble",
          "declAttributes": [
            "RawDocComment"
          ],
          "fixedbinaryorder": 2
        },
        {
          "kind": "Var",
          "name": "completed",
          "printedName": "completed",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "GenericFunction",
              "printedName": "<τ_0_0> (Nimble.AwaitResult<τ_0_0>.Type) -> (τ_0_0) -> Nimble.AwaitResult<τ_0_0>",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(τ_0_0) -> Nimble.AwaitResult<τ_0_0>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "AwaitResult",
                      "printedName": "Nimble.AwaitResult<τ_0_0>",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "GenericTypeParam",
                          "printedName": "τ_0_0"
                        }
                      ],
                      "usr": "s:6Nimble11AwaitResultO"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    }
                  ]
                },
                {
                  "kind": "TypeNominal",
                  "name": "Metatype",
                  "printedName": "Nimble.AwaitResult<τ_0_0>.Type",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "AwaitResult",
                      "printedName": "Nimble.AwaitResult<τ_0_0>",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "GenericTypeParam",
                          "printedName": "τ_0_0"
                        }
                      ],
                      "usr": "s:6Nimble11AwaitResultO"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "EnumElement",
          "usr": "s:6Nimble11AwaitResultO9completedyACyxGxcAEmlF",
          "mangledName": "$s6Nimble11AwaitResultO9completedyACyxGxcAEmlF",
          "moduleName": "Nimble",
          "declAttributes": [
            "RawDocComment"
          ],
          "fixedbinaryorder": 3
        },
        {
          "kind": "Var",
          "name": "errorThrown",
          "printedName": "errorThrown",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "GenericFunction",
              "printedName": "<τ_0_0> (Nimble.AwaitResult<τ_0_0>.Type) -> (Swift.Error) -> Nimble.AwaitResult<τ_0_0>",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Swift.Error) -> Nimble.AwaitResult<τ_0_0>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "AwaitResult",
                      "printedName": "Nimble.AwaitResult<τ_0_0>",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "GenericTypeParam",
                          "printedName": "τ_0_0"
                        }
                      ],
                      "usr": "s:6Nimble11AwaitResultO"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "Error",
                      "printedName": "Swift.Error",
                      "usr": "s:s5ErrorP"
                    }
                  ]
                },
                {
                  "kind": "TypeNominal",
                  "name": "Metatype",
                  "printedName": "Nimble.AwaitResult<τ_0_0>.Type",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "AwaitResult",
                      "printedName": "Nimble.AwaitResult<τ_0_0>",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "GenericTypeParam",
                          "printedName": "τ_0_0"
                        }
                      ],
                      "usr": "s:6Nimble11AwaitResultO"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "EnumElement",
          "usr": "s:6Nimble11AwaitResultO11errorThrownyACyxGs5Error_pcAEmlF",
          "mangledName": "$s6Nimble11AwaitResultO11errorThrownyACyxGs5Error_pcAEmlF",
          "moduleName": "Nimble",
          "declAttributes": [
            "RawDocComment"
          ],
          "fixedbinaryorder": 4
        },
        {
          "kind": "Var",
          "name": "raisedException",
          "printedName": "raisedException",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "GenericFunction",
              "printedName": "<τ_0_0> (Nimble.AwaitResult<τ_0_0>.Type) -> (Foundation.NSException) -> Nimble.AwaitResult<τ_0_0>",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Foundation.NSException) -> Nimble.AwaitResult<τ_0_0>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "AwaitResult",
                      "printedName": "Nimble.AwaitResult<τ_0_0>",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "GenericTypeParam",
                          "printedName": "τ_0_0"
                        }
                      ],
                      "usr": "s:6Nimble11AwaitResultO"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "NSException",
                      "printedName": "Foundation.NSException",
                      "usr": "c:objc(cs)NSException"
                    }
                  ]
                },
                {
                  "kind": "TypeNominal",
                  "name": "Metatype",
                  "printedName": "Nimble.AwaitResult<τ_0_0>.Type",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "AwaitResult",
                      "printedName": "Nimble.AwaitResult<τ_0_0>",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "GenericTypeParam",
                          "printedName": "τ_0_0"
                        }
                      ],
                      "usr": "s:6Nimble11AwaitResultO"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "EnumElement",
          "usr": "s:6Nimble11AwaitResultO15raisedExceptionyACyxGSo11NSExceptionCcAEmlF",
          "mangledName": "$s6Nimble11AwaitResultO15raisedExceptionyACyxGSo11NSExceptionCcAEmlF",
          "moduleName": "Nimble",
          "declAttributes": [
            "RawDocComment"
          ],
          "fixedbinaryorder": 5
        },
        {
          "kind": "Function",
          "name": "isIncomplete",
          "printedName": "isIncomplete()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble11AwaitResultO12isIncompleteSbyF",
          "mangledName": "$s6Nimble11AwaitResultO12isIncompleteSbyF",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "isCompleted",
          "printedName": "isCompleted()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble11AwaitResultO11isCompletedSbyF",
          "mangledName": "$s6Nimble11AwaitResultO11isCompletedSbyF",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "funcSelfKind": "NonMutating"
        }
      ],
      "declKind": "Enum",
      "usr": "s:6Nimble11AwaitResultO",
      "mangledName": "$s6Nimble11AwaitResultO",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<T>",
      "declAttributes": [
        "AccessControl"
      ],
      "isEnumExhaustive": true,
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Sendable",
          "printedName": "Sendable",
          "usr": "s:s8SendableP",
          "mangledName": "$ss8SendableP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "AwaitPromise",
      "printedName": "AwaitPromise",
      "children": [
        {
          "kind": "Var",
          "name": "asyncResult",
          "printedName": "asyncResult",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "AwaitResult",
              "printedName": "Nimble.AwaitResult<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble11AwaitResultO"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble12AwaitPromiseC11asyncResultAA0bE0OyxGvp",
          "mangledName": "$s6Nimble12AwaitPromiseC11asyncResultAA0bE0OyxGvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "HasInitialValue",
            "Final",
            "HasStorage",
            "AccessControl",
            "SetterAccess"
          ],
          "fixedbinaryorder": 0,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "AwaitResult",
                  "printedName": "Nimble.AwaitResult<τ_0_0>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    }
                  ],
                  "usr": "s:6Nimble11AwaitResultO"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble12AwaitPromiseC11asyncResultAA0bE0OyxGvg",
              "mangledName": "$s6Nimble12AwaitPromiseC11asyncResultAA0bE0OyxGvg",
              "moduleName": "Nimble",
              "genericSig": "<τ_0_0>",
              "sugared_genericSig": "<T>",
              "implicit": true,
              "declAttributes": [
                "Transparent",
                "Final"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "signal",
          "printedName": "signal",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "DispatchSemaphore",
              "printedName": "Dispatch.DispatchSemaphore",
              "usr": "c:objc(cs)OS_dispatch_semaphore"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble12AwaitPromiseC6signal33_AC05A1B610115C3B08BF115598958097LLSo21OS_dispatch_semaphoreCvp",
          "mangledName": "$s6Nimble12AwaitPromiseC6signal33_AC05A1B610115C3B08BF115598958097LLSo21OS_dispatch_semaphoreCvp",
          "moduleName": "Nimble",
          "isInternal": true,
          "declAttributes": [
            "Final",
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 1,
          "hasStorage": true
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "AwaitPromise",
              "printedName": "Nimble.AwaitPromise<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble12AwaitPromiseC"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble12AwaitPromiseCACyxGycfc",
          "mangledName": "$s6Nimble12AwaitPromiseCACyxGycfc",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "init_kind": "Designated"
        },
        {
          "kind": "Function",
          "name": "resolveResult",
          "printedName": "resolveResult(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "AwaitResult",
              "printedName": "Nimble.AwaitResult<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble11AwaitResultO"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble12AwaitPromiseC13resolveResultySbAA0bE0OyxGF",
          "mangledName": "$s6Nimble12AwaitPromiseC13resolveResultySbAA0bE0OyxGF",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "declAttributes": [
            "Final",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        }
      ],
      "declKind": "Class",
      "usr": "s:6Nimble12AwaitPromiseC",
      "mangledName": "$s6Nimble12AwaitPromiseC",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<T>",
      "declAttributes": [
        "Final",
        "AccessControl",
        "RawDocComment"
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "AwaitTrigger",
      "printedName": "AwaitTrigger",
      "children": [
        {
          "kind": "Var",
          "name": "timeoutSource",
          "printedName": "timeoutSource",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "DispatchSourceTimer",
              "printedName": "Dispatch.DispatchSourceTimer",
              "usr": "c:objc(pl)OS_dispatch_source_timer"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble12AwaitTriggerV13timeoutSourceSo24OS_dispatch_source_timer_pvp",
          "mangledName": "$s6Nimble12AwaitTriggerV13timeoutSourceSo24OS_dispatch_source_timer_pvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "HasStorage"
          ],
          "fixedbinaryorder": 0,
          "isLet": true,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "DispatchSourceTimer",
                  "printedName": "Dispatch.DispatchSourceTimer",
                  "usr": "c:objc(pl)OS_dispatch_source_timer"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble12AwaitTriggerV13timeoutSourceSo24OS_dispatch_source_timer_pvg",
              "mangledName": "$s6Nimble12AwaitTriggerV13timeoutSourceSo24OS_dispatch_source_timer_pvg",
              "moduleName": "Nimble",
              "implicit": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "actionSource",
          "printedName": "actionSource",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "Dispatch.DispatchSourceTimer?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "DispatchSourceTimer",
                  "printedName": "Dispatch.DispatchSourceTimer",
                  "usr": "c:objc(pl)OS_dispatch_source_timer"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble12AwaitTriggerV12actionSourceSo24OS_dispatch_source_timer_pSgvp",
          "mangledName": "$s6Nimble12AwaitTriggerV12actionSourceSo24OS_dispatch_source_timer_pSgvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "HasStorage"
          ],
          "fixedbinaryorder": 1,
          "isLet": true,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Optional",
                  "printedName": "Dispatch.DispatchSourceTimer?",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "DispatchSourceTimer",
                      "printedName": "Dispatch.DispatchSourceTimer",
                      "usr": "c:objc(pl)OS_dispatch_source_timer"
                    }
                  ],
                  "usr": "s:Sq"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble12AwaitTriggerV12actionSourceSo24OS_dispatch_source_timer_pSgvg",
              "mangledName": "$s6Nimble12AwaitTriggerV12actionSourceSo24OS_dispatch_source_timer_pSgvg",
              "moduleName": "Nimble",
              "implicit": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "start",
          "printedName": "start",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "() throws -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ]
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble12AwaitTriggerV5startyyKcvp",
          "mangledName": "$s6Nimble12AwaitTriggerV5startyyKcvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "HasStorage"
          ],
          "fixedbinaryorder": 2,
          "isLet": true,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "() throws -> ()",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Void",
                      "printedName": "()"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "Void",
                      "printedName": "()"
                    }
                  ]
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble12AwaitTriggerV5startyyKcvg",
              "mangledName": "$s6Nimble12AwaitTriggerV5startyyKcvg",
              "moduleName": "Nimble",
              "implicit": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(timeoutSource:actionSource:start:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "AwaitTrigger",
              "printedName": "Nimble.AwaitTrigger",
              "usr": "s:6Nimble12AwaitTriggerV"
            },
            {
              "kind": "TypeNominal",
              "name": "DispatchSourceTimer",
              "printedName": "Dispatch.DispatchSourceTimer",
              "usr": "c:objc(pl)OS_dispatch_source_timer"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "Dispatch.DispatchSourceTimer?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "DispatchSourceTimer",
                  "printedName": "Dispatch.DispatchSourceTimer",
                  "usr": "c:objc(pl)OS_dispatch_source_timer"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "() throws -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ]
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble12AwaitTriggerV13timeoutSource06actionE05startACSo24OS_dispatch_source_timer_p_SoAG_pSgyyKctcfc",
          "mangledName": "$s6Nimble12AwaitTriggerV13timeoutSource06actionE05startACSo24OS_dispatch_source_timer_p_SoAG_pSgyyKctcfc",
          "moduleName": "Nimble",
          "implicit": true,
          "init_kind": "Designated"
        }
      ],
      "declKind": "Struct",
      "usr": "s:6Nimble12AwaitTriggerV",
      "mangledName": "$s6Nimble12AwaitTriggerV",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Sendable",
          "printedName": "Sendable",
          "usr": "s:s8SendableP",
          "mangledName": "$ss8SendableP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "AwaitPromiseBuilder",
      "printedName": "AwaitPromiseBuilder",
      "children": [
        {
          "kind": "Var",
          "name": "awaiter",
          "printedName": "awaiter",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Awaiter",
              "printedName": "Nimble.Awaiter",
              "usr": "s:6Nimble7AwaiterC"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble19AwaitPromiseBuilderC7awaiterAA7AwaiterCvp",
          "mangledName": "$s6Nimble19AwaitPromiseBuilderC7awaiterAA7AwaiterCvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "Final",
            "HasStorage"
          ],
          "fixedbinaryorder": 0,
          "isLet": true,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Awaiter",
                  "printedName": "Nimble.Awaiter",
                  "usr": "s:6Nimble7AwaiterC"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble19AwaitPromiseBuilderC7awaiterAA7AwaiterCvg",
              "mangledName": "$s6Nimble19AwaitPromiseBuilderC7awaiterAA7AwaiterCvg",
              "moduleName": "Nimble",
              "genericSig": "<τ_0_0>",
              "sugared_genericSig": "<T>",
              "implicit": true,
              "declAttributes": [
                "Transparent",
                "Final"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "waitLock",
          "printedName": "waitLock",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "WaitLock",
              "printedName": "Nimble.WaitLock",
              "usr": "s:6Nimble8WaitLockP"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble19AwaitPromiseBuilderC8waitLockAA04WaitF0_pvp",
          "mangledName": "$s6Nimble19AwaitPromiseBuilderC8waitLockAA04WaitF0_pvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "Final",
            "HasStorage"
          ],
          "fixedbinaryorder": 1,
          "isLet": true,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "WaitLock",
                  "printedName": "Nimble.WaitLock",
                  "usr": "s:6Nimble8WaitLockP"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble19AwaitPromiseBuilderC8waitLockAA04WaitF0_pvg",
              "mangledName": "$s6Nimble19AwaitPromiseBuilderC8waitLockAA04WaitF0_pvg",
              "moduleName": "Nimble",
              "genericSig": "<τ_0_0>",
              "sugared_genericSig": "<T>",
              "implicit": true,
              "declAttributes": [
                "Transparent",
                "Final"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "trigger",
          "printedName": "trigger",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "AwaitTrigger",
              "printedName": "Nimble.AwaitTrigger",
              "usr": "s:6Nimble12AwaitTriggerV"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble19AwaitPromiseBuilderC7triggerAA0B7TriggerVvp",
          "mangledName": "$s6Nimble19AwaitPromiseBuilderC7triggerAA0B7TriggerVvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "Final",
            "HasStorage"
          ],
          "fixedbinaryorder": 2,
          "isLet": true,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "AwaitTrigger",
                  "printedName": "Nimble.AwaitTrigger",
                  "usr": "s:6Nimble12AwaitTriggerV"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble19AwaitPromiseBuilderC7triggerAA0B7TriggerVvg",
              "mangledName": "$s6Nimble19AwaitPromiseBuilderC7triggerAA0B7TriggerVvg",
              "moduleName": "Nimble",
              "genericSig": "<τ_0_0>",
              "sugared_genericSig": "<T>",
              "implicit": true,
              "declAttributes": [
                "Transparent",
                "Final"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "promise",
          "printedName": "promise",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "AwaitPromise",
              "printedName": "Nimble.AwaitPromise<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble12AwaitPromiseC"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble19AwaitPromiseBuilderC7promiseAA0bC0CyxGvp",
          "mangledName": "$s6Nimble19AwaitPromiseBuilderC7promiseAA0bC0CyxGvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "Final",
            "HasStorage"
          ],
          "fixedbinaryorder": 3,
          "isLet": true,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "AwaitPromise",
                  "printedName": "Nimble.AwaitPromise<τ_0_0>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    }
                  ],
                  "usr": "s:6Nimble12AwaitPromiseC"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble19AwaitPromiseBuilderC7promiseAA0bC0CyxGvg",
              "mangledName": "$s6Nimble19AwaitPromiseBuilderC7promiseAA0bC0CyxGvg",
              "moduleName": "Nimble",
              "genericSig": "<τ_0_0>",
              "sugared_genericSig": "<T>",
              "implicit": true,
              "declAttributes": [
                "Transparent",
                "Final"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(awaiter:waitLock:promise:trigger:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "AwaitPromiseBuilder",
              "printedName": "Nimble.AwaitPromiseBuilder<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble19AwaitPromiseBuilderC"
            },
            {
              "kind": "TypeNominal",
              "name": "Awaiter",
              "printedName": "Nimble.Awaiter",
              "usr": "s:6Nimble7AwaiterC"
            },
            {
              "kind": "TypeNominal",
              "name": "WaitLock",
              "printedName": "Nimble.WaitLock",
              "usr": "s:6Nimble8WaitLockP"
            },
            {
              "kind": "TypeNominal",
              "name": "AwaitPromise",
              "printedName": "Nimble.AwaitPromise<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble12AwaitPromiseC"
            },
            {
              "kind": "TypeNominal",
              "name": "AwaitTrigger",
              "printedName": "Nimble.AwaitTrigger",
              "usr": "s:6Nimble12AwaitTriggerV"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble19AwaitPromiseBuilderC7awaiter8waitLock7promise7triggerACyxGAA7AwaiterC_AA04WaitG0_pAA0bC0CyxGAA0B7TriggerVtcfc",
          "mangledName": "$s6Nimble19AwaitPromiseBuilderC7awaiter8waitLock7promise7triggerACyxGAA7AwaiterC_AA04WaitG0_pAA0bC0CyxGAA0B7TriggerVtcfc",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "declAttributes": [
            "AccessControl"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Function",
          "name": "timeout",
          "printedName": "timeout(_:forcefullyAbortTimeout:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "DynamicSelf",
              "printedName": "Self"
            },
            {
              "kind": "TypeNominal",
              "name": "DispatchTimeInterval",
              "printedName": "Dispatch.DispatchTimeInterval",
              "usr": "s:8Dispatch0A12TimeIntervalO"
            },
            {
              "kind": "TypeNominal",
              "name": "DispatchTimeInterval",
              "printedName": "Dispatch.DispatchTimeInterval",
              "usr": "s:8Dispatch0A12TimeIntervalO"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble19AwaitPromiseBuilderC7timeout_22forcefullyAbortTimeoutACyxGXD8Dispatch0I12TimeIntervalO_AItF",
          "mangledName": "$s6Nimble19AwaitPromiseBuilderC7timeout_22forcefullyAbortTimeoutACyxGXD8Dispatch0I12TimeIntervalO_AItF",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "wait",
          "printedName": "wait(_:file:line:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "AwaitResult",
              "printedName": "Nimble.AwaitResult<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble11AwaitResultO"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "hasDefaultArg": true,
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "hasDefaultArg": true,
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "UInt",
              "printedName": "Swift.UInt",
              "hasDefaultArg": true,
              "usr": "s:Su"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble19AwaitPromiseBuilderC4wait_4file4lineAA0B6ResultOyxGSS_SSSutF",
          "mangledName": "$s6Nimble19AwaitPromiseBuilderC4wait_4file4lineAA0B6ResultOyxGSS_SSSutF",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "isOpen": true,
          "declAttributes": [
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        }
      ],
      "declKind": "Class",
      "usr": "s:6Nimble19AwaitPromiseBuilderC",
      "mangledName": "$s6Nimble19AwaitPromiseBuilderC",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<T>",
      "isOpen": true,
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "Awaiter",
      "printedName": "Awaiter",
      "children": [
        {
          "kind": "Var",
          "name": "waitLock",
          "printedName": "waitLock",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "WaitLock",
              "printedName": "Nimble.WaitLock",
              "usr": "s:6Nimble8WaitLockP"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble7AwaiterC8waitLockAA04WaitD0_pvp",
          "mangledName": "$s6Nimble7AwaiterC8waitLockAA04WaitD0_pvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "Final",
            "HasStorage"
          ],
          "fixedbinaryorder": 0,
          "isLet": true,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "WaitLock",
                  "printedName": "Nimble.WaitLock",
                  "usr": "s:6Nimble8WaitLockP"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble7AwaiterC8waitLockAA04WaitD0_pvg",
              "mangledName": "$s6Nimble7AwaiterC8waitLockAA04WaitD0_pvg",
              "moduleName": "Nimble",
              "implicit": true,
              "declAttributes": [
                "Transparent",
                "Final"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "timeoutQueue",
          "printedName": "timeoutQueue",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "DispatchQueue",
              "printedName": "Dispatch.DispatchQueue",
              "usr": "c:objc(cs)OS_dispatch_queue"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble7AwaiterC12timeoutQueueSo17OS_dispatch_queueCvp",
          "mangledName": "$s6Nimble7AwaiterC12timeoutQueueSo17OS_dispatch_queueCvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "Final",
            "HasStorage"
          ],
          "fixedbinaryorder": 1,
          "isLet": true,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "DispatchQueue",
                  "printedName": "Dispatch.DispatchQueue",
                  "usr": "c:objc(cs)OS_dispatch_queue"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble7AwaiterC12timeoutQueueSo17OS_dispatch_queueCvg",
              "mangledName": "$s6Nimble7AwaiterC12timeoutQueueSo17OS_dispatch_queueCvg",
              "moduleName": "Nimble",
              "implicit": true,
              "declAttributes": [
                "Transparent",
                "Final"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "asyncQueue",
          "printedName": "asyncQueue",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "DispatchQueue",
              "printedName": "Dispatch.DispatchQueue",
              "usr": "c:objc(cs)OS_dispatch_queue"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble7AwaiterC10asyncQueueSo17OS_dispatch_queueCvp",
          "mangledName": "$s6Nimble7AwaiterC10asyncQueueSo17OS_dispatch_queueCvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "Final",
            "HasStorage"
          ],
          "fixedbinaryorder": 2,
          "isLet": true,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "DispatchQueue",
                  "printedName": "Dispatch.DispatchQueue",
                  "usr": "c:objc(cs)OS_dispatch_queue"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble7AwaiterC10asyncQueueSo17OS_dispatch_queueCvg",
              "mangledName": "$s6Nimble7AwaiterC10asyncQueueSo17OS_dispatch_queueCvg",
              "moduleName": "Nimble",
              "implicit": true,
              "declAttributes": [
                "Transparent",
                "Final"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(waitLock:asyncQueue:timeoutQueue:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Awaiter",
              "printedName": "Nimble.Awaiter",
              "usr": "s:6Nimble7AwaiterC"
            },
            {
              "kind": "TypeNominal",
              "name": "WaitLock",
              "printedName": "Nimble.WaitLock",
              "usr": "s:6Nimble8WaitLockP"
            },
            {
              "kind": "TypeNominal",
              "name": "DispatchQueue",
              "printedName": "Dispatch.DispatchQueue",
              "usr": "c:objc(cs)OS_dispatch_queue"
            },
            {
              "kind": "TypeNominal",
              "name": "DispatchQueue",
              "printedName": "Dispatch.DispatchQueue",
              "usr": "c:objc(cs)OS_dispatch_queue"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble7AwaiterC8waitLock10asyncQueue07timeoutF0AcA04WaitD0_p_So17OS_dispatch_queueCAItcfc",
          "mangledName": "$s6Nimble7AwaiterC8waitLock10asyncQueue07timeoutF0AcA04WaitD0_p_So17OS_dispatch_queueCAItcfc",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Function",
          "name": "performBlock",
          "printedName": "performBlock(file:line:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "AwaitPromiseBuilder",
              "printedName": "Nimble.AwaitPromiseBuilder<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble19AwaitPromiseBuilderC"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "UInt",
              "printedName": "Swift.UInt",
              "usr": "s:Su"
            },
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(@escaping (τ_0_0) -> ()) throws -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(τ_0_0) -> ()",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Void",
                      "printedName": "()"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble7AwaiterC12performBlock4file4line_AA19AwaitPromiseBuilderCyxGSS_SuyyxcKctlF",
          "mangledName": "$s6Nimble7AwaiterC12performBlock4file4line_AA19AwaitPromiseBuilderCyxGSS_SuyyxcKctlF",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "poll",
          "printedName": "poll(_:closure:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "AwaitPromiseBuilder",
              "printedName": "Nimble.AwaitPromiseBuilder<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble19AwaitPromiseBuilderC"
            },
            {
              "kind": "TypeNominal",
              "name": "DispatchTimeInterval",
              "printedName": "Dispatch.DispatchTimeInterval",
              "usr": "s:8Dispatch0A12TimeIntervalO"
            },
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "() throws -> τ_0_0?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Optional",
                  "printedName": "τ_0_0?",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    }
                  ],
                  "usr": "s:Sq"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ]
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble7AwaiterC4poll_7closureAA19AwaitPromiseBuilderCyxG8Dispatch0H12TimeIntervalO_xSgyKctlF",
          "mangledName": "$s6Nimble7AwaiterC4poll_7closureAA19AwaitPromiseBuilderCyxG8Dispatch0H12TimeIntervalO_xSgyKctlF",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        }
      ],
      "declKind": "Class",
      "usr": "s:6Nimble7AwaiterC",
      "mangledName": "$s6Nimble7AwaiterC",
      "moduleName": "Nimble",
      "isOpen": true,
      "declAttributes": [
        "AccessControl"
      ]
    },
    {
      "kind": "Function",
      "name": "pollBlock",
      "printedName": "pollBlock(pollInterval:timeoutInterval:file:line:fnName:expression:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "AwaitResult",
          "printedName": "Nimble.AwaitResult<Swift.Bool>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            }
          ],
          "usr": "s:6Nimble11AwaitResultO"
        },
        {
          "kind": "TypeNominal",
          "name": "DispatchTimeInterval",
          "printedName": "Dispatch.DispatchTimeInterval",
          "usr": "s:8Dispatch0A12TimeIntervalO"
        },
        {
          "kind": "TypeNominal",
          "name": "DispatchTimeInterval",
          "printedName": "Dispatch.DispatchTimeInterval",
          "usr": "s:8Dispatch0A12TimeIntervalO"
        },
        {
          "kind": "TypeNominal",
          "name": "String",
          "printedName": "Swift.String",
          "usr": "s:SS"
        },
        {
          "kind": "TypeNominal",
          "name": "UInt",
          "printedName": "Swift.UInt",
          "usr": "s:Su"
        },
        {
          "kind": "TypeNominal",
          "name": "String",
          "printedName": "Swift.String",
          "hasDefaultArg": true,
          "usr": "s:SS"
        },
        {
          "kind": "TypeFunc",
          "name": "Function",
          "printedName": "() throws -> Swift.Bool",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            }
          ]
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble9pollBlock0B8Interval07timeoutD04file4line6fnName10expressionAA11AwaitResultOySbG8Dispatch0m4TimeD0O_ANSSSuSSSbyKctF",
      "mangledName": "$s6Nimble9pollBlock0B8Interval07timeoutD04file4line6fnName10expressionAA11AwaitResultOySbG8Dispatch0m4TimeD0O_ANSSSuSSSbyKctF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "beAKindOf",
      "printedName": "beAKindOf(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Any>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "ProtocolComposition",
              "printedName": "Any"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Metatype",
          "printedName": "τ_0_0.Type",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ]
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble9beAKindOfyAA9PredicateVyypGxmlF",
      "mangledName": "$s6Nimble9beAKindOfyAA9PredicateVyypGxmlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<T>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Function",
      "name": "beAKindOf",
      "printedName": "beAKindOf(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<ObjectiveC.NSObject>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NSObject",
              "printedName": "ObjectiveC.NSObject",
              "usr": "c:objc(cs)NSObject"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "ExistentialMetatype",
          "printedName": "AnyObject.Type",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "ProtocolComposition",
              "printedName": "AnyObject"
            }
          ]
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble9beAKindOfyAA9PredicateVySo8NSObjectCGyXlXpF",
      "mangledName": "$s6Nimble9beAKindOfyAA9PredicateVySo8NSObjectCGyXlXpF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Function",
      "name": "beAnInstanceOf",
      "printedName": "beAnInstanceOf(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Any>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "ProtocolComposition",
              "printedName": "Any"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Metatype",
          "printedName": "τ_0_0.Type",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ]
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble14beAnInstanceOfyAA9PredicateVyypGxmlF",
      "mangledName": "$s6Nimble14beAnInstanceOfyAA9PredicateVyypGxmlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<T>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "beAnInstanceOf",
      "printedName": "beAnInstanceOf(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<ObjectiveC.NSObject>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NSObject",
              "printedName": "ObjectiveC.NSObject",
              "usr": "c:objc(cs)NSObject"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "ExistentialMetatype",
          "printedName": "AnyObject.Type",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "ProtocolComposition",
              "printedName": "AnyObject"
            }
          ]
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble14beAnInstanceOfyAA9PredicateVySo8NSObjectCGyXlXpF",
      "mangledName": "$s6Nimble14beAnInstanceOfyAA9PredicateVySo8NSObjectCGyXlXpF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Var",
      "name": "DefaultDelta",
      "printedName": "DefaultDelta",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Double",
          "printedName": "Swift.Double",
          "usr": "s:Sd"
        }
      ],
      "declKind": "Var",
      "usr": "s:6Nimble12DefaultDeltaSdvp",
      "mangledName": "$s6Nimble12DefaultDeltaSdvp",
      "moduleName": "Nimble",
      "declAttributes": [
        "HasInitialValue",
        "HasStorage",
        "AccessControl",
        "RawDocComment"
      ],
      "isLet": true,
      "hasStorage": true
    },
    {
      "kind": "Function",
      "name": "defaultDelta",
      "printedName": "defaultDelta()",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "GenericTypeParam",
          "printedName": "τ_0_0"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble12defaultDeltaxySFRzlF",
      "mangledName": "$s6Nimble12defaultDeltaxySFRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.FloatingPoint>",
      "sugared_genericSig": "<F where F : Swift.FloatingPoint>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "isCloseTo",
      "printedName": "isCloseTo(_:expectedValue:delta:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "PredicateResult",
          "printedName": "Nimble.PredicateResult",
          "usr": "s:6Nimble15PredicateResultV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "τ_0_0?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:Sq"
        },
        {
          "kind": "TypeNominal",
          "name": "GenericTypeParam",
          "printedName": "τ_0_0"
        },
        {
          "kind": "TypeNominal",
          "name": "GenericTypeParam",
          "printedName": "τ_0_0"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble9isCloseTo_13expectedValue5deltaAA15PredicateResultVxSg_xxtSFRzlF",
      "mangledName": "$s6Nimble9isCloseTo_13expectedValue5deltaAA15PredicateResultVxSg_xxtSFRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.FloatingPoint>",
      "sugared_genericSig": "<Value where Value : Swift.FloatingPoint>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "isCloseTo",
      "printedName": "isCloseTo(_:expectedValue:delta:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "PredicateResult",
          "printedName": "Nimble.PredicateResult",
          "usr": "s:6Nimble15PredicateResultV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "Nimble.NMBDoubleConvertible?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBDoubleConvertible",
              "printedName": "Nimble.NMBDoubleConvertible",
              "usr": "s:6Nimble20NMBDoubleConvertibleP"
            }
          ],
          "usr": "s:Sq"
        },
        {
          "kind": "TypeNominal",
          "name": "NMBDoubleConvertible",
          "printedName": "Nimble.NMBDoubleConvertible",
          "usr": "s:6Nimble20NMBDoubleConvertibleP"
        },
        {
          "kind": "TypeNominal",
          "name": "Double",
          "printedName": "Swift.Double",
          "usr": "s:Sd"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble9isCloseTo_13expectedValue5deltaAA15PredicateResultVAA20NMBDoubleConvertible_pSg_AaG_pSdtF",
      "mangledName": "$s6Nimble9isCloseTo_13expectedValue5deltaAA15PredicateResultVAA20NMBDoubleConvertible_pSg_AaG_pSdtF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "beCloseTo",
      "printedName": "beCloseTo(_:within:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "GenericTypeParam",
          "printedName": "τ_0_0"
        },
        {
          "kind": "TypeNominal",
          "name": "GenericTypeParam",
          "printedName": "τ_0_0",
          "hasDefaultArg": true
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble9beCloseTo_6withinAA9PredicateVyxGx_xtSFRzlF",
      "mangledName": "$s6Nimble9beCloseTo_6withinAA9PredicateVyxGx_xtSFRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.FloatingPoint>",
      "sugared_genericSig": "<Value where Value : Swift.FloatingPoint>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "beCloseTo",
      "printedName": "beCloseTo(_:within:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "GenericTypeParam",
          "printedName": "τ_0_0"
        },
        {
          "kind": "TypeNominal",
          "name": "Double",
          "printedName": "Swift.Double",
          "hasDefaultArg": true,
          "usr": "s:Sd"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble9beCloseTo_6withinAA9PredicateVyxGx_SdtAA20NMBDoubleConvertibleRzlF",
      "mangledName": "$s6Nimble9beCloseTo_6withinAA9PredicateVyxGx_SdtAA20NMBDoubleConvertibleRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBDoubleConvertible>",
      "sugared_genericSig": "<Value where Value : Nimble.NMBDoubleConvertible>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "TypeDecl",
      "name": "NMBObjCBeCloseToPredicate",
      "printedName": "NMBObjCBeCloseToPredicate",
      "children": [
        {
          "kind": "Var",
          "name": "_expected",
          "printedName": "_expected",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NSNumber",
              "printedName": "Foundation.NSNumber",
              "usr": "c:objc(cs)NSNumber"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble25NMBObjCBeCloseToPredicateC9_expected33_0E9967D200034851A4E5F03A79E89DA2LLSo8NSNumberCvp",
          "mangledName": "$s6Nimble25NMBObjCBeCloseToPredicateC9_expected33_0E9967D200034851A4E5F03A79E89DA2LLSo8NSNumberCvp",
          "moduleName": "Nimble",
          "isInternal": true,
          "declAttributes": [
            "Final",
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 0,
          "isLet": true,
          "hasStorage": true
        },
        {
          "kind": "Var",
          "name": "within",
          "printedName": "within",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Swift.Double) -> Nimble.NMBObjCBeCloseToPredicate",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NMBObjCBeCloseToPredicate",
                  "printedName": "Nimble.NMBObjCBeCloseToPredicate",
                  "usr": "c:@M@Nimble@objc(cs)NMBObjCBeCloseToPredicate"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Double",
                  "printedName": "Swift.Double",
                  "usr": "s:Sd"
                }
              ]
            }
          ],
          "declKind": "Var",
          "usr": "c:@M@Nimble@objc(cs)NMBObjCBeCloseToPredicate(py)within",
          "mangledName": "$s6Nimble25NMBObjCBeCloseToPredicateC6withinyACSdcvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl",
            "ObjC"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Swift.Double) -> Nimble.NMBObjCBeCloseToPredicate",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "NMBObjCBeCloseToPredicate",
                      "printedName": "Nimble.NMBObjCBeCloseToPredicate",
                      "usr": "c:@M@Nimble@objc(cs)NMBObjCBeCloseToPredicate"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "Double",
                      "printedName": "Swift.Double",
                      "usr": "s:Sd"
                    }
                  ]
                }
              ],
              "declKind": "Accessor",
              "usr": "c:@M@Nimble@objc(cs)NMBObjCBeCloseToPredicate(im)within",
              "mangledName": "$s6Nimble25NMBObjCBeCloseToPredicateC6withinyACSdcvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "declAttributes": [
                "ObjC"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(predicate:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBObjCBeCloseToPredicate",
              "printedName": "Nimble.NMBObjCBeCloseToPredicate",
              "usr": "c:@M@Nimble@objc(cs)NMBObjCBeCloseToPredicate"
            },
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.Expression<ObjectiveC.NSObject>) throws -> Nimble.NMBPredicateResult",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NMBPredicateResult",
                  "printedName": "Nimble.NMBPredicateResult",
                  "usr": "c:@M@Nimble@objc(cs)NMBPredicateResult"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Expression",
                  "printedName": "Nimble.Expression<ObjectiveC.NSObject>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "NSObject",
                      "printedName": "ObjectiveC.NSObject",
                      "usr": "c:objc(cs)NSObject"
                    }
                  ],
                  "usr": "s:6Nimble10ExpressionV"
                }
              ]
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble25NMBObjCBeCloseToPredicateC9predicateAcA18NMBPredicateResultCAA10ExpressionVySo8NSObjectCGKc_tcfc",
          "mangledName": "$s6Nimble25NMBObjCBeCloseToPredicateC9predicateAcA18NMBPredicateResultCAA10ExpressionVySo8NSObjectCGKc_tcfc",
          "moduleName": "Nimble",
          "overriding": true,
          "implicit": true,
          "declAttributes": [
            "Override"
          ],
          "init_kind": "Designated"
        }
      ],
      "declKind": "Class",
      "usr": "c:@M@Nimble@objc(cs)NMBObjCBeCloseToPredicate",
      "mangledName": "$s6Nimble25NMBObjCBeCloseToPredicateC",
      "moduleName": "Nimble",
      "isOpen": true,
      "declAttributes": [
        "AccessControl",
        "ObjC"
      ],
      "superclassUsr": "c:@M@Nimble@objc(cs)NMBPredicate",
      "hasMissingDesignatedInitializers": true,
      "superclassNames": [
        "Nimble.NMBPredicate",
        "ObjectiveC.NSObject"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObservingPublishing",
          "printedName": "_KeyValueCodingAndObservingPublishing",
          "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
          "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObserving",
          "printedName": "_KeyValueCodingAndObserving",
          "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
          "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        }
      ]
    },
    {
      "kind": "Function",
      "name": "beCloseTo",
      "printedName": "beCloseTo(_:within:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_1>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_1"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "GenericTypeParam",
          "printedName": "τ_0_1"
        },
        {
          "kind": "TypeNominal",
          "name": "GenericTypeParam",
          "printedName": "τ_0_0",
          "hasDefaultArg": true
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble9beCloseTo_6withinAA9PredicateVyq_Gq__xtSFRz7ElementQy_RszSlR_r0_lF",
      "mangledName": "$s6Nimble9beCloseTo_6withinAA9PredicateVyq_Gq__xtSFRz7ElementQy_RszSlR_r0_lF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.FloatingPoint, τ_0_0 == τ_0_1.Element, τ_0_1 : Swift.Collection>",
      "sugared_genericSig": "<Value, Values where Value : Swift.FloatingPoint, Value == Values.Element, Values : Swift.Collection>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "OperatorDecl",
      "name": "≈",
      "printedName": "≈",
      "declKind": "InfixOperator",
      "moduleName": "Nimble",
      "declAttributes": [
        "Infix",
        "RawDocComment"
      ]
    },
    {
      "kind": "OperatorDecl",
      "name": "±",
      "printedName": "±",
      "declKind": "InfixOperator",
      "moduleName": "Nimble",
      "declAttributes": [
        "Infix"
      ]
    },
    {
      "kind": "Function",
      "name": "±",
      "printedName": "±(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Tuple",
          "printedName": "(expected: τ_0_0, delta: τ_0_0)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            },
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ]
        },
        {
          "kind": "TypeNominal",
          "name": "GenericTypeParam",
          "printedName": "τ_0_0"
        },
        {
          "kind": "TypeNominal",
          "name": "GenericTypeParam",
          "printedName": "τ_0_0"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble003obaoiyx8expected_x5deltatx_xtSFRzlF",
      "mangledName": "$s6Nimble003obaoiyx8expected_x5deltatx_xtSFRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.FloatingPoint>",
      "sugared_genericSig": "<Value where Value : Swift.FloatingPoint>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "±",
      "printedName": "±(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Tuple",
          "printedName": "(expected: τ_0_0, delta: Swift.Double)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            },
            {
              "kind": "TypeNominal",
              "name": "Double",
              "printedName": "Swift.Double",
              "usr": "s:Sd"
            }
          ]
        },
        {
          "kind": "TypeNominal",
          "name": "GenericTypeParam",
          "printedName": "τ_0_0"
        },
        {
          "kind": "TypeNominal",
          "name": "Double",
          "printedName": "Swift.Double",
          "usr": "s:Sd"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble003obaoiyx8expected_Sd5deltatx_SdtAA20NMBDoubleConvertibleRzlF",
      "mangledName": "$s6Nimble003obaoiyx8expected_Sd5deltatx_SdtAA20NMBDoubleConvertibleRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBDoubleConvertible>",
      "sugared_genericSig": "<Value where Value : Nimble.NMBDoubleConvertible>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Function",
      "name": "beEmpty",
      "printedName": "beEmpty()",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble7beEmptyAA9PredicateVyxGySTRzlF",
      "mangledName": "$s6Nimble7beEmptyAA9PredicateVyxGySTRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Sequence>",
      "sugared_genericSig": "<S where S : Swift.Sequence>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "beEmpty",
      "printedName": "beEmpty()",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble7beEmptyAA9PredicateVyxGys10SetAlgebraRzlF",
      "mangledName": "$s6Nimble7beEmptyAA9PredicateVyxGys10SetAlgebraRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.SetAlgebra>",
      "sugared_genericSig": "<S where S : Swift.SetAlgebra>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "beEmpty",
      "printedName": "beEmpty()",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble7beEmptyAA9PredicateVyxGySTRzs10SetAlgebraRzlF",
      "mangledName": "$s6Nimble7beEmptyAA9PredicateVyxGySTRzs10SetAlgebraRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Sequence, τ_0_0 : Swift.SetAlgebra>",
      "sugared_genericSig": "<S where S : Swift.Sequence, S : Swift.SetAlgebra>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "beEmpty",
      "printedName": "beEmpty()",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Swift.String>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble7beEmptyAA9PredicateVySSGyF",
      "mangledName": "$s6Nimble7beEmptyAA9PredicateVySSGyF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "beEmpty",
      "printedName": "beEmpty()",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Foundation.NSString>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NSString",
              "printedName": "Foundation.NSString",
              "usr": "c:objc(cs)NSString"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble7beEmptyAA9PredicateVySo8NSStringCGyF",
      "mangledName": "$s6Nimble7beEmptyAA9PredicateVySo8NSStringCGyF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "beEmpty",
      "printedName": "beEmpty()",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Foundation.NSDictionary>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NSDictionary",
              "printedName": "Foundation.NSDictionary",
              "usr": "c:objc(cs)NSDictionary"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble7beEmptyAA9PredicateVySo12NSDictionaryCGyF",
      "mangledName": "$s6Nimble7beEmptyAA9PredicateVySo12NSDictionaryCGyF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "beEmpty",
      "printedName": "beEmpty()",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Foundation.NSArray>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NSArray",
              "printedName": "Foundation.NSArray",
              "usr": "c:objc(cs)NSArray"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble7beEmptyAA9PredicateVySo7NSArrayCGyF",
      "mangledName": "$s6Nimble7beEmptyAA9PredicateVySo7NSArrayCGyF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "beEmpty",
      "printedName": "beEmpty()",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Nimble.NMBCollection>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBCollection",
              "printedName": "Nimble.NMBCollection",
              "usr": "s:6Nimble13NMBCollectionP"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble7beEmptyAA9PredicateVyAA13NMBCollection_pGyF",
      "mangledName": "$s6Nimble7beEmptyAA9PredicateVyAA13NMBCollection_pGyF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Function",
      "name": "beginWith",
      "printedName": "beginWith(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "DependentMember",
          "printedName": "τ_0_0.Element"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble9beginWithyAA9PredicateVyxG7ElementQzSTRzSQAGRQlF",
      "mangledName": "$s6Nimble9beginWithyAA9PredicateVyxG7ElementQzSTRzSQAGRQlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Sequence, τ_0_0.Element : Swift.Equatable>",
      "sugared_genericSig": "<S where S : Swift.Sequence, S.Element : Swift.Equatable>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "beginWith",
      "printedName": "beginWith(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Nimble.NMBOrderedCollection>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBOrderedCollection",
              "printedName": "Nimble.NMBOrderedCollection",
              "usr": "s:6Nimble20NMBOrderedCollectionP"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "ProtocolComposition",
          "printedName": "Any"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble9beginWithyAA9PredicateVyAA20NMBOrderedCollection_pGypF",
      "mangledName": "$s6Nimble9beginWithyAA9PredicateVyAA20NMBOrderedCollection_pGypF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "beginWith",
      "printedName": "beginWith(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Swift.String>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "String",
          "printedName": "Swift.String",
          "usr": "s:SS"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble9beginWithyAA9PredicateVySSGSSF",
      "mangledName": "$s6Nimble9beginWithyAA9PredicateVySSGSSF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "beginWith",
      "printedName": "beginWith(prefix:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "τ_0_1?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_1"
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble9beginWith6prefixAA9PredicateVyxGq_Sg_tSTRzSTR_SQ7ElementRpzAHQy_AIRSr0_lF",
      "mangledName": "$s6Nimble9beginWith6prefixAA9PredicateVyxGq_Sg_tSTRzSTR_SQ7ElementRpzAHQy_AIRSr0_lF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Sequence, τ_0_1 : Swift.Sequence, τ_0_0.Element : Swift.Equatable, τ_0_0.Element == τ_0_1.Element>",
      "sugared_genericSig": "<Seq1, Seq2 where Seq1 : Swift.Sequence, Seq2 : Swift.Sequence, Seq1.Element : Swift.Equatable, Seq1.Element == Seq2.Element>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "beginWith",
      "printedName": "beginWith(prefix:by:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "τ_0_1?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_1"
            }
          ],
          "usr": "s:Sq"
        },
        {
          "kind": "TypeFunc",
          "name": "Function",
          "printedName": "(τ_0_0.Element, τ_0_1.Element) -> Swift.Bool",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0.Element, τ_0_1.Element)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "DependentMember",
                  "printedName": "τ_0_0.Element"
                },
                {
                  "kind": "TypeNominal",
                  "name": "DependentMember",
                  "printedName": "τ_0_1.Element"
                }
              ]
            }
          ]
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble9beginWith6prefix2byAA9PredicateVyxGq_Sg_Sb7ElementQz_AIQy_tctSTRzSTR_r0_lF",
      "mangledName": "$s6Nimble9beginWith6prefix2byAA9PredicateVyxGq_Sg_Sb7ElementQz_AIQy_tctSTRzSTR_r0_lF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Sequence, τ_0_1 : Swift.Sequence>",
      "sugared_genericSig": "<Seq1, Seq2 where Seq1 : Swift.Sequence, Seq2 : Swift.Sequence>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "beGreaterThan",
      "printedName": "beGreaterThan(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "τ_0_0?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble13beGreaterThanyAA9PredicateVyxGxSgSLRzlF",
      "mangledName": "$s6Nimble13beGreaterThanyAA9PredicateVyxGxSgSLRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable>",
      "sugared_genericSig": "<T where T : Swift.Comparable>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": ">",
      "printedName": ">(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "GenericTypeParam",
          "printedName": "τ_0_0"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble1goiyyAA11ExpectationVyxG_xtSLRzlF",
      "mangledName": "$s6Nimble1goiyyAA11ExpectationVyxG_xtSLRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable>",
      "sugared_genericSig": "<T where T : Swift.Comparable>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Function",
      "name": "beGreaterThan",
      "printedName": "beGreaterThan(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Nimble.NMBComparable>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBComparable",
              "printedName": "Nimble.NMBComparable",
              "usr": "c:@M@Nimble@objc(pl)NMBComparable"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "Nimble.NMBComparable?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBComparable",
              "printedName": "Nimble.NMBComparable",
              "usr": "c:@M@Nimble@objc(pl)NMBComparable"
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble13beGreaterThanyAA9PredicateVyAA13NMBComparable_pGAaE_pSgF",
      "mangledName": "$s6Nimble13beGreaterThanyAA9PredicateVyAA13NMBComparable_pGAaE_pSgF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": ">",
      "printedName": ">(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<Nimble.NMBComparable>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBComparable",
              "printedName": "Nimble.NMBComparable",
              "usr": "c:@M@Nimble@objc(pl)NMBComparable"
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "Nimble.NMBComparable?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBComparable",
              "printedName": "Nimble.NMBComparable",
              "usr": "c:@M@Nimble@objc(pl)NMBComparable"
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble1goiyyAA11ExpectationVyAA13NMBComparable_pG_AaE_pSgtF",
      "mangledName": "$s6Nimble1goiyyAA11ExpectationVyAA13NMBComparable_pG_AaE_pSgtF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "beGreaterThanOrEqualTo",
      "printedName": "beGreaterThanOrEqualTo(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "τ_0_0?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble22beGreaterThanOrEqualToyAA9PredicateVyxGxSgSLRzlF",
      "mangledName": "$s6Nimble22beGreaterThanOrEqualToyAA9PredicateVyxGxSgSLRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable>",
      "sugared_genericSig": "<T where T : Swift.Comparable>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": ">=",
      "printedName": ">=(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "GenericTypeParam",
          "printedName": "τ_0_0"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2geoiyyAA11ExpectationVyxG_xtSLRzlF",
      "mangledName": "$s6Nimble2geoiyyAA11ExpectationVyxG_xtSLRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable>",
      "sugared_genericSig": "<T where T : Swift.Comparable>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Function",
      "name": "beGreaterThanOrEqualTo",
      "printedName": "beGreaterThanOrEqualTo(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "τ_0_0?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble22beGreaterThanOrEqualToyAA9PredicateVyxGxSgAA13NMBComparableRzlF",
      "mangledName": "$s6Nimble22beGreaterThanOrEqualToyAA9PredicateVyxGxSgAA13NMBComparableRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBComparable>",
      "sugared_genericSig": "<T where T : Nimble.NMBComparable>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": ">=",
      "printedName": ">=(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "GenericTypeParam",
          "printedName": "τ_0_0"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2geoiyyAA11ExpectationVyxG_xtAA13NMBComparableRzlF",
      "mangledName": "$s6Nimble2geoiyyAA11ExpectationVyxG_xtAA13NMBComparableRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBComparable>",
      "sugared_genericSig": "<T where T : Nimble.NMBComparable>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "beIdenticalTo",
      "printedName": "beIdenticalTo(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<AnyObject>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "ProtocolComposition",
              "printedName": "AnyObject"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "AnyObject?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "ProtocolComposition",
              "printedName": "AnyObject"
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble13beIdenticalToyAA9PredicateVyyXlGyXlSgF",
      "mangledName": "$s6Nimble13beIdenticalToyAA9PredicateVyyXlGyXlSgF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "be",
      "printedName": "be(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<AnyObject>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "ProtocolComposition",
              "printedName": "AnyObject"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "AnyObject?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "ProtocolComposition",
              "printedName": "AnyObject"
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2beyAA9PredicateVyyXlGyXlSgF",
      "mangledName": "$s6Nimble2beyAA9PredicateVyyXlGyXlSgF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Function",
      "name": "beLessThan",
      "printedName": "beLessThan(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "τ_0_0?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble10beLessThanyAA9PredicateVyxGxSgSLRzlF",
      "mangledName": "$s6Nimble10beLessThanyAA9PredicateVyxGxSgSLRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable>",
      "sugared_genericSig": "<T where T : Swift.Comparable>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "<",
      "printedName": "<(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "GenericTypeParam",
          "printedName": "τ_0_0"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble1loiyyAA11ExpectationVyxG_xtSLRzlF",
      "mangledName": "$s6Nimble1loiyyAA11ExpectationVyxG_xtSLRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable>",
      "sugared_genericSig": "<T where T : Swift.Comparable>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Function",
      "name": "beLessThan",
      "printedName": "beLessThan(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Nimble.NMBComparable>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBComparable",
              "printedName": "Nimble.NMBComparable",
              "usr": "c:@M@Nimble@objc(pl)NMBComparable"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "Nimble.NMBComparable?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBComparable",
              "printedName": "Nimble.NMBComparable",
              "usr": "c:@M@Nimble@objc(pl)NMBComparable"
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble10beLessThanyAA9PredicateVyAA13NMBComparable_pGAaE_pSgF",
      "mangledName": "$s6Nimble10beLessThanyAA9PredicateVyAA13NMBComparable_pGAaE_pSgF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "<",
      "printedName": "<(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<Nimble.NMBComparable>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBComparable",
              "printedName": "Nimble.NMBComparable",
              "usr": "c:@M@Nimble@objc(pl)NMBComparable"
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "Nimble.NMBComparable?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBComparable",
              "printedName": "Nimble.NMBComparable",
              "usr": "c:@M@Nimble@objc(pl)NMBComparable"
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble1loiyyAA11ExpectationVyAA13NMBComparable_pG_AaE_pSgtF",
      "mangledName": "$s6Nimble1loiyyAA11ExpectationVyAA13NMBComparable_pG_AaE_pSgtF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "beLessThanOrEqualTo",
      "printedName": "beLessThanOrEqualTo(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "τ_0_0?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble19beLessThanOrEqualToyAA9PredicateVyxGxSgSLRzlF",
      "mangledName": "$s6Nimble19beLessThanOrEqualToyAA9PredicateVyxGxSgSLRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable>",
      "sugared_genericSig": "<T where T : Swift.Comparable>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "<=",
      "printedName": "<=(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "GenericTypeParam",
          "printedName": "τ_0_0"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2leoiyyAA11ExpectationVyxG_xtSLRzlF",
      "mangledName": "$s6Nimble2leoiyyAA11ExpectationVyxG_xtSLRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable>",
      "sugared_genericSig": "<T where T : Swift.Comparable>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Function",
      "name": "beLessThanOrEqualTo",
      "printedName": "beLessThanOrEqualTo(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "τ_0_0?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble19beLessThanOrEqualToyAA9PredicateVyxGxSgAA13NMBComparableRzlF",
      "mangledName": "$s6Nimble19beLessThanOrEqualToyAA9PredicateVyxGxSgAA13NMBComparableRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBComparable>",
      "sugared_genericSig": "<T where T : Nimble.NMBComparable>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "<=",
      "printedName": "<=(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "GenericTypeParam",
          "printedName": "τ_0_0"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2leoiyyAA11ExpectationVyxG_xtAA13NMBComparableRzlF",
      "mangledName": "$s6Nimble2leoiyyAA11ExpectationVyxG_xtAA13NMBComparableRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBComparable>",
      "sugared_genericSig": "<T where T : Nimble.NMBComparable>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Function",
      "name": "rename",
      "printedName": "rename(_:failureMessage:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "ExpectationMessage",
          "printedName": "Nimble.ExpectationMessage",
          "usr": "s:6Nimble18ExpectationMessageO"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble6rename_14failureMessageAA9PredicateVyxGAF_AA011ExpectationD0OtlF",
      "mangledName": "$s6Nimble6rename_14failureMessageAA9PredicateVyxGAF_AA011ExpectationD0OtlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<T>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "beTrue",
      "printedName": "beTrue()",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Swift.Bool>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble6beTrueAA9PredicateVySbGyF",
      "mangledName": "$s6Nimble6beTrueAA9PredicateVySbGyF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "beFalse",
      "printedName": "beFalse()",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Swift.Bool>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble7beFalseAA9PredicateVySbGyF",
      "mangledName": "$s6Nimble7beFalseAA9PredicateVySbGyF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "beTruthy",
      "printedName": "beTruthy()",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble8beTruthyAA9PredicateVyxGySQRzs27ExpressibleByBooleanLiteralRzlF",
      "mangledName": "$s6Nimble8beTruthyAA9PredicateVyxGySQRzs27ExpressibleByBooleanLiteralRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Equatable, τ_0_0 : Swift.ExpressibleByBooleanLiteral>",
      "sugared_genericSig": "<T where T : Swift.Equatable, T : Swift.ExpressibleByBooleanLiteral>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "beFalsy",
      "printedName": "beFalsy()",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble7beFalsyAA9PredicateVyxGySQRzs27ExpressibleByBooleanLiteralRzlF",
      "mangledName": "$s6Nimble7beFalsyAA9PredicateVyxGySQRzs27ExpressibleByBooleanLiteralRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Equatable, τ_0_0 : Swift.ExpressibleByBooleanLiteral>",
      "sugared_genericSig": "<T where T : Swift.Equatable, T : Swift.ExpressibleByBooleanLiteral>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "beNil",
      "printedName": "beNil()",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble5beNilAA9PredicateVyxGylF",
      "mangledName": "$s6Nimble5beNilAA9PredicateVyxGylF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<T>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Function",
      "name": "beSuccess",
      "printedName": "beSuccess(test:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Swift.Result<τ_0_0, τ_0_1>>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Result",
              "printedName": "Swift.Result<τ_0_0, τ_0_1>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                }
              ],
              "usr": "s:s6ResultO"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "((τ_0_0) -> ())?",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(τ_0_0) -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ]
            }
          ],
          "hasDefaultArg": true,
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble9beSuccess4testAA9PredicateVys6ResultOyxq_GGyxcSg_ts5ErrorR_r0_lF",
      "mangledName": "$s6Nimble9beSuccess4testAA9PredicateVys6ResultOyxq_GGyxcSg_ts5ErrorR_r0_lF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0, τ_0_1 where τ_0_1 : Swift.Error>",
      "sugared_genericSig": "<Success, Failure where Failure : Swift.Error>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "beFailure",
      "printedName": "beFailure(test:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Swift.Result<τ_0_0, τ_0_1>>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Result",
              "printedName": "Swift.Result<τ_0_0, τ_0_1>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                }
              ],
              "usr": "s:s6ResultO"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "((τ_0_1) -> ())?",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(τ_0_1) -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                }
              ]
            }
          ],
          "hasDefaultArg": true,
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble9beFailure4testAA9PredicateVys6ResultOyxq_GGyq_cSg_ts5ErrorR_r0_lF",
      "mangledName": "$s6Nimble9beFailure4testAA9PredicateVys6ResultOyxq_GGyq_cSg_ts5ErrorR_r0_lF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0, τ_0_1 where τ_0_1 : Swift.Error>",
      "sugared_genericSig": "<Success, Failure where Failure : Swift.Error>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "beVoid",
      "printedName": "beVoid()",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<()>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble6beVoidAA9PredicateVyytGyF",
      "mangledName": "$s6Nimble6beVoidAA9PredicateVyytGyF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "beWithin",
      "printedName": "beWithin(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Range",
          "printedName": "Swift.Range<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:Sn"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble8beWithinyAA9PredicateVyxGSnyxGSLRzlF",
      "mangledName": "$s6Nimble8beWithinyAA9PredicateVyxGSnyxGSLRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable>",
      "sugared_genericSig": "<T where T : Swift.Comparable>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "beWithin",
      "printedName": "beWithin(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "ClosedRange",
          "printedName": "Swift.ClosedRange<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:SN"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble8beWithinyAA9PredicateVyxGSNyxGSLRzlF",
      "mangledName": "$s6Nimble8beWithinyAA9PredicateVyxGSNyxGSLRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable>",
      "sugared_genericSig": "<T where T : Swift.Comparable>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Function",
      "name": "contain",
      "printedName": "contain(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Array",
          "printedName": "[τ_0_0.Element]",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "DependentMember",
              "printedName": "τ_0_0.Element"
            }
          ],
          "usr": "s:Sa"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble7containyAA9PredicateVyxG7ElementQzd_tSTRzSQAGRQlF",
      "mangledName": "$s6Nimble7containyAA9PredicateVyxG7ElementQzd_tSTRzSQAGRQlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Sequence, τ_0_0.Element : Swift.Equatable>",
      "sugared_genericSig": "<S where S : Swift.Sequence, S.Element : Swift.Equatable>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "contain",
      "printedName": "contain(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Array",
          "printedName": "[τ_0_0.Element]",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "DependentMember",
              "printedName": "τ_0_0.Element"
            }
          ],
          "usr": "s:Sa"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble7containyAA9PredicateVyxGSay7ElementQzGSTRzSQAGRQlF",
      "mangledName": "$s6Nimble7containyAA9PredicateVyxGSay7ElementQzGSTRzSQAGRQlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Sequence, τ_0_0.Element : Swift.Equatable>",
      "sugared_genericSig": "<S where S : Swift.Sequence, S.Element : Swift.Equatable>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "contain",
      "printedName": "contain(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Array",
          "printedName": "[τ_0_0.Element]",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "DependentMember",
              "printedName": "τ_0_0.Element"
            }
          ],
          "usr": "s:Sa"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble7containyAA9PredicateVyxG7ElementQzd_ts10SetAlgebraRzSQAGRQlF",
      "mangledName": "$s6Nimble7containyAA9PredicateVyxG7ElementQzd_ts10SetAlgebraRzSQAGRQlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.SetAlgebra, τ_0_0.Element : Swift.Equatable>",
      "sugared_genericSig": "<S where S : Swift.SetAlgebra, S.Element : Swift.Equatable>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "contain",
      "printedName": "contain(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Array",
          "printedName": "[τ_0_0.Element]",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "DependentMember",
              "printedName": "τ_0_0.Element"
            }
          ],
          "usr": "s:Sa"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble7containyAA9PredicateVyxGSay7ElementQzGs10SetAlgebraRzSQAGRQlF",
      "mangledName": "$s6Nimble7containyAA9PredicateVyxGSay7ElementQzGs10SetAlgebraRzSQAGRQlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.SetAlgebra, τ_0_0.Element : Swift.Equatable>",
      "sugared_genericSig": "<S where S : Swift.SetAlgebra, S.Element : Swift.Equatable>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "contain",
      "printedName": "contain(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Array",
          "printedName": "[τ_0_0.Element]",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "DependentMember",
              "printedName": "τ_0_0.Element"
            }
          ],
          "usr": "s:Sa"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble7containyAA9PredicateVyxG7ElementSTQzd_tSTRzs10SetAlgebraRzSQAGRQlF",
      "mangledName": "$s6Nimble7containyAA9PredicateVyxG7ElementSTQzd_tSTRzs10SetAlgebraRzSQAGRQlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Sequence, τ_0_0 : Swift.SetAlgebra, τ_0_0.Element : Swift.Equatable>",
      "sugared_genericSig": "<S where S : Swift.Sequence, S : Swift.SetAlgebra, S.Element : Swift.Equatable>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "contain",
      "printedName": "contain(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Array",
          "printedName": "[τ_0_0.Element]",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "DependentMember",
              "printedName": "τ_0_0.Element"
            }
          ],
          "usr": "s:Sa"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble7containyAA9PredicateVyxGSay7ElementSTQzGSTRzs10SetAlgebraRzSQAGRQlF",
      "mangledName": "$s6Nimble7containyAA9PredicateVyxGSay7ElementSTQzGSTRzs10SetAlgebraRzSQAGRQlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Sequence, τ_0_0 : Swift.SetAlgebra, τ_0_0.Element : Swift.Equatable>",
      "sugared_genericSig": "<S where S : Swift.Sequence, S : Swift.SetAlgebra, S.Element : Swift.Equatable>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "contain",
      "printedName": "contain(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Swift.String>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Array",
          "printedName": "[Swift.String]",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "usr": "s:Sa"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble7containyAA9PredicateVySSGSSd_tF",
      "mangledName": "$s6Nimble7containyAA9PredicateVySSGSSd_tF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "contain",
      "printedName": "contain(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Swift.String>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Array",
          "printedName": "[Swift.String]",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "usr": "s:Sa"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble7containyAA9PredicateVySSGSaySSGF",
      "mangledName": "$s6Nimble7containyAA9PredicateVySSGSaySSGF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "contain",
      "printedName": "contain(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Foundation.NSString>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NSString",
              "printedName": "Foundation.NSString",
              "usr": "c:objc(cs)NSString"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Array",
          "printedName": "[Foundation.NSString]",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NSString",
              "printedName": "Foundation.NSString",
              "usr": "c:objc(cs)NSString"
            }
          ],
          "usr": "s:Sa"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble7containyAA9PredicateVySo8NSStringCGAFd_tF",
      "mangledName": "$s6Nimble7containyAA9PredicateVySo8NSStringCGAFd_tF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "contain",
      "printedName": "contain(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Foundation.NSString>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NSString",
              "printedName": "Foundation.NSString",
              "usr": "c:objc(cs)NSString"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Array",
          "printedName": "[Foundation.NSString]",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NSString",
              "printedName": "Foundation.NSString",
              "usr": "c:objc(cs)NSString"
            }
          ],
          "usr": "s:Sa"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble7containyAA9PredicateVySo8NSStringCGSayAFGF",
      "mangledName": "$s6Nimble7containyAA9PredicateVySo8NSStringCGSayAFGF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "contain",
      "printedName": "contain(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Nimble.NMBContainer>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBContainer",
              "printedName": "Nimble.NMBContainer",
              "usr": "s:6Nimble12NMBContainerP"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Array",
          "printedName": "[Any?]",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "Any?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ProtocolComposition",
                  "printedName": "Any"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "usr": "s:Sa"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble7containyAA9PredicateVyAA12NMBContainer_pGypSgd_tF",
      "mangledName": "$s6Nimble7containyAA9PredicateVyAA12NMBContainer_pGypSgd_tF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "contain",
      "printedName": "contain(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Nimble.NMBContainer>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBContainer",
              "printedName": "Nimble.NMBContainer",
              "usr": "s:6Nimble12NMBContainerP"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Array",
          "printedName": "[Any?]",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "Any?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ProtocolComposition",
                  "printedName": "Any"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "usr": "s:Sa"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble7containyAA9PredicateVyAA12NMBContainer_pGSayypSgGF",
      "mangledName": "$s6Nimble7containyAA9PredicateVyAA12NMBContainer_pGSayypSgGF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "containElementSatisfying",
      "printedName": "containElementSatisfying(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeFunc",
          "name": "Function",
          "printedName": "(τ_0_0.Element) -> Swift.Bool",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "DependentMember",
              "printedName": "τ_0_0.Element"
            }
          ]
        },
        {
          "kind": "TypeNominal",
          "name": "String",
          "printedName": "Swift.String",
          "hasDefaultArg": true,
          "usr": "s:SS"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble24containElementSatisfyingyAA9PredicateVyxGSb0C0Qzc_SStSTRzlF",
      "mangledName": "$s6Nimble24containElementSatisfyingyAA9PredicateVyxGSb0C0Qzc_SStSTRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Sequence>",
      "sugared_genericSig": "<S where S : Swift.Sequence>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Var",
      "name": "raiseBadInstructionException",
      "printedName": "raiseBadInstructionException",
      "children": [
        {
          "kind": "TypeFunc",
          "name": "Function",
          "printedName": "() -> ()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            }
          ]
        }
      ],
      "declKind": "Var",
      "usr": "s:6Nimble28raiseBadInstructionExceptionyyXCvp",
      "mangledName": "$s6Nimble28raiseBadInstructionExceptionyyXCvp",
      "moduleName": "Nimble",
      "declAttributes": [
        "HasInitialValue",
        "HasStorage"
      ],
      "hasStorage": true
    },
    {
      "kind": "TypeDecl",
      "name": "BadInstructionException",
      "printedName": "BadInstructionException",
      "children": [
        {
          "kind": "Var",
          "name": "name",
          "printedName": "name",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble23BadInstructionExceptionC4nameSSvpZ",
          "mangledName": "$s6Nimble23BadInstructionExceptionC4nameSSvpZ",
          "moduleName": "Nimble",
          "static": true,
          "declAttributes": [
            "HasInitialValue",
            "Final",
            "HasStorage"
          ],
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble23BadInstructionExceptionC4nameSSvgZ",
              "mangledName": "$s6Nimble23BadInstructionExceptionC4nameSSvgZ",
              "moduleName": "Nimble",
              "static": true,
              "implicit": true,
              "declAttributes": [
                "Final"
              ],
              "accessorKind": "get"
            },
            {
              "kind": "Accessor",
              "name": "Set",
              "printedName": "Set()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble23BadInstructionExceptionC4nameSSvsZ",
              "mangledName": "$s6Nimble23BadInstructionExceptionC4nameSSvsZ",
              "moduleName": "Nimble",
              "static": true,
              "implicit": true,
              "declAttributes": [
                "Final"
              ],
              "accessorKind": "set"
            },
            {
              "kind": "Accessor",
              "name": "Modify",
              "printedName": "Modify()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble23BadInstructionExceptionC4nameSSvMZ",
              "mangledName": "$s6Nimble23BadInstructionExceptionC4nameSSvMZ",
              "moduleName": "Nimble",
              "static": true,
              "implicit": true,
              "declAttributes": [
                "Final"
              ],
              "accessorKind": "_modify"
            }
          ]
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "BadInstructionException",
              "printedName": "Nimble.BadInstructionException",
              "usr": "c:@M@Nimble@objc(cs)BadInstructionException"
            }
          ],
          "declKind": "Constructor",
          "usr": "c:@M@Nimble@objc(cs)BadInstructionException(im)init",
          "mangledName": "$s6Nimble23BadInstructionExceptionCACycfc",
          "moduleName": "Nimble",
          "overriding": true,
          "objc_name": "init",
          "declAttributes": [
            "Dynamic",
            "ObjC"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(coder:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "Nimble.BadInstructionException?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "BadInstructionException",
                  "printedName": "Nimble.BadInstructionException",
                  "usr": "c:@M@Nimble@objc(cs)BadInstructionException"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "NSCoder",
              "printedName": "Foundation.NSCoder",
              "usr": "c:objc(cs)NSCoder"
            }
          ],
          "declKind": "Constructor",
          "usr": "c:@M@Nimble@objc(cs)BadInstructionException(im)initWithCoder:",
          "mangledName": "$s6Nimble23BadInstructionExceptionC5coderACSgSo7NSCoderC_tcfc",
          "moduleName": "Nimble",
          "overriding": true,
          "objc_name": "initWithCoder:",
          "declAttributes": [
            "Dynamic",
            "ObjC",
            "AccessControl",
            "Required"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Function",
          "name": "receiveReply",
          "printedName": "receiveReply(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int32",
              "printedName": "Swift.Int32",
              "usr": "s:s5Int32V"
            },
            {
              "kind": "TypeNominal",
              "name": "bad_instruction_exception_reply_t",
              "printedName": "Nimble.bad_instruction_exception_reply_t",
              "usr": "c:@SA@bad_instruction_exception_reply_t"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@Nimble@objc(cs)BadInstructionException(cm)receiveReply:",
          "mangledName": "$s6Nimble23BadInstructionExceptionC12receiveReplyys5Int32VSo33bad_instruction_exception_reply_taFZ",
          "moduleName": "Nimble",
          "static": true,
          "isOpen": true,
          "objc_name": "receiveReply:",
          "declAttributes": [
            "AccessControl",
            "ObjC",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(name:reason:userInfo:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "BadInstructionException",
              "printedName": "Nimble.BadInstructionException",
              "usr": "c:@M@Nimble@objc(cs)BadInstructionException"
            },
            {
              "kind": "TypeNominal",
              "name": "NSExceptionName",
              "printedName": "Foundation.NSExceptionName",
              "usr": "c:@T@NSExceptionName"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "Swift.String?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "[Swift.AnyHashable : Any]?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Dictionary",
                  "printedName": "[Swift.AnyHashable : Any]",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "AnyHashable",
                      "printedName": "Swift.AnyHashable",
                      "usr": "s:s11AnyHashableV"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "ProtocolComposition",
                      "printedName": "Any"
                    }
                  ],
                  "usr": "s:SD"
                }
              ],
              "hasDefaultArg": true,
              "usr": "s:Sq"
            }
          ],
          "declKind": "Constructor",
          "usr": "c:@M@Nimble@objc(cs)BadInstructionException(im)initWithName:reason:userInfo:",
          "mangledName": "$s6Nimble23BadInstructionExceptionC4name6reason8userInfoACSo15NSExceptionNamea_SSSgSDys11AnyHashableVypGSgtcfc",
          "moduleName": "Nimble",
          "overriding": true,
          "implicit": true,
          "objc_name": "initWithName:reason:userInfo:",
          "declAttributes": [
            "Dynamic",
            "ObjC",
            "Override"
          ],
          "init_kind": "Designated"
        }
      ],
      "declKind": "Class",
      "usr": "c:@M@Nimble@objc(cs)BadInstructionException",
      "mangledName": "$s6Nimble23BadInstructionExceptionC",
      "moduleName": "Nimble",
      "isOpen": true,
      "objc_name": "BadInstructionException",
      "declAttributes": [
        "AccessControl",
        "ObjC",
        "RawDocComment"
      ],
      "superclassUsr": "c:objc(cs)NSException",
      "hasMissingDesignatedInitializers": true,
      "superclassNames": [
        "Foundation.NSException",
        "ObjectiveC.NSObject"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObservingPublishing",
          "printedName": "_KeyValueCodingAndObservingPublishing",
          "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
          "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObserving",
          "printedName": "_KeyValueCodingAndObserving",
          "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
          "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        }
      ]
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Import",
      "name": "Swift",
      "printedName": "Swift",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Function",
      "name": "catchBadInstruction",
      "printedName": "catchBadInstruction(in:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "Nimble.BadInstructionException?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "BadInstructionException",
              "printedName": "Nimble.BadInstructionException",
              "usr": "c:@M@Nimble@objc(cs)BadInstructionException"
            }
          ],
          "usr": "s:Sq"
        },
        {
          "kind": "TypeFunc",
          "name": "Function",
          "printedName": "() -> ()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            }
          ]
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble19catchBadInstruction2inAA0cD9ExceptionCSgyyc_tF",
      "mangledName": "$s6Nimble19catchBadInstruction2inAA0cD9ExceptionCSgyyc_tF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble",
      "declAttributes": [
        "RawDocComment"
      ]
    },
    {
      "kind": "Import",
      "name": "Darwin",
      "printedName": "Darwin",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Var",
      "name": "MACH_MSG_TYPE_MAKE_SEND",
      "printedName": "MACH_MSG_TYPE_MAKE_SEND",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "UInt32",
          "printedName": "Swift.UInt32",
          "usr": "s:s6UInt32V"
        }
      ],
      "declKind": "Var",
      "usr": "s:6Nimble23MACH_MSG_TYPE_MAKE_SENDs6UInt32Vvp",
      "mangledName": "$s6Nimble23MACH_MSG_TYPE_MAKE_SENDs6UInt32Vvp",
      "moduleName": "Nimble",
      "declAttributes": [
        "HasInitialValue",
        "HasStorage",
        "AccessControl",
        "RawDocComment"
      ],
      "isLet": true,
      "hasStorage": true
    },
    {
      "kind": "Function",
      "name": "MACH_MSGH_BITS_REMOTE",
      "printedName": "MACH_MSGH_BITS_REMOTE(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "UInt32",
          "printedName": "Swift.UInt32",
          "usr": "s:s6UInt32V"
        },
        {
          "kind": "TypeNominal",
          "name": "UInt32",
          "printedName": "Swift.UInt32",
          "usr": "s:s6UInt32V"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble21MACH_MSGH_BITS_REMOTEys6UInt32VADF",
      "mangledName": "$s6Nimble21MACH_MSGH_BITS_REMOTEys6UInt32VADF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "MACH_MSGH_BITS",
      "printedName": "MACH_MSGH_BITS(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "UInt32",
          "printedName": "Swift.UInt32",
          "usr": "s:s6UInt32V"
        },
        {
          "kind": "TypeNominal",
          "name": "UInt32",
          "printedName": "Swift.UInt32",
          "usr": "s:s6UInt32V"
        },
        {
          "kind": "TypeNominal",
          "name": "UInt32",
          "printedName": "Swift.UInt32",
          "usr": "s:s6UInt32V"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble14MACH_MSGH_BITSys6UInt32VAD_ADtF",
      "mangledName": "$s6Nimble14MACH_MSGH_BITSys6UInt32VAD_ADtF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Var",
      "name": "nativeThreadState",
      "printedName": "nativeThreadState",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Int32",
          "printedName": "Swift.Int32",
          "usr": "s:s5Int32V"
        }
      ],
      "declKind": "Var",
      "usr": "s:6Nimble17nativeThreadStates5Int32Vvp",
      "mangledName": "$s6Nimble17nativeThreadStates5Int32Vvp",
      "moduleName": "Nimble",
      "declAttributes": [
        "HasInitialValue",
        "HasStorage",
        "AccessControl",
        "RawDocComment"
      ],
      "isLet": true,
      "hasStorage": true
    },
    {
      "kind": "Var",
      "name": "nativeThreadStateCount",
      "printedName": "nativeThreadStateCount",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "UInt32",
          "printedName": "Swift.UInt32",
          "usr": "s:s6UInt32V"
        }
      ],
      "declKind": "Var",
      "usr": "s:6Nimble22nativeThreadStateCounts6UInt32Vvp",
      "mangledName": "$s6Nimble22nativeThreadStateCounts6UInt32Vvp",
      "moduleName": "Nimble",
      "declAttributes": [
        "HasInitialValue",
        "HasStorage",
        "AccessControl"
      ],
      "isLet": true,
      "hasStorage": true
    },
    {
      "kind": "Var",
      "name": "nativeMachExceptionMask",
      "printedName": "nativeMachExceptionMask",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "UInt32",
          "printedName": "Swift.UInt32",
          "usr": "s:s6UInt32V"
        }
      ],
      "declKind": "Var",
      "usr": "s:6Nimble23nativeMachExceptionMasks6UInt32Vvp",
      "mangledName": "$s6Nimble23nativeMachExceptionMasks6UInt32Vvp",
      "moduleName": "Nimble",
      "declAttributes": [
        "HasInitialValue",
        "HasStorage",
        "AccessControl"
      ],
      "isLet": true,
      "hasStorage": true
    },
    {
      "kind": "Var",
      "name": "EXC_TYPES_COUNT",
      "printedName": "EXC_TYPES_COUNT",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Int",
          "printedName": "Swift.Int",
          "usr": "s:Si"
        }
      ],
      "declKind": "Var",
      "usr": "s:6Nimble15EXC_TYPES_COUNTSivp",
      "mangledName": "$s6Nimble15EXC_TYPES_COUNTSivp",
      "moduleName": "Nimble",
      "declAttributes": [
        "HasInitialValue",
        "HasStorage",
        "AccessControl"
      ],
      "isLet": true,
      "hasStorage": true
    },
    {
      "kind": "TypeDecl",
      "name": "execTypesCountTuple",
      "printedName": "execTypesCountTuple",
      "children": [
        {
          "kind": "Var",
          "name": "value",
          "printedName": "value",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ]
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble19execTypesCountTupleV5valuex_xxxxxxxxxxxxxtvp",
          "mangledName": "$s6Nimble19execTypesCountTupleV5valuex_xxxxxxxxxxxxxtvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "HasInitialValue",
            "HasStorage",
            "AccessControl",
            "RawDocComment"
          ],
          "fixedbinaryorder": 0,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Tuple",
                  "printedName": "(τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0)",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    }
                  ]
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble19execTypesCountTupleV5valuex_xxxxxxxxxxxxxtvg",
              "mangledName": "$s6Nimble19execTypesCountTupleV5valuex_xxxxxxxxxxxxxtvg",
              "moduleName": "Nimble",
              "genericSig": "<τ_0_0 where τ_0_0 : Swift.ExpressibleByIntegerLiteral>",
              "sugared_genericSig": "<T where T : Swift.ExpressibleByIntegerLiteral>",
              "implicit": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "get"
            },
            {
              "kind": "Accessor",
              "name": "Set",
              "printedName": "Set()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Tuple",
                  "printedName": "(τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0)",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    }
                  ]
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble19execTypesCountTupleV5valuex_xxxxxxxxxxxxxtvs",
              "mangledName": "$s6Nimble19execTypesCountTupleV5valuex_xxxxxxxxxxxxxtvs",
              "moduleName": "Nimble",
              "genericSig": "<τ_0_0 where τ_0_0 : Swift.ExpressibleByIntegerLiteral>",
              "sugared_genericSig": "<T where T : Swift.ExpressibleByIntegerLiteral>",
              "implicit": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "set"
            },
            {
              "kind": "Accessor",
              "name": "Modify",
              "printedName": "Modify()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble19execTypesCountTupleV5valuex_xxxxxxxxxxxxxtvM",
              "mangledName": "$s6Nimble19execTypesCountTupleV5valuex_xxxxxxxxxxxxxtvM",
              "moduleName": "Nimble",
              "genericSig": "<τ_0_0 where τ_0_0 : Swift.ExpressibleByIntegerLiteral>",
              "sugared_genericSig": "<T where T : Swift.ExpressibleByIntegerLiteral>",
              "implicit": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "_modify"
            }
          ]
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "execTypesCountTuple",
              "printedName": "Nimble.execTypesCountTuple<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble19execTypesCountTupleV"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble19execTypesCountTupleVACyxGycfc",
          "mangledName": "$s6Nimble19execTypesCountTupleVACyxGycfc",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0 where τ_0_0 : Swift.ExpressibleByIntegerLiteral>",
          "sugared_genericSig": "<T where T : Swift.ExpressibleByIntegerLiteral>",
          "declAttributes": [
            "AccessControl"
          ],
          "init_kind": "Designated"
        }
      ],
      "declKind": "Struct",
      "usr": "s:6Nimble19execTypesCountTupleV",
      "mangledName": "$s6Nimble19execTypesCountTupleV",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.ExpressibleByIntegerLiteral>",
      "sugared_genericSig": "<T where T : Swift.ExpressibleByIntegerLiteral>",
      "declAttributes": [
        "AccessControl"
      ]
    },
    {
      "kind": "Import",
      "name": "Dispatch",
      "printedName": "Dispatch",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Function",
      "name": "expect",
      "printedName": "expect(file:line:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "String",
          "printedName": "Swift.String",
          "hasDefaultArg": true,
          "usr": "s:SS"
        },
        {
          "kind": "TypeNominal",
          "name": "UInt",
          "printedName": "Swift.UInt",
          "hasDefaultArg": true,
          "usr": "s:Su"
        },
        {
          "kind": "TypeFunc",
          "name": "Function",
          "printedName": "() throws -> τ_0_0?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "τ_0_0?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            }
          ]
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble6expect4file4line_AA11ExpectationVyxGSS_SuxSgyKXAtlF",
      "mangledName": "$s6Nimble6expect4file4line_AA11ExpectationVyxGSS_SuxSgyKXAtlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<T>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "expect",
      "printedName": "expect(file:line:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "String",
          "printedName": "Swift.String",
          "hasDefaultArg": true,
          "usr": "s:SS"
        },
        {
          "kind": "TypeNominal",
          "name": "UInt",
          "printedName": "Swift.UInt",
          "hasDefaultArg": true,
          "usr": "s:Su"
        },
        {
          "kind": "TypeFunc",
          "name": "Function",
          "printedName": "() -> () throws -> τ_0_0",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "() throws -> τ_0_0",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ]
            },
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            }
          ],
          "typeAttributes": [
            "noescape"
          ]
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble6expect4file4line_AA11ExpectationVyxGSS_SuxyKcyXKtlF",
      "mangledName": "$s6Nimble6expect4file4line_AA11ExpectationVyxGSS_SuxyKcyXKtlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<T>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "expect",
      "printedName": "expect(file:line:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "String",
          "printedName": "Swift.String",
          "hasDefaultArg": true,
          "usr": "s:SS"
        },
        {
          "kind": "TypeNominal",
          "name": "UInt",
          "printedName": "Swift.UInt",
          "hasDefaultArg": true,
          "usr": "s:Su"
        },
        {
          "kind": "TypeFunc",
          "name": "Function",
          "printedName": "() -> () throws -> τ_0_0?",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "() throws -> τ_0_0?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Optional",
                  "printedName": "τ_0_0?",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    }
                  ],
                  "usr": "s:Sq"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ]
            },
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            }
          ],
          "typeAttributes": [
            "noescape"
          ]
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble6expect4file4line_AA11ExpectationVyxGSS_SuxSgyKcyXKtlF",
      "mangledName": "$s6Nimble6expect4file4line_AA11ExpectationVyxGSS_SuxSgyKcyXKtlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<T>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "expect",
      "printedName": "expect(file:line:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<()>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "String",
          "printedName": "Swift.String",
          "hasDefaultArg": true,
          "usr": "s:SS"
        },
        {
          "kind": "TypeNominal",
          "name": "UInt",
          "printedName": "Swift.UInt",
          "hasDefaultArg": true,
          "usr": "s:Su"
        },
        {
          "kind": "TypeFunc",
          "name": "Function",
          "printedName": "() -> () throws -> ()",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "() throws -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ]
            },
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            }
          ],
          "typeAttributes": [
            "noescape"
          ]
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble6expect4file4line_AA11ExpectationVyytGSS_SuyyKcyXKtF",
      "mangledName": "$s6Nimble6expect4file4line_AA11ExpectationVyytGSS_SuyyKcyXKtF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "fail",
      "printedName": "fail(_:location:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "String",
          "printedName": "Swift.String",
          "usr": "s:SS"
        },
        {
          "kind": "TypeNominal",
          "name": "SourceLocation",
          "printedName": "Nimble.SourceLocation",
          "usr": "c:@M@Nimble@objc(cs)SourceLocation"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble4fail_8locationySS_AA14SourceLocationCtF",
      "mangledName": "$s6Nimble4fail_8locationySS_AA14SourceLocationCtF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "fail",
      "printedName": "fail(_:file:line:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "String",
          "printedName": "Swift.String",
          "usr": "s:SS"
        },
        {
          "kind": "TypeNominal",
          "name": "String",
          "printedName": "Swift.String",
          "hasDefaultArg": true,
          "usr": "s:SS"
        },
        {
          "kind": "TypeNominal",
          "name": "UInt",
          "printedName": "Swift.UInt",
          "hasDefaultArg": true,
          "usr": "s:Su"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble4fail_4file4lineySS_SSSutF",
      "mangledName": "$s6Nimble4fail_4file4lineySS_SSSutF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "fail",
      "printedName": "fail(_:line:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "String",
          "printedName": "Swift.String",
          "hasDefaultArg": true,
          "usr": "s:SS"
        },
        {
          "kind": "TypeNominal",
          "name": "UInt",
          "printedName": "Swift.UInt",
          "hasDefaultArg": true,
          "usr": "s:Su"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble4fail_4lineySS_SutF",
      "mangledName": "$s6Nimble4fail_4lineySS_SutF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "nimblePrecondition",
      "printedName": "nimblePrecondition(_:_:_:file:line:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeFunc",
          "name": "Function",
          "printedName": "() -> Swift.Bool",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            }
          ],
          "typeAttributes": [
            "noescape"
          ]
        },
        {
          "kind": "TypeFunc",
          "name": "Function",
          "printedName": "() -> Swift.String",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            }
          ],
          "typeAttributes": [
            "noescape"
          ]
        },
        {
          "kind": "TypeFunc",
          "name": "Function",
          "printedName": "() -> Swift.String",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            }
          ],
          "typeAttributes": [
            "noescape"
          ]
        },
        {
          "kind": "TypeNominal",
          "name": "StaticString",
          "printedName": "Swift.StaticString",
          "hasDefaultArg": true,
          "usr": "s:s12StaticStringV"
        },
        {
          "kind": "TypeNominal",
          "name": "UInt",
          "printedName": "Swift.UInt",
          "hasDefaultArg": true,
          "usr": "s:Su"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble18nimblePrecondition___4file4lineySbyXK_SSyXKSSyXKs12StaticStringVSutF",
      "mangledName": "$s6Nimble18nimblePrecondition___4file4lineySbyXK_SSyXKSSyXKs12StaticStringVSutF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "internalError",
      "printedName": "internalError(_:file:line:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Never",
          "printedName": "Swift.Never",
          "usr": "s:s5NeverO"
        },
        {
          "kind": "TypeNominal",
          "name": "String",
          "printedName": "Swift.String",
          "usr": "s:SS"
        },
        {
          "kind": "TypeNominal",
          "name": "String",
          "printedName": "Swift.String",
          "hasDefaultArg": true,
          "usr": "s:SS"
        },
        {
          "kind": "TypeNominal",
          "name": "UInt",
          "printedName": "Swift.UInt",
          "hasDefaultArg": true,
          "usr": "s:Su"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble13internalError_4file4lines5NeverOSS_SSSutF",
      "mangledName": "$s6Nimble13internalError_4file4lines5NeverOSS_SSSutF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Import",
      "name": "Dispatch",
      "printedName": "Dispatch",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "TypeDecl",
      "name": "NMBWait",
      "printedName": "NMBWait",
      "children": [
        {
          "kind": "Function",
          "name": "until",
          "printedName": "until(timeout:file:line:action:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Double",
              "printedName": "Swift.Double",
              "usr": "s:Sd"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "hasDefaultArg": true,
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "UInt",
              "printedName": "Swift.UInt",
              "hasDefaultArg": true,
              "usr": "s:Su"
            },
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(@escaping () -> ()) -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "() -> ()",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Void",
                      "printedName": "()"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "Void",
                      "printedName": "()"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@Nimble@objc(cs)NMBWait(cm)untilTimeout:file:line:action:",
          "mangledName": "$s6Nimble7NMBWaitC5until7timeout4file4line6actionySd_SSSuyyycctFZ",
          "moduleName": "Nimble",
          "static": true,
          "isOpen": true,
          "objc_name": "untilTimeout:file:line:action:",
          "declAttributes": [
            "AccessControl",
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "until",
          "printedName": "until(timeout:file:line:action:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "DispatchTimeInterval",
              "printedName": "Dispatch.DispatchTimeInterval",
              "usr": "s:8Dispatch0A12TimeIntervalO"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "hasDefaultArg": true,
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "UInt",
              "printedName": "Swift.UInt",
              "hasDefaultArg": true,
              "usr": "s:Su"
            },
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(@escaping () -> ()) -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "() -> ()",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Void",
                      "printedName": "()"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "Void",
                      "printedName": "()"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble7NMBWaitC5until7timeout4file4line6actiony8Dispatch0H12TimeIntervalO_SSSuyyycctFZ",
          "mangledName": "$s6Nimble7NMBWaitC5until7timeout4file4line6actiony8Dispatch0H12TimeIntervalO_SSSuyyycctFZ",
          "moduleName": "Nimble",
          "static": true,
          "isOpen": true,
          "declAttributes": [
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "throwableUntil",
          "printedName": "throwableUntil(timeout:file:line:action:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "DispatchTimeInterval",
              "printedName": "Dispatch.DispatchTimeInterval",
              "usr": "s:8Dispatch0A12TimeIntervalO"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "hasDefaultArg": true,
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "UInt",
              "printedName": "Swift.UInt",
              "hasDefaultArg": true,
              "usr": "s:Su"
            },
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(@escaping () -> ()) throws -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "() -> ()",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Void",
                      "printedName": "()"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "Void",
                      "printedName": "()"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble7NMBWaitC14throwableUntil7timeout4file4line6actiony8Dispatch0I12TimeIntervalO_SSSuyyycKctFZ",
          "mangledName": "$s6Nimble7NMBWaitC14throwableUntil7timeout4file4line6actiony8Dispatch0I12TimeIntervalO_SSSuyyycKctFZ",
          "moduleName": "Nimble",
          "static": true,
          "isOpen": true,
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "until",
          "printedName": "until(_:line:action:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "hasDefaultArg": true,
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "UInt",
              "printedName": "Swift.UInt",
              "hasDefaultArg": true,
              "usr": "s:Su"
            },
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(@escaping () -> ()) -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "() -> ()",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Void",
                      "printedName": "()"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "Void",
                      "printedName": "()"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@Nimble@objc(cs)NMBWait(cm)untilFile:line:action:",
          "mangledName": "$s6Nimble7NMBWaitC5until_4line6actionySS_SuyyycctFZ",
          "moduleName": "Nimble",
          "static": true,
          "isOpen": true,
          "objc_name": "untilFile:line:action:",
          "declAttributes": [
            "AccessControl",
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBWait",
              "printedName": "Nimble.NMBWait",
              "usr": "c:@M@Nimble@objc(cs)NMBWait"
            }
          ],
          "declKind": "Constructor",
          "usr": "c:@M@Nimble@objc(cs)NMBWait(im)init",
          "mangledName": "$s6Nimble7NMBWaitCACycfc",
          "moduleName": "Nimble",
          "overriding": true,
          "implicit": true,
          "objc_name": "init",
          "declAttributes": [
            "Dynamic",
            "ObjC",
            "Override"
          ],
          "init_kind": "Designated"
        }
      ],
      "declKind": "Class",
      "usr": "c:@M@Nimble@objc(cs)NMBWait",
      "mangledName": "$s6Nimble7NMBWaitC",
      "moduleName": "Nimble",
      "isOpen": true,
      "declAttributes": [
        "AccessControl",
        "RawDocComment",
        "ObjC"
      ],
      "superclassUsr": "c:objc(cs)NSObject",
      "inheritsConvenienceInitializers": true,
      "superclassNames": [
        "ObjectiveC.NSObject"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObservingPublishing",
          "printedName": "_KeyValueCodingAndObservingPublishing",
          "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
          "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObserving",
          "printedName": "_KeyValueCodingAndObserving",
          "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
          "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        }
      ]
    },
    {
      "kind": "Function",
      "name": "blockedRunLoopErrorMessageFor",
      "printedName": "blockedRunLoopErrorMessageFor(_:leeway:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "String",
          "printedName": "Swift.String",
          "usr": "s:SS"
        },
        {
          "kind": "TypeNominal",
          "name": "String",
          "printedName": "Swift.String",
          "usr": "s:SS"
        },
        {
          "kind": "TypeNominal",
          "name": "DispatchTimeInterval",
          "printedName": "Dispatch.DispatchTimeInterval",
          "usr": "s:8Dispatch0A12TimeIntervalO"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble29blockedRunLoopErrorMessageFor_6leewayS2S_8Dispatch0I12TimeIntervalOtF",
      "mangledName": "$s6Nimble29blockedRunLoopErrorMessageFor_6leewayS2S_8Dispatch0I12TimeIntervalOtF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "waitUntil",
      "printedName": "waitUntil(timeout:file:line:action:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "DispatchTimeInterval",
          "printedName": "Dispatch.DispatchTimeInterval",
          "hasDefaultArg": true,
          "usr": "s:8Dispatch0A12TimeIntervalO"
        },
        {
          "kind": "TypeNominal",
          "name": "String",
          "printedName": "Swift.String",
          "hasDefaultArg": true,
          "usr": "s:SS"
        },
        {
          "kind": "TypeNominal",
          "name": "UInt",
          "printedName": "Swift.UInt",
          "hasDefaultArg": true,
          "usr": "s:Su"
        },
        {
          "kind": "TypeFunc",
          "name": "Function",
          "printedName": "(@escaping () -> ()) -> ()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "() -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ]
            }
          ]
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble9waitUntil7timeout4file4line6actiony8Dispatch0H12TimeIntervalO_SSSuyyycctF",
      "mangledName": "$s6Nimble9waitUntil7timeout4file4line6actiony8Dispatch0H12TimeIntervalO_SSSuyyycctF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "elementsEqual",
      "printedName": "elementsEqual(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "τ_0_1?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_1"
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble13elementsEqualyAA9PredicateVyxGq_SgSTRzSTR_SQ7ElementRpzAGQy_AHRSr0_lF",
      "mangledName": "$s6Nimble13elementsEqualyAA9PredicateVyxGq_SgSTRzSTR_SQ7ElementRpzAGQy_AHRSr0_lF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Sequence, τ_0_1 : Swift.Sequence, τ_0_0.Element : Swift.Equatable, τ_0_0.Element == τ_0_1.Element>",
      "sugared_genericSig": "<Seq1, Seq2 where Seq1 : Swift.Sequence, Seq2 : Swift.Sequence, Seq1.Element : Swift.Equatable, Seq1.Element == Seq2.Element>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "elementsEqual",
      "printedName": "elementsEqual(_:by:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "τ_0_1?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_1"
            }
          ],
          "usr": "s:Sq"
        },
        {
          "kind": "TypeFunc",
          "name": "Function",
          "printedName": "(τ_0_0.Element, τ_0_1.Element) -> Swift.Bool",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0.Element, τ_0_1.Element)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "DependentMember",
                  "printedName": "τ_0_0.Element"
                },
                {
                  "kind": "TypeNominal",
                  "name": "DependentMember",
                  "printedName": "τ_0_1.Element"
                }
              ]
            }
          ]
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble13elementsEqual_2byAA9PredicateVyxGq_Sg_Sb7ElementQz_AHQy_tctSTRzSTR_r0_lF",
      "mangledName": "$s6Nimble13elementsEqual_2byAA9PredicateVyxGq_Sg_Sb7ElementQz_AHQy_tctSTRzSTR_r0_lF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Sequence, τ_0_1 : Swift.Sequence>",
      "sugared_genericSig": "<Seq1, Seq2 where Seq1 : Swift.Sequence, Seq2 : Swift.Sequence>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Function",
      "name": "endWith",
      "printedName": "endWith(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "DependentMember",
          "printedName": "τ_0_0.Element"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble7endWithyAA9PredicateVyxG7ElementQzSTRzSQAGRQlF",
      "mangledName": "$s6Nimble7endWithyAA9PredicateVyxG7ElementQzSTRzSQAGRQlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Sequence, τ_0_0.Element : Swift.Equatable>",
      "sugared_genericSig": "<S where S : Swift.Sequence, S.Element : Swift.Equatable>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "endWith",
      "printedName": "endWith(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Nimble.NMBOrderedCollection>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBOrderedCollection",
              "printedName": "Nimble.NMBOrderedCollection",
              "usr": "s:6Nimble20NMBOrderedCollectionP"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "ProtocolComposition",
          "printedName": "Any"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble7endWithyAA9PredicateVyAA20NMBOrderedCollection_pGypF",
      "mangledName": "$s6Nimble7endWithyAA9PredicateVyAA20NMBOrderedCollection_pGypF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "endWith",
      "printedName": "endWith(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Swift.String>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "String",
          "printedName": "Swift.String",
          "usr": "s:SS"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble7endWithyAA9PredicateVySSGSSF",
      "mangledName": "$s6Nimble7endWithyAA9PredicateVySSGSSF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "equal",
      "printedName": "equal(_:by:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "τ_0_0?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:Sq"
        },
        {
          "kind": "TypeFunc",
          "name": "Function",
          "printedName": "(τ_0_0, τ_0_0) -> Swift.Bool",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0, τ_0_0)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ]
            }
          ]
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble5equal_2byAA9PredicateVyxGxSg_Sbx_xtctlF",
      "mangledName": "$s6Nimble5equal_2byAA9PredicateVyxGxSg_Sbx_xtctlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<T>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "equal",
      "printedName": "equal(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "GenericTypeParam",
          "printedName": "τ_0_0"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble5equalyAA9PredicateVyxGxSQRzlF",
      "mangledName": "$s6Nimble5equalyAA9PredicateVyxGxSQRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Equatable>",
      "sugared_genericSig": "<T where T : Swift.Equatable>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "equal",
      "printedName": "equal(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<[τ_0_0?]>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[τ_0_0?]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Optional",
                  "printedName": "τ_0_0?",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    }
                  ],
                  "usr": "s:Sq"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Array",
          "printedName": "[τ_0_0?]",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "τ_0_0?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "usr": "s:Sa"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble5equalyAA9PredicateVySayxSgGGAFSQRzlF",
      "mangledName": "$s6Nimble5equalyAA9PredicateVySayxSgGGAFSQRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Equatable>",
      "sugared_genericSig": "<T where T : Swift.Equatable>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "equal",
      "printedName": "equal(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "τ_0_0?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble5equalyAA9PredicateVyxGxSgSQRzlF",
      "mangledName": "$s6Nimble5equalyAA9PredicateVyxGxSgSQRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Equatable>",
      "sugared_genericSig": "<T where T : Swift.Equatable>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "equal",
      "printedName": "equal(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Swift.Set<τ_0_0>>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Set",
              "printedName": "Swift.Set<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:Sh"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Set",
          "printedName": "Swift.Set<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:Sh"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble5equalyAA9PredicateVyShyxGGAESHRzlF",
      "mangledName": "$s6Nimble5equalyAA9PredicateVyShyxGGAESHRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Hashable>",
      "sugared_genericSig": "<T where T : Swift.Hashable>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "equal",
      "printedName": "equal(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Swift.Set<τ_0_0>>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Set",
              "printedName": "Swift.Set<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:Sh"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "Swift.Set<τ_0_0>?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Set",
              "printedName": "Swift.Set<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:Sh"
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble5equalyAA9PredicateVyShyxGGAESgSHRzlF",
      "mangledName": "$s6Nimble5equalyAA9PredicateVyShyxGGAESgSHRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Hashable>",
      "sugared_genericSig": "<T where T : Swift.Hashable>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "equal",
      "printedName": "equal(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Swift.Set<τ_0_0>>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Set",
              "printedName": "Swift.Set<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:Sh"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Set",
          "printedName": "Swift.Set<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:Sh"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble5equalyAA9PredicateVyShyxGGAESLRzSHRzlF",
      "mangledName": "$s6Nimble5equalyAA9PredicateVyShyxGGAESLRzSHRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable, τ_0_0 : Swift.Hashable>",
      "sugared_genericSig": "<T where T : Swift.Comparable, T : Swift.Hashable>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "equal",
      "printedName": "equal(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Swift.Set<τ_0_0>>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Set",
              "printedName": "Swift.Set<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:Sh"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "Swift.Set<τ_0_0>?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Set",
              "printedName": "Swift.Set<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:Sh"
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble5equalyAA9PredicateVyShyxGGAESgSLRzSHRzlF",
      "mangledName": "$s6Nimble5equalyAA9PredicateVyShyxGGAESgSLRzSHRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable, τ_0_0 : Swift.Hashable>",
      "sugared_genericSig": "<T where T : Swift.Comparable, T : Swift.Hashable>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "equal",
      "printedName": "equal(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<[τ_0_0 : τ_0_1]>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Dictionary",
              "printedName": "[τ_0_0 : τ_0_1]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                }
              ],
              "usr": "s:SD"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Dictionary",
          "printedName": "[τ_0_0 : τ_0_1?]",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "τ_0_1?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "usr": "s:SD"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble5equalyAA9PredicateVySDyxq_GGSDyxq_SgGSHRzSQR_r0_lF",
      "mangledName": "$s6Nimble5equalyAA9PredicateVySDyxq_GGSDyxq_SgGSHRzSQR_r0_lF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Hashable, τ_0_1 : Swift.Equatable>",
      "sugared_genericSig": "<K, V where K : Swift.Hashable, V : Swift.Equatable>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "==",
      "printedName": "==(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "GenericTypeParam",
          "printedName": "τ_0_0"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2eeoiyyAA11ExpectationVyxG_xtSQRzlF",
      "mangledName": "$s6Nimble2eeoiyyAA11ExpectationVyxG_xtSQRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Equatable>",
      "sugared_genericSig": "<T where T : Swift.Equatable>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "==",
      "printedName": "==(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "τ_0_0?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2eeoiyyAA11ExpectationVyxG_xSgtSQRzlF",
      "mangledName": "$s6Nimble2eeoiyyAA11ExpectationVyxG_xSgtSQRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Equatable>",
      "sugared_genericSig": "<T where T : Swift.Equatable>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "!=",
      "printedName": "!=(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "GenericTypeParam",
          "printedName": "τ_0_0"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2neoiyyAA11ExpectationVyxG_xtSQRzlF",
      "mangledName": "$s6Nimble2neoiyyAA11ExpectationVyxG_xtSQRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Equatable>",
      "sugared_genericSig": "<T where T : Swift.Equatable>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "!=",
      "printedName": "!=(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "τ_0_0?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2neoiyyAA11ExpectationVyxG_xSgtSQRzlF",
      "mangledName": "$s6Nimble2neoiyyAA11ExpectationVyxG_xSgtSQRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Equatable>",
      "sugared_genericSig": "<T where T : Swift.Equatable>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "==",
      "printedName": "==(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<[τ_0_0]>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[τ_0_0]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "[τ_0_0]?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[τ_0_0]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2eeoiyyAA11ExpectationVySayxGG_AESgtSQRzlF",
      "mangledName": "$s6Nimble2eeoiyyAA11ExpectationVySayxGG_AESgtSQRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Equatable>",
      "sugared_genericSig": "<T where T : Swift.Equatable>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "!=",
      "printedName": "!=(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<[τ_0_0]>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[τ_0_0]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "[τ_0_0]?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[τ_0_0]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2neoiyyAA11ExpectationVySayxGG_AESgtSQRzlF",
      "mangledName": "$s6Nimble2neoiyyAA11ExpectationVySayxGG_AESgtSQRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Equatable>",
      "sugared_genericSig": "<T where T : Swift.Equatable>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "==",
      "printedName": "==(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<Swift.Set<τ_0_0>>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Set",
              "printedName": "Swift.Set<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:Sh"
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "Set",
          "printedName": "Swift.Set<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:Sh"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2eeoiyyAA11ExpectationVyShyxGG_AEtSHRzlF",
      "mangledName": "$s6Nimble2eeoiyyAA11ExpectationVyShyxGG_AEtSHRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Hashable>",
      "sugared_genericSig": "<T where T : Swift.Hashable>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "==",
      "printedName": "==(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<Swift.Set<τ_0_0>>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Set",
              "printedName": "Swift.Set<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:Sh"
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "Swift.Set<τ_0_0>?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Set",
              "printedName": "Swift.Set<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:Sh"
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2eeoiyyAA11ExpectationVyShyxGG_AESgtSHRzlF",
      "mangledName": "$s6Nimble2eeoiyyAA11ExpectationVyShyxGG_AESgtSHRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Hashable>",
      "sugared_genericSig": "<T where T : Swift.Hashable>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "!=",
      "printedName": "!=(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<Swift.Set<τ_0_0>>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Set",
              "printedName": "Swift.Set<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:Sh"
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "Set",
          "printedName": "Swift.Set<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:Sh"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2neoiyyAA11ExpectationVyShyxGG_AEtSHRzlF",
      "mangledName": "$s6Nimble2neoiyyAA11ExpectationVyShyxGG_AEtSHRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Hashable>",
      "sugared_genericSig": "<T where T : Swift.Hashable>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "!=",
      "printedName": "!=(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<Swift.Set<τ_0_0>>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Set",
              "printedName": "Swift.Set<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:Sh"
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "Swift.Set<τ_0_0>?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Set",
              "printedName": "Swift.Set<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:Sh"
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2neoiyyAA11ExpectationVyShyxGG_AESgtSHRzlF",
      "mangledName": "$s6Nimble2neoiyyAA11ExpectationVyShyxGG_AESgtSHRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Hashable>",
      "sugared_genericSig": "<T where T : Swift.Hashable>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "==",
      "printedName": "==(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<Swift.Set<τ_0_0>>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Set",
              "printedName": "Swift.Set<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:Sh"
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "Set",
          "printedName": "Swift.Set<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:Sh"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2eeoiyyAA11ExpectationVyShyxGG_AEtSLRzSHRzlF",
      "mangledName": "$s6Nimble2eeoiyyAA11ExpectationVyShyxGG_AEtSLRzSHRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable, τ_0_0 : Swift.Hashable>",
      "sugared_genericSig": "<T where T : Swift.Comparable, T : Swift.Hashable>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "==",
      "printedName": "==(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<Swift.Set<τ_0_0>>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Set",
              "printedName": "Swift.Set<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:Sh"
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "Swift.Set<τ_0_0>?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Set",
              "printedName": "Swift.Set<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:Sh"
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2eeoiyyAA11ExpectationVyShyxGG_AESgtSLRzSHRzlF",
      "mangledName": "$s6Nimble2eeoiyyAA11ExpectationVyShyxGG_AESgtSLRzSHRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable, τ_0_0 : Swift.Hashable>",
      "sugared_genericSig": "<T where T : Swift.Comparable, T : Swift.Hashable>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "!=",
      "printedName": "!=(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<Swift.Set<τ_0_0>>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Set",
              "printedName": "Swift.Set<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:Sh"
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "Set",
          "printedName": "Swift.Set<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:Sh"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2neoiyyAA11ExpectationVyShyxGG_AEtSLRzSHRzlF",
      "mangledName": "$s6Nimble2neoiyyAA11ExpectationVyShyxGG_AEtSLRzSHRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable, τ_0_0 : Swift.Hashable>",
      "sugared_genericSig": "<T where T : Swift.Comparable, T : Swift.Hashable>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "!=",
      "printedName": "!=(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<Swift.Set<τ_0_0>>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Set",
              "printedName": "Swift.Set<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:Sh"
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "Swift.Set<τ_0_0>?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Set",
              "printedName": "Swift.Set<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:Sh"
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2neoiyyAA11ExpectationVyShyxGG_AESgtSLRzSHRzlF",
      "mangledName": "$s6Nimble2neoiyyAA11ExpectationVyShyxGG_AESgtSLRzSHRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable, τ_0_0 : Swift.Hashable>",
      "sugared_genericSig": "<T where T : Swift.Comparable, T : Swift.Hashable>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "==",
      "printedName": "==(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<[τ_0_0 : τ_0_1]>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Dictionary",
              "printedName": "[τ_0_0 : τ_0_1]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                }
              ],
              "usr": "s:SD"
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "[τ_0_0 : τ_0_1]?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Dictionary",
              "printedName": "[τ_0_0 : τ_0_1]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                }
              ],
              "usr": "s:SD"
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2eeoiyyAA11ExpectationVySDyxq_GG_AESgtSHRzSQR_r0_lF",
      "mangledName": "$s6Nimble2eeoiyyAA11ExpectationVySDyxq_GG_AESgtSHRzSQR_r0_lF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Hashable, τ_0_1 : Swift.Equatable>",
      "sugared_genericSig": "<T, C where T : Swift.Hashable, C : Swift.Equatable>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "!=",
      "printedName": "!=(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<[τ_0_0 : τ_0_1]>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Dictionary",
              "printedName": "[τ_0_0 : τ_0_1]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                }
              ],
              "usr": "s:SD"
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "[τ_0_0 : τ_0_1]?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Dictionary",
              "printedName": "[τ_0_0 : τ_0_1]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                }
              ],
              "usr": "s:SD"
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2neoiyyAA11ExpectationVySDyxq_GG_AESgtSHRzSQR_r0_lF",
      "mangledName": "$s6Nimble2neoiyyAA11ExpectationVySDyxq_GG_AESgtSHRzSQR_r0_lF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Hashable, τ_0_1 : Swift.Equatable>",
      "sugared_genericSig": "<T, C where T : Swift.Hashable, C : Swift.Equatable>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Function",
      "name": "equal",
      "printedName": "equal(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<(τ_0_0, τ_0_1)>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0, τ_0_1)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                }
              ]
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "(τ_0_0, τ_0_1)?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0, τ_0_1)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                }
              ]
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble5equalyAA9PredicateVyx_q_tGx_q_tSgSQRzSQR_r0_lF",
      "mangledName": "$s6Nimble5equalyAA9PredicateVyx_q_tGx_q_tSgSQRzSQR_r0_lF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable>",
      "sugared_genericSig": "<T1, T2 where T1 : Swift.Equatable, T2 : Swift.Equatable>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "==",
      "printedName": "==(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<(τ_0_0, τ_0_1)>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0, τ_0_1)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                }
              ]
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "(τ_0_0, τ_0_1)?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0, τ_0_1)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                }
              ]
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2eeoiyyAA11ExpectationVyx_q_tG_x_q_tSgtSQRzSQR_r0_lF",
      "mangledName": "$s6Nimble2eeoiyyAA11ExpectationVyx_q_tG_x_q_tSgtSQRzSQR_r0_lF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable>",
      "sugared_genericSig": "<T1, T2 where T1 : Swift.Equatable, T2 : Swift.Equatable>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "!=",
      "printedName": "!=(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<(τ_0_0, τ_0_1)>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0, τ_0_1)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                }
              ]
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "(τ_0_0, τ_0_1)?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0, τ_0_1)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                }
              ]
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2neoiyyAA11ExpectationVyx_q_tG_x_q_tSgtSQRzSQR_r0_lF",
      "mangledName": "$s6Nimble2neoiyyAA11ExpectationVyx_q_tG_x_q_tSgtSQRzSQR_r0_lF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable>",
      "sugared_genericSig": "<T1, T2 where T1 : Swift.Equatable, T2 : Swift.Equatable>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "equal",
      "printedName": "equal(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<(τ_0_0, τ_0_1, τ_0_2)>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0, τ_0_1, τ_0_2)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_2"
                }
              ]
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "(τ_0_0, τ_0_1, τ_0_2)?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0, τ_0_1, τ_0_2)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_2"
                }
              ]
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble5equalyAA9PredicateVyx_q_q0_tGx_q_q0_tSgSQRzSQR_SQR0_r1_lF",
      "mangledName": "$s6Nimble5equalyAA9PredicateVyx_q_q0_tGx_q_q0_tSgSQRzSQR_SQR0_r1_lF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0, τ_0_1, τ_0_2 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable, τ_0_2 : Swift.Equatable>",
      "sugared_genericSig": "<T1, T2, T3 where T1 : Swift.Equatable, T2 : Swift.Equatable, T3 : Swift.Equatable>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "==",
      "printedName": "==(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<(τ_0_0, τ_0_1, τ_0_2)>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0, τ_0_1, τ_0_2)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_2"
                }
              ]
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "(τ_0_0, τ_0_1, τ_0_2)?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0, τ_0_1, τ_0_2)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_2"
                }
              ]
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2eeoiyyAA11ExpectationVyx_q_q0_tG_x_q_q0_tSgtSQRzSQR_SQR0_r1_lF",
      "mangledName": "$s6Nimble2eeoiyyAA11ExpectationVyx_q_q0_tG_x_q_q0_tSgtSQRzSQR_SQR0_r1_lF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0, τ_0_1, τ_0_2 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable, τ_0_2 : Swift.Equatable>",
      "sugared_genericSig": "<T1, T2, T3 where T1 : Swift.Equatable, T2 : Swift.Equatable, T3 : Swift.Equatable>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "!=",
      "printedName": "!=(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<(τ_0_0, τ_0_1, τ_0_2)>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0, τ_0_1, τ_0_2)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_2"
                }
              ]
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "(τ_0_0, τ_0_1, τ_0_2)?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0, τ_0_1, τ_0_2)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_2"
                }
              ]
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2neoiyyAA11ExpectationVyx_q_q0_tG_x_q_q0_tSgtSQRzSQR_SQR0_r1_lF",
      "mangledName": "$s6Nimble2neoiyyAA11ExpectationVyx_q_q0_tG_x_q_q0_tSgtSQRzSQR_SQR0_r1_lF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0, τ_0_1, τ_0_2 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable, τ_0_2 : Swift.Equatable>",
      "sugared_genericSig": "<T1, T2, T3 where T1 : Swift.Equatable, T2 : Swift.Equatable, T3 : Swift.Equatable>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "equal",
      "printedName": "equal(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<(τ_0_0, τ_0_1, τ_0_2, τ_0_3)>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_2"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_3"
                }
              ]
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3)?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_2"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_3"
                }
              ]
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble5equalyAA9PredicateVyx_q_q0_q1_tGx_q_q0_q1_tSgSQRzSQR_SQR0_SQR1_r2_lF",
      "mangledName": "$s6Nimble5equalyAA9PredicateVyx_q_q0_q1_tGx_q_q0_q1_tSgSQRzSQR_SQR0_SQR1_r2_lF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0, τ_0_1, τ_0_2, τ_0_3 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable, τ_0_2 : Swift.Equatable, τ_0_3 : Swift.Equatable>",
      "sugared_genericSig": "<T1, T2, T3, T4 where T1 : Swift.Equatable, T2 : Swift.Equatable, T3 : Swift.Equatable, T4 : Swift.Equatable>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "==",
      "printedName": "==(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<(τ_0_0, τ_0_1, τ_0_2, τ_0_3)>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_2"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_3"
                }
              ]
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3)?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_2"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_3"
                }
              ]
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2eeoiyyAA11ExpectationVyx_q_q0_q1_tG_x_q_q0_q1_tSgtSQRzSQR_SQR0_SQR1_r2_lF",
      "mangledName": "$s6Nimble2eeoiyyAA11ExpectationVyx_q_q0_q1_tG_x_q_q0_q1_tSgtSQRzSQR_SQR0_SQR1_r2_lF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0, τ_0_1, τ_0_2, τ_0_3 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable, τ_0_2 : Swift.Equatable, τ_0_3 : Swift.Equatable>",
      "sugared_genericSig": "<T1, T2, T3, T4 where T1 : Swift.Equatable, T2 : Swift.Equatable, T3 : Swift.Equatable, T4 : Swift.Equatable>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "!=",
      "printedName": "!=(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<(τ_0_0, τ_0_1, τ_0_2, τ_0_3)>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_2"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_3"
                }
              ]
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3)?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_2"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_3"
                }
              ]
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2neoiyyAA11ExpectationVyx_q_q0_q1_tG_x_q_q0_q1_tSgtSQRzSQR_SQR0_SQR1_r2_lF",
      "mangledName": "$s6Nimble2neoiyyAA11ExpectationVyx_q_q0_q1_tG_x_q_q0_q1_tSgtSQRzSQR_SQR0_SQR1_r2_lF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0, τ_0_1, τ_0_2, τ_0_3 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable, τ_0_2 : Swift.Equatable, τ_0_3 : Swift.Equatable>",
      "sugared_genericSig": "<T1, T2, T3, T4 where T1 : Swift.Equatable, T2 : Swift.Equatable, T3 : Swift.Equatable, T4 : Swift.Equatable>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "equal",
      "printedName": "equal(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4)>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_2"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_3"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_4"
                }
              ]
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4)?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_2"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_3"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_4"
                }
              ]
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble5equalyAA9PredicateVyx_q_q0_q1_q2_tGx_q_q0_q1_q2_tSgSQRzSQR_SQR0_SQR1_SQR2_r3_lF",
      "mangledName": "$s6Nimble5equalyAA9PredicateVyx_q_q0_q1_q2_tGx_q_q0_q1_q2_tSgSQRzSQR_SQR0_SQR1_SQR2_r3_lF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable, τ_0_2 : Swift.Equatable, τ_0_3 : Swift.Equatable, τ_0_4 : Swift.Equatable>",
      "sugared_genericSig": "<T1, T2, T3, T4, T5 where T1 : Swift.Equatable, T2 : Swift.Equatable, T3 : Swift.Equatable, T4 : Swift.Equatable, T5 : Swift.Equatable>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "==",
      "printedName": "==(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4)>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_2"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_3"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_4"
                }
              ]
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4)?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_2"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_3"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_4"
                }
              ]
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2eeoiyyAA11ExpectationVyx_q_q0_q1_q2_tG_x_q_q0_q1_q2_tSgtSQRzSQR_SQR0_SQR1_SQR2_r3_lF",
      "mangledName": "$s6Nimble2eeoiyyAA11ExpectationVyx_q_q0_q1_q2_tG_x_q_q0_q1_q2_tSgtSQRzSQR_SQR0_SQR1_SQR2_r3_lF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable, τ_0_2 : Swift.Equatable, τ_0_3 : Swift.Equatable, τ_0_4 : Swift.Equatable>",
      "sugared_genericSig": "<T1, T2, T3, T4, T5 where T1 : Swift.Equatable, T2 : Swift.Equatable, T3 : Swift.Equatable, T4 : Swift.Equatable, T5 : Swift.Equatable>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "!=",
      "printedName": "!=(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4)>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_2"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_3"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_4"
                }
              ]
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4)?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_2"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_3"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_4"
                }
              ]
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2neoiyyAA11ExpectationVyx_q_q0_q1_q2_tG_x_q_q0_q1_q2_tSgtSQRzSQR_SQR0_SQR1_SQR2_r3_lF",
      "mangledName": "$s6Nimble2neoiyyAA11ExpectationVyx_q_q0_q1_q2_tG_x_q_q0_q1_q2_tSgtSQRzSQR_SQR0_SQR1_SQR2_r3_lF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable, τ_0_2 : Swift.Equatable, τ_0_3 : Swift.Equatable, τ_0_4 : Swift.Equatable>",
      "sugared_genericSig": "<T1, T2, T3, T4, T5 where T1 : Swift.Equatable, T2 : Swift.Equatable, T3 : Swift.Equatable, T4 : Swift.Equatable, T5 : Swift.Equatable>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "equal",
      "printedName": "equal(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5)>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_2"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_3"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_4"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_5"
                }
              ]
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5)?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_2"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_3"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_4"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_5"
                }
              ]
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble5equalyAA9PredicateVyx_q_q0_q1_q2_q3_tGx_q_q0_q1_q2_q3_tSgSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF",
      "mangledName": "$s6Nimble5equalyAA9PredicateVyx_q_q0_q1_q2_q3_tGx_q_q0_q1_q2_q3_tSgSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable, τ_0_2 : Swift.Equatable, τ_0_3 : Swift.Equatable, τ_0_4 : Swift.Equatable, τ_0_5 : Swift.Equatable>",
      "sugared_genericSig": "<T1, T2, T3, T4, T5, T6 where T1 : Swift.Equatable, T2 : Swift.Equatable, T3 : Swift.Equatable, T4 : Swift.Equatable, T5 : Swift.Equatable, T6 : Swift.Equatable>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "==",
      "printedName": "==(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5)>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_2"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_3"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_4"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_5"
                }
              ]
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5)?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_2"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_3"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_4"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_5"
                }
              ]
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2eeoiyyAA11ExpectationVyx_q_q0_q1_q2_q3_tG_x_q_q0_q1_q2_q3_tSgtSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF",
      "mangledName": "$s6Nimble2eeoiyyAA11ExpectationVyx_q_q0_q1_q2_q3_tG_x_q_q0_q1_q2_q3_tSgtSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable, τ_0_2 : Swift.Equatable, τ_0_3 : Swift.Equatable, τ_0_4 : Swift.Equatable, τ_0_5 : Swift.Equatable>",
      "sugared_genericSig": "<T1, T2, T3, T4, T5, T6 where T1 : Swift.Equatable, T2 : Swift.Equatable, T3 : Swift.Equatable, T4 : Swift.Equatable, T5 : Swift.Equatable, T6 : Swift.Equatable>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "!=",
      "printedName": "!=(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "Expectation",
          "printedName": "Nimble.Expectation<(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5)>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_2"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_3"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_4"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_5"
                }
              ]
            }
          ],
          "usr": "s:6Nimble11ExpectationV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5)?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_1"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_2"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_3"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_4"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_5"
                }
              ]
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2neoiyyAA11ExpectationVyx_q_q0_q1_q2_q3_tG_x_q_q0_q1_q2_q3_tSgtSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF",
      "mangledName": "$s6Nimble2neoiyyAA11ExpectationVyx_q_q0_q1_q2_q3_tG_x_q_q0_q1_q2_q3_tSgtSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable, τ_0_2 : Swift.Equatable, τ_0_3 : Swift.Equatable, τ_0_4 : Swift.Equatable, τ_0_5 : Swift.Equatable>",
      "sugared_genericSig": "<T1, T2, T3, T4, T5, T6 where T1 : Swift.Equatable, T2 : Swift.Equatable, T3 : Swift.Equatable, T4 : Swift.Equatable, T5 : Swift.Equatable, T6 : Swift.Equatable>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "messageForError",
      "printedName": "messageForError(postfixMessageVerb:actualError:error:errorType:closure:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "ExpectationMessage",
          "printedName": "Nimble.ExpectationMessage",
          "usr": "s:6Nimble18ExpectationMessageO"
        },
        {
          "kind": "TypeNominal",
          "name": "String",
          "printedName": "Swift.String",
          "hasDefaultArg": true,
          "usr": "s:SS"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "Swift.Error?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Error",
              "printedName": "Swift.Error",
              "usr": "s:s5ErrorP"
            }
          ],
          "usr": "s:Sq"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "τ_0_0?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "hasDefaultArg": true,
          "usr": "s:Sq"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "τ_0_0.Type?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Metatype",
              "printedName": "τ_0_0.Type",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ]
            }
          ],
          "hasDefaultArg": true,
          "usr": "s:Sq"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "((τ_0_0) -> ())?",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(τ_0_0) -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ]
            }
          ],
          "hasDefaultArg": true,
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble15messageForError18postfixMessageVerb06actualD05error0I4Type7closureAA011ExpectationF0OSS_s0D0_pSgxSgxmSgyxcSgtsAJRzlF",
      "mangledName": "$s6Nimble15messageForError18postfixMessageVerb06actualD05error0I4Type7closureAA011ExpectationF0OSS_s0D0_pSgxSgxmSgyxcSgtsAJRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Error>",
      "sugared_genericSig": "<T where T : Swift.Error>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "errorMatchesExpectedError",
      "printedName": "errorMatchesExpectedError(_:expectedError:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Bool",
          "printedName": "Swift.Bool",
          "usr": "s:Sb"
        },
        {
          "kind": "TypeNominal",
          "name": "Error",
          "printedName": "Swift.Error",
          "usr": "s:s5ErrorP"
        },
        {
          "kind": "TypeNominal",
          "name": "GenericTypeParam",
          "printedName": "τ_0_0"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble25errorMatchesExpectedError_08expectedE0Sbs0E0_p_xtsADRzlF",
      "mangledName": "$s6Nimble25errorMatchesExpectedError_08expectedE0Sbs0E0_p_xtsADRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Error>",
      "sugared_genericSig": "<T where T : Swift.Error>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "messageForError",
      "printedName": "messageForError(actualError:closure:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "ExpectationMessage",
          "printedName": "Nimble.ExpectationMessage",
          "usr": "s:6Nimble18ExpectationMessageO"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "Swift.Error?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Error",
              "printedName": "Swift.Error",
              "usr": "s:s5ErrorP"
            }
          ],
          "usr": "s:Sq"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "((Swift.Error) -> ())?",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Swift.Error) -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Error",
                  "printedName": "Swift.Error",
                  "usr": "s:s5ErrorP"
                }
              ]
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble15messageForError06actualD07closureAA18ExpectationMessageOs0D0_pSg_ysAG_pcSgtF",
      "mangledName": "$s6Nimble15messageForError06actualD07closureAA18ExpectationMessageOs0D0_pSg_ysAG_pcSgtF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "execute",
      "printedName": "execute(_:_:_:to:description:captureExceptions:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Tuple",
          "printedName": "(Swift.Bool, Nimble.FailureMessage)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "FailureMessage",
              "printedName": "Nimble.FailureMessage",
              "usr": "c:@M@Nimble@objc(cs)FailureMessage"
            }
          ]
        },
        {
          "kind": "TypeNominal",
          "name": "Expression",
          "printedName": "Nimble.Expression<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble10ExpressionV"
        },
        {
          "kind": "TypeNominal",
          "name": "ExpectationStyle",
          "printedName": "Nimble.ExpectationStyle",
          "usr": "s:6Nimble16ExpectationStyleO"
        },
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "String",
          "printedName": "Swift.String",
          "usr": "s:SS"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "Swift.String?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "usr": "s:Sq"
        },
        {
          "kind": "TypeNominal",
          "name": "Bool",
          "printedName": "Swift.Bool",
          "hasDefaultArg": true,
          "usr": "s:Sb"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble7execute___2to11description17captureExceptionsSb_AA14FailureMessageCtAA10ExpressionVyxG_AA16ExpectationStyleOAA9PredicateVyxGS2SSgSbtlF",
      "mangledName": "$s6Nimble7execute___2to11description17captureExceptionsSb_AA14FailureMessageCtAA10ExpressionVyxG_AA16ExpectationStyleOAA9PredicateVyxGS2SSgSbtlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<T>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "TypeDecl",
      "name": "Expectation",
      "printedName": "Expectation",
      "children": [
        {
          "kind": "Var",
          "name": "expression",
          "printedName": "expression",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Expression",
              "printedName": "Nimble.Expression<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble10ExpressionV"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble11ExpectationV10expressionAA10ExpressionVyxGvp",
          "mangledName": "$s6Nimble11ExpectationV10expressionAA10ExpressionVyxGvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 0,
          "isLet": true,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Expression",
                  "printedName": "Nimble.Expression<τ_0_0>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    }
                  ],
                  "usr": "s:6Nimble10ExpressionV"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble11ExpectationV10expressionAA10ExpressionVyxGvg",
              "mangledName": "$s6Nimble11ExpectationV10expressionAA10ExpressionVyxGvg",
              "moduleName": "Nimble",
              "genericSig": "<τ_0_0>",
              "sugared_genericSig": "<T>",
              "implicit": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(expression:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Expectation",
              "printedName": "Nimble.Expectation<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble11ExpectationV"
            },
            {
              "kind": "TypeNominal",
              "name": "Expression",
              "printedName": "Nimble.Expression<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble10ExpressionV"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble11ExpectationV10expressionACyxGAA10ExpressionVyxG_tcfc",
          "mangledName": "$s6Nimble11ExpectationV10expressionACyxGAA10ExpressionVyxG_tcfc",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "declAttributes": [
            "AccessControl"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Function",
          "name": "verify",
          "printedName": "verify(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "FailureMessage",
              "printedName": "Nimble.FailureMessage",
              "usr": "c:@M@Nimble@objc(cs)FailureMessage"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble11ExpectationV6verifyyySb_AA14FailureMessageCtF",
          "mangledName": "$s6Nimble11ExpectationV6verifyyySb_AA14FailureMessageCtF",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "declAttributes": [
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "to",
          "printedName": "to(_:description:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Expectation",
              "printedName": "Nimble.Expectation<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble11ExpectationV"
            },
            {
              "kind": "TypeNominal",
              "name": "Predicate",
              "printedName": "Nimble.Predicate<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble9PredicateV"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "Swift.String?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "hasDefaultArg": true,
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble11ExpectationV2to_11descriptionACyxGAA9PredicateVyxG_SSSgtF",
          "mangledName": "$s6Nimble11ExpectationV2to_11descriptionACyxGAA9PredicateVyxG_SSSgtF",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "declAttributes": [
            "AccessControl",
            "DiscardableResult",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "toNot",
          "printedName": "toNot(_:description:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Expectation",
              "printedName": "Nimble.Expectation<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble11ExpectationV"
            },
            {
              "kind": "TypeNominal",
              "name": "Predicate",
              "printedName": "Nimble.Predicate<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble9PredicateV"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "Swift.String?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "hasDefaultArg": true,
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble11ExpectationV5toNot_11descriptionACyxGAA9PredicateVyxG_SSSgtF",
          "mangledName": "$s6Nimble11ExpectationV5toNot_11descriptionACyxGAA9PredicateVyxG_SSSgtF",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "declAttributes": [
            "AccessControl",
            "DiscardableResult",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "notTo",
          "printedName": "notTo(_:description:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Expectation",
              "printedName": "Nimble.Expectation<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble11ExpectationV"
            },
            {
              "kind": "TypeNominal",
              "name": "Predicate",
              "printedName": "Nimble.Predicate<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble9PredicateV"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "Swift.String?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "hasDefaultArg": true,
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble11ExpectationV5notTo_11descriptionACyxGAA9PredicateVyxG_SSSgtF",
          "mangledName": "$s6Nimble11ExpectationV5notTo_11descriptionACyxGAA9PredicateVyxG_SSSgtF",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "declAttributes": [
            "AccessControl",
            "DiscardableResult",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "toEventually",
          "printedName": "toEventually(_:timeout:pollInterval:description:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Predicate",
              "printedName": "Nimble.Predicate<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble9PredicateV"
            },
            {
              "kind": "TypeNominal",
              "name": "DispatchTimeInterval",
              "printedName": "Dispatch.DispatchTimeInterval",
              "hasDefaultArg": true,
              "usr": "s:8Dispatch0A12TimeIntervalO"
            },
            {
              "kind": "TypeNominal",
              "name": "DispatchTimeInterval",
              "printedName": "Dispatch.DispatchTimeInterval",
              "hasDefaultArg": true,
              "usr": "s:8Dispatch0A12TimeIntervalO"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "Swift.String?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "hasDefaultArg": true,
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble11ExpectationV12toEventually_7timeout12pollInterval11descriptionyAA9PredicateVyxG_8Dispatch0j4TimeG0OAMSSSgtF",
          "mangledName": "$s6Nimble11ExpectationV12toEventually_7timeout12pollInterval11descriptionyAA9PredicateVyxG_8Dispatch0j4TimeG0OAMSSSgtF",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "toEventuallyNot",
          "printedName": "toEventuallyNot(_:timeout:pollInterval:description:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Predicate",
              "printedName": "Nimble.Predicate<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble9PredicateV"
            },
            {
              "kind": "TypeNominal",
              "name": "DispatchTimeInterval",
              "printedName": "Dispatch.DispatchTimeInterval",
              "hasDefaultArg": true,
              "usr": "s:8Dispatch0A12TimeIntervalO"
            },
            {
              "kind": "TypeNominal",
              "name": "DispatchTimeInterval",
              "printedName": "Dispatch.DispatchTimeInterval",
              "hasDefaultArg": true,
              "usr": "s:8Dispatch0A12TimeIntervalO"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "Swift.String?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "hasDefaultArg": true,
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble11ExpectationV15toEventuallyNot_7timeout12pollInterval11descriptionyAA9PredicateVyxG_8Dispatch0k4TimeH0OAMSSSgtF",
          "mangledName": "$s6Nimble11ExpectationV15toEventuallyNot_7timeout12pollInterval11descriptionyAA9PredicateVyxG_8Dispatch0k4TimeH0OAMSSSgtF",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "toNotEventually",
          "printedName": "toNotEventually(_:timeout:pollInterval:description:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Predicate",
              "printedName": "Nimble.Predicate<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble9PredicateV"
            },
            {
              "kind": "TypeNominal",
              "name": "DispatchTimeInterval",
              "printedName": "Dispatch.DispatchTimeInterval",
              "hasDefaultArg": true,
              "usr": "s:8Dispatch0A12TimeIntervalO"
            },
            {
              "kind": "TypeNominal",
              "name": "DispatchTimeInterval",
              "printedName": "Dispatch.DispatchTimeInterval",
              "hasDefaultArg": true,
              "usr": "s:8Dispatch0A12TimeIntervalO"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "Swift.String?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "hasDefaultArg": true,
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble11ExpectationV15toNotEventually_7timeout12pollInterval11descriptionyAA9PredicateVyxG_8Dispatch0k4TimeH0OAMSSSgtF",
          "mangledName": "$s6Nimble11ExpectationV15toNotEventually_7timeout12pollInterval11descriptionyAA9PredicateVyxG_8Dispatch0k4TimeH0OAMSSSgtF",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "toNever",
          "printedName": "toNever(_:until:pollInterval:description:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Predicate",
              "printedName": "Nimble.Predicate<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble9PredicateV"
            },
            {
              "kind": "TypeNominal",
              "name": "DispatchTimeInterval",
              "printedName": "Dispatch.DispatchTimeInterval",
              "hasDefaultArg": true,
              "usr": "s:8Dispatch0A12TimeIntervalO"
            },
            {
              "kind": "TypeNominal",
              "name": "DispatchTimeInterval",
              "printedName": "Dispatch.DispatchTimeInterval",
              "hasDefaultArg": true,
              "usr": "s:8Dispatch0A12TimeIntervalO"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "Swift.String?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "hasDefaultArg": true,
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble11ExpectationV7toNever_5until12pollInterval11descriptionyAA9PredicateVyxG_8Dispatch0j4TimeG0OAMSSSgtF",
          "mangledName": "$s6Nimble11ExpectationV7toNever_5until12pollInterval11descriptionyAA9PredicateVyxG_8Dispatch0j4TimeG0OAMSSSgtF",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "neverTo",
          "printedName": "neverTo(_:until:pollInterval:description:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Predicate",
              "printedName": "Nimble.Predicate<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble9PredicateV"
            },
            {
              "kind": "TypeNominal",
              "name": "DispatchTimeInterval",
              "printedName": "Dispatch.DispatchTimeInterval",
              "hasDefaultArg": true,
              "usr": "s:8Dispatch0A12TimeIntervalO"
            },
            {
              "kind": "TypeNominal",
              "name": "DispatchTimeInterval",
              "printedName": "Dispatch.DispatchTimeInterval",
              "hasDefaultArg": true,
              "usr": "s:8Dispatch0A12TimeIntervalO"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "Swift.String?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "hasDefaultArg": true,
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble11ExpectationV7neverTo_5until12pollInterval11descriptionyAA9PredicateVyxG_8Dispatch0j4TimeG0OAMSSSgtF",
          "mangledName": "$s6Nimble11ExpectationV7neverTo_5until12pollInterval11descriptionyAA9PredicateVyxG_8Dispatch0j4TimeG0OAMSSSgtF",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "toAlways",
          "printedName": "toAlways(_:until:pollInterval:description:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Predicate",
              "printedName": "Nimble.Predicate<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble9PredicateV"
            },
            {
              "kind": "TypeNominal",
              "name": "DispatchTimeInterval",
              "printedName": "Dispatch.DispatchTimeInterval",
              "hasDefaultArg": true,
              "usr": "s:8Dispatch0A12TimeIntervalO"
            },
            {
              "kind": "TypeNominal",
              "name": "DispatchTimeInterval",
              "printedName": "Dispatch.DispatchTimeInterval",
              "hasDefaultArg": true,
              "usr": "s:8Dispatch0A12TimeIntervalO"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "Swift.String?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "hasDefaultArg": true,
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble11ExpectationV8toAlways_5until12pollInterval11descriptionyAA9PredicateVyxG_8Dispatch0j4TimeG0OAMSSSgtF",
          "mangledName": "$s6Nimble11ExpectationV8toAlways_5until12pollInterval11descriptionyAA9PredicateVyxG_8Dispatch0j4TimeG0OAMSSSgtF",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "alwaysTo",
          "printedName": "alwaysTo(_:until:pollInterval:description:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Predicate",
              "printedName": "Nimble.Predicate<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble9PredicateV"
            },
            {
              "kind": "TypeNominal",
              "name": "DispatchTimeInterval",
              "printedName": "Dispatch.DispatchTimeInterval",
              "hasDefaultArg": true,
              "usr": "s:8Dispatch0A12TimeIntervalO"
            },
            {
              "kind": "TypeNominal",
              "name": "DispatchTimeInterval",
              "printedName": "Dispatch.DispatchTimeInterval",
              "hasDefaultArg": true,
              "usr": "s:8Dispatch0A12TimeIntervalO"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "Swift.String?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "hasDefaultArg": true,
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble11ExpectationV8alwaysTo_5until12pollInterval11descriptionyAA9PredicateVyxG_8Dispatch0j4TimeG0OAMSSSgtF",
          "mangledName": "$s6Nimble11ExpectationV8alwaysTo_5until12pollInterval11descriptionyAA9PredicateVyxG_8Dispatch0j4TimeG0OAMSSSgtF",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "≈",
          "printedName": "≈(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Expectation",
              "printedName": "Nimble.Expectation<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble11ExpectationV"
            },
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble11ExpectationVAASlRzSF7ElementRpzlE003dchoiyyACyxG_xtFZ",
          "mangledName": "$s6Nimble11ExpectationVAASlRzSF7ElementRpzlE003dchoiyyACyxG_xtFZ",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0 where τ_0_0 : Swift.Collection, τ_0_0.Element : Swift.FloatingPoint>",
          "sugared_genericSig": "<T where T : Swift.Collection, T.Element : Swift.FloatingPoint>",
          "static": true,
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "≈",
          "printedName": "≈(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Expectation",
              "printedName": "Nimble.Expectation<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble11ExpectationV"
            },
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble11ExpectationVAASFRzlE003dchoiyyACyxG_xtFZ",
          "mangledName": "$s6Nimble11ExpectationVAASFRzlE003dchoiyyACyxG_xtFZ",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0 where τ_0_0 : Swift.FloatingPoint>",
          "sugared_genericSig": "<T where T : Swift.FloatingPoint>",
          "static": true,
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "≈",
          "printedName": "≈(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Expectation",
              "printedName": "Nimble.Expectation<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble11ExpectationV"
            },
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(expected: τ_0_0, delta: τ_0_0)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ]
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble11ExpectationVAASFRzlE003dchoiyyACyxG_x8expected_x5deltattFZ",
          "mangledName": "$s6Nimble11ExpectationVAASFRzlE003dchoiyyACyxG_x8expected_x5deltattFZ",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0 where τ_0_0 : Swift.FloatingPoint>",
          "sugared_genericSig": "<T where T : Swift.FloatingPoint>",
          "static": true,
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "==",
          "printedName": "==(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Expectation",
              "printedName": "Nimble.Expectation<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble11ExpectationV"
            },
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(expected: τ_0_0, delta: τ_0_0)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ]
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble11ExpectationVAASFRzlE2eeoiyyACyxG_x8expected_x5deltattFZ",
          "mangledName": "$s6Nimble11ExpectationVAASFRzlE2eeoiyyACyxG_x8expected_x5deltattFZ",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0 where τ_0_0 : Swift.FloatingPoint>",
          "sugared_genericSig": "<T where T : Swift.FloatingPoint>",
          "static": true,
          "declAttributes": [
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "≈",
          "printedName": "≈(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Expectation",
              "printedName": "Nimble.Expectation<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble11ExpectationV"
            },
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble11ExpectationVA2A20NMBDoubleConvertibleRzlE003dchoiyyACyxG_xtFZ",
          "mangledName": "$s6Nimble11ExpectationVA2A20NMBDoubleConvertibleRzlE003dchoiyyACyxG_xtFZ",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBDoubleConvertible>",
          "sugared_genericSig": "<T where T : Nimble.NMBDoubleConvertible>",
          "static": true,
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "≈",
          "printedName": "≈(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Expectation",
              "printedName": "Nimble.Expectation<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble11ExpectationV"
            },
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(expected: τ_0_0, delta: Swift.Double)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Double",
                  "printedName": "Swift.Double",
                  "usr": "s:Sd"
                }
              ]
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble11ExpectationVA2A20NMBDoubleConvertibleRzlE003dchoiyyACyxG_x8expected_Sd5deltattFZ",
          "mangledName": "$s6Nimble11ExpectationVA2A20NMBDoubleConvertibleRzlE003dchoiyyACyxG_x8expected_Sd5deltattFZ",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBDoubleConvertible>",
          "sugared_genericSig": "<T where T : Nimble.NMBDoubleConvertible>",
          "static": true,
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "==",
          "printedName": "==(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Expectation",
              "printedName": "Nimble.Expectation<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble11ExpectationV"
            },
            {
              "kind": "TypeNominal",
              "name": "Tuple",
              "printedName": "(expected: τ_0_0, delta: Swift.Double)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Double",
                  "printedName": "Swift.Double",
                  "usr": "s:Sd"
                }
              ]
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble11ExpectationVA2A20NMBDoubleConvertibleRzlE2eeoiyyACyxG_x8expected_Sd5deltattFZ",
          "mangledName": "$s6Nimble11ExpectationVA2A20NMBDoubleConvertibleRzlE2eeoiyyACyxG_x8expected_Sd5deltattFZ",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBDoubleConvertible>",
          "sugared_genericSig": "<T where T : Nimble.NMBDoubleConvertible>",
          "static": true,
          "declAttributes": [
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "===",
          "printedName": "===(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Expectation",
              "printedName": "Nimble.Expectation<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble11ExpectationV"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "AnyObject?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ProtocolComposition",
                  "printedName": "AnyObject"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble11ExpectationVAAyXlRszlE3eeeoiyyACyyXlG_yXlSgtFZ",
          "mangledName": "$s6Nimble11ExpectationVAAyXlRszlE3eeeoiyyACyyXlG_yXlSgtFZ",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0 where τ_0_0 == AnyObject>",
          "sugared_genericSig": "<T where T == Swift.AnyObject>",
          "static": true,
          "declAttributes": [
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "!==",
          "printedName": "!==(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Expectation",
              "printedName": "Nimble.Expectation<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble11ExpectationV"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "AnyObject?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ProtocolComposition",
                  "printedName": "AnyObject"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble11ExpectationVAAyXlRszlE3neeoiyyACyyXlG_yXlSgtFZ",
          "mangledName": "$s6Nimble11ExpectationVAAyXlRszlE3neeoiyyACyyXlG_yXlSgtFZ",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0 where τ_0_0 == AnyObject>",
          "sugared_genericSig": "<T where T == Swift.AnyObject>",
          "static": true,
          "declAttributes": [
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "TypeDecl",
          "name": "Nil",
          "printedName": "Nil",
          "children": [
            {
              "kind": "Constructor",
              "name": "init",
              "printedName": "init(nilLiteral:)",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Nil",
                  "printedName": "Nimble.Expectation<τ_0_0>.Nil",
                  "usr": "s:6Nimble11ExpectationV3NilV"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "declKind": "Constructor",
              "usr": "s:6Nimble11ExpectationV3NilV10nilLiteralAEyx_Gyt_tcfc",
              "mangledName": "$s6Nimble11ExpectationV3NilV10nilLiteralAEyx_Gyt_tcfc",
              "moduleName": "Nimble",
              "genericSig": "<τ_0_0>",
              "sugared_genericSig": "<T>",
              "declAttributes": [
                "AccessControl"
              ],
              "init_kind": "Designated"
            }
          ],
          "declKind": "Struct",
          "usr": "s:6Nimble11ExpectationV3NilV",
          "mangledName": "$s6Nimble11ExpectationV3NilV",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "conformances": [
            {
              "kind": "Conformance",
              "name": "ExpressibleByNilLiteral",
              "printedName": "ExpressibleByNilLiteral",
              "usr": "s:s23ExpressibleByNilLiteralP",
              "mangledName": "$ss23ExpressibleByNilLiteralP"
            }
          ]
        },
        {
          "kind": "Function",
          "name": "==",
          "printedName": "==(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Expectation",
              "printedName": "Nimble.Expectation<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble11ExpectationV"
            },
            {
              "kind": "TypeNominal",
              "name": "Nil",
              "printedName": "Nimble.Expectation<τ_0_0>.Nil",
              "usr": "s:6Nimble11ExpectationV3NilV"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble11ExpectationV2eeoiyyACyxG_AC3NilVyx_GtFZ",
          "mangledName": "$s6Nimble11ExpectationV2eeoiyyACyxG_AC3NilVyx_GtFZ",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "static": true,
          "declAttributes": [
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "!=",
          "printedName": "!=(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Expectation",
              "printedName": "Nimble.Expectation<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble11ExpectationV"
            },
            {
              "kind": "TypeNominal",
              "name": "Nil",
              "printedName": "Nimble.Expectation<τ_0_0>.Nil",
              "usr": "s:6Nimble11ExpectationV3NilV"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble11ExpectationV2neoiyyACyxG_AC3NilVyx_GtFZ",
          "mangledName": "$s6Nimble11ExpectationV2neoiyyACyxG_AC3NilVyx_GtFZ",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "static": true,
          "declAttributes": [
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "==",
          "printedName": "==(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Expectation",
              "printedName": "Nimble.Expectation<()>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "usr": "s:6Nimble11ExpectationV"
            },
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble11ExpectationVAAytRszlE2eeoiyyACyytG_yttFZ",
          "mangledName": "$s6Nimble11ExpectationVAAytRszlE2eeoiyyACyytG_yttFZ",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0 where τ_0_0 == ()>",
          "sugared_genericSig": "<T where T == ()>",
          "static": true,
          "declAttributes": [
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "!=",
          "printedName": "!=(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Expectation",
              "printedName": "Nimble.Expectation<()>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "usr": "s:6Nimble11ExpectationV"
            },
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble11ExpectationVAAytRszlE2neoiyyACyytG_yttFZ",
          "mangledName": "$s6Nimble11ExpectationVAAytRszlE2neoiyyACyytG_yttFZ",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0 where τ_0_0 == ()>",
          "sugared_genericSig": "<T where T == ()>",
          "static": true,
          "declAttributes": [
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        }
      ],
      "declKind": "Struct",
      "usr": "s:6Nimble11ExpectationV",
      "mangledName": "$s6Nimble11ExpectationV",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<T>",
      "declAttributes": [
        "AccessControl"
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "ExpectationMessage",
      "printedName": "ExpectationMessage",
      "children": [
        {
          "kind": "Var",
          "name": "expectedActualValueTo",
          "printedName": "expectedActualValueTo",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.ExpectationMessage.Type) -> (Swift.String) -> Nimble.ExpectationMessage",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Swift.String) -> Nimble.ExpectationMessage",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "ExpectationMessage",
                      "printedName": "Nimble.ExpectationMessage",
                      "usr": "s:6Nimble18ExpectationMessageO"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "String",
                      "printedName": "Swift.String",
                      "usr": "s:SS"
                    }
                  ]
                },
                {
                  "kind": "TypeNominal",
                  "name": "Metatype",
                  "printedName": "Nimble.ExpectationMessage.Type",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "ExpectationMessage",
                      "printedName": "Nimble.ExpectationMessage",
                      "usr": "s:6Nimble18ExpectationMessageO"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "EnumElement",
          "usr": "s:6Nimble18ExpectationMessageO21expectedActualValueToyACSScACmF",
          "mangledName": "$s6Nimble18ExpectationMessageO21expectedActualValueToyACSScACmF",
          "moduleName": "Nimble",
          "declAttributes": [
            "RawDocComment"
          ],
          "fixedbinaryorder": 0
        },
        {
          "kind": "Var",
          "name": "expectedCustomValueTo",
          "printedName": "expectedCustomValueTo",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.ExpectationMessage.Type) -> (Swift.String, Swift.String) -> Nimble.ExpectationMessage",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Swift.String, Swift.String) -> Nimble.ExpectationMessage",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "ExpectationMessage",
                      "printedName": "Nimble.ExpectationMessage",
                      "usr": "s:6Nimble18ExpectationMessageO"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "Tuple",
                      "printedName": "(Swift.String, actual: Swift.String)",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "String",
                          "printedName": "Swift.String",
                          "usr": "s:SS"
                        },
                        {
                          "kind": "TypeNominal",
                          "name": "String",
                          "printedName": "Swift.String",
                          "usr": "s:SS"
                        }
                      ]
                    }
                  ]
                },
                {
                  "kind": "TypeNominal",
                  "name": "Metatype",
                  "printedName": "Nimble.ExpectationMessage.Type",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "ExpectationMessage",
                      "printedName": "Nimble.ExpectationMessage",
                      "usr": "s:6Nimble18ExpectationMessageO"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "EnumElement",
          "usr": "s:6Nimble18ExpectationMessageO21expectedCustomValueToyACSS_SStcACmF",
          "mangledName": "$s6Nimble18ExpectationMessageO21expectedCustomValueToyACSS_SStcACmF",
          "moduleName": "Nimble",
          "declAttributes": [
            "RawDocComment"
          ],
          "fixedbinaryorder": 1
        },
        {
          "kind": "Var",
          "name": "expectedTo",
          "printedName": "expectedTo",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.ExpectationMessage.Type) -> (Swift.String) -> Nimble.ExpectationMessage",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Swift.String) -> Nimble.ExpectationMessage",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "ExpectationMessage",
                      "printedName": "Nimble.ExpectationMessage",
                      "usr": "s:6Nimble18ExpectationMessageO"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "String",
                      "printedName": "Swift.String",
                      "usr": "s:SS"
                    }
                  ]
                },
                {
                  "kind": "TypeNominal",
                  "name": "Metatype",
                  "printedName": "Nimble.ExpectationMessage.Type",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "ExpectationMessage",
                      "printedName": "Nimble.ExpectationMessage",
                      "usr": "s:6Nimble18ExpectationMessageO"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "EnumElement",
          "usr": "s:6Nimble18ExpectationMessageO10expectedToyACSScACmF",
          "mangledName": "$s6Nimble18ExpectationMessageO10expectedToyACSScACmF",
          "moduleName": "Nimble",
          "declAttributes": [
            "RawDocComment"
          ],
          "fixedbinaryorder": 2
        },
        {
          "kind": "Var",
          "name": "fail",
          "printedName": "fail",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.ExpectationMessage.Type) -> (Swift.String) -> Nimble.ExpectationMessage",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Swift.String) -> Nimble.ExpectationMessage",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "ExpectationMessage",
                      "printedName": "Nimble.ExpectationMessage",
                      "usr": "s:6Nimble18ExpectationMessageO"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "String",
                      "printedName": "Swift.String",
                      "usr": "s:SS"
                    }
                  ]
                },
                {
                  "kind": "TypeNominal",
                  "name": "Metatype",
                  "printedName": "Nimble.ExpectationMessage.Type",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "ExpectationMessage",
                      "printedName": "Nimble.ExpectationMessage",
                      "usr": "s:6Nimble18ExpectationMessageO"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "EnumElement",
          "usr": "s:6Nimble18ExpectationMessageO4failyACSScACmF",
          "mangledName": "$s6Nimble18ExpectationMessageO4failyACSScACmF",
          "moduleName": "Nimble",
          "declAttributes": [
            "RawDocComment"
          ],
          "fixedbinaryorder": 3
        },
        {
          "kind": "Var",
          "name": "prepends",
          "printedName": "prepends",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.ExpectationMessage.Type) -> (Swift.String, Nimble.ExpectationMessage) -> Nimble.ExpectationMessage",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Swift.String, Nimble.ExpectationMessage) -> Nimble.ExpectationMessage",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "ExpectationMessage",
                      "printedName": "Nimble.ExpectationMessage",
                      "usr": "s:6Nimble18ExpectationMessageO"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "Tuple",
                      "printedName": "(Swift.String, Nimble.ExpectationMessage)",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "String",
                          "printedName": "Swift.String",
                          "usr": "s:SS"
                        },
                        {
                          "kind": "TypeNominal",
                          "name": "ExpectationMessage",
                          "printedName": "Nimble.ExpectationMessage",
                          "usr": "s:6Nimble18ExpectationMessageO"
                        }
                      ]
                    }
                  ]
                },
                {
                  "kind": "TypeNominal",
                  "name": "Metatype",
                  "printedName": "Nimble.ExpectationMessage.Type",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "ExpectationMessage",
                      "printedName": "Nimble.ExpectationMessage",
                      "usr": "s:6Nimble18ExpectationMessageO"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "EnumElement",
          "usr": "s:6Nimble18ExpectationMessageO8prependsyACSS_ACtcACmF",
          "mangledName": "$s6Nimble18ExpectationMessageO8prependsyACSS_ACtcACmF",
          "moduleName": "Nimble",
          "declAttributes": [
            "RawDocComment"
          ],
          "fixedbinaryorder": 4
        },
        {
          "kind": "Var",
          "name": "appends",
          "printedName": "appends",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.ExpectationMessage.Type) -> (Nimble.ExpectationMessage, Swift.String) -> Nimble.ExpectationMessage",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Nimble.ExpectationMessage, Swift.String) -> Nimble.ExpectationMessage",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "ExpectationMessage",
                      "printedName": "Nimble.ExpectationMessage",
                      "usr": "s:6Nimble18ExpectationMessageO"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "Tuple",
                      "printedName": "(Nimble.ExpectationMessage, Swift.String)",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "ExpectationMessage",
                          "printedName": "Nimble.ExpectationMessage",
                          "usr": "s:6Nimble18ExpectationMessageO"
                        },
                        {
                          "kind": "TypeNominal",
                          "name": "String",
                          "printedName": "Swift.String",
                          "usr": "s:SS"
                        }
                      ]
                    }
                  ]
                },
                {
                  "kind": "TypeNominal",
                  "name": "Metatype",
                  "printedName": "Nimble.ExpectationMessage.Type",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "ExpectationMessage",
                      "printedName": "Nimble.ExpectationMessage",
                      "usr": "s:6Nimble18ExpectationMessageO"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "EnumElement",
          "usr": "s:6Nimble18ExpectationMessageO7appendsyA2C_SStcACmF",
          "mangledName": "$s6Nimble18ExpectationMessageO7appendsyA2C_SStcACmF",
          "moduleName": "Nimble",
          "declAttributes": [
            "RawDocComment"
          ],
          "fixedbinaryorder": 5
        },
        {
          "kind": "Var",
          "name": "details",
          "printedName": "details",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.ExpectationMessage.Type) -> (Nimble.ExpectationMessage, Swift.String) -> Nimble.ExpectationMessage",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Nimble.ExpectationMessage, Swift.String) -> Nimble.ExpectationMessage",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "ExpectationMessage",
                      "printedName": "Nimble.ExpectationMessage",
                      "usr": "s:6Nimble18ExpectationMessageO"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "Tuple",
                      "printedName": "(Nimble.ExpectationMessage, Swift.String)",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "ExpectationMessage",
                          "printedName": "Nimble.ExpectationMessage",
                          "usr": "s:6Nimble18ExpectationMessageO"
                        },
                        {
                          "kind": "TypeNominal",
                          "name": "String",
                          "printedName": "Swift.String",
                          "usr": "s:SS"
                        }
                      ]
                    }
                  ]
                },
                {
                  "kind": "TypeNominal",
                  "name": "Metatype",
                  "printedName": "Nimble.ExpectationMessage.Type",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "ExpectationMessage",
                      "printedName": "Nimble.ExpectationMessage",
                      "usr": "s:6Nimble18ExpectationMessageO"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "EnumElement",
          "usr": "s:6Nimble18ExpectationMessageO7detailsyA2C_SStcACmF",
          "mangledName": "$s6Nimble18ExpectationMessageO7detailsyA2C_SStcACmF",
          "moduleName": "Nimble",
          "declAttributes": [
            "RawDocComment"
          ],
          "fixedbinaryorder": 6
        },
        {
          "kind": "Var",
          "name": "expectedMessage",
          "printedName": "expectedMessage",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble18ExpectationMessageO08expectedC0SSvp",
          "mangledName": "$s6Nimble18ExpectationMessageO08expectedC0SSvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble18ExpectationMessageO08expectedC0SSvg",
              "mangledName": "$s6Nimble18ExpectationMessageO08expectedC0SSvg",
              "moduleName": "Nimble",
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Function",
          "name": "appended",
          "printedName": "appended(message:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "ExpectationMessage",
              "printedName": "Nimble.ExpectationMessage",
              "usr": "s:6Nimble18ExpectationMessageO"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble18ExpectationMessageO8appended7messageACSS_tF",
          "mangledName": "$s6Nimble18ExpectationMessageO8appended7messageACSS_tF",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "appendedBeNilHint",
          "printedName": "appendedBeNilHint()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "ExpectationMessage",
              "printedName": "Nimble.ExpectationMessage",
              "usr": "s:6Nimble18ExpectationMessageO"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble18ExpectationMessageO17appendedBeNilHintACyF",
          "mangledName": "$s6Nimble18ExpectationMessageO17appendedBeNilHintACyF",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "appended",
          "printedName": "appended(details:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "ExpectationMessage",
              "printedName": "Nimble.ExpectationMessage",
              "usr": "s:6Nimble18ExpectationMessageO"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble18ExpectationMessageO8appended7detailsACSS_tF",
          "mangledName": "$s6Nimble18ExpectationMessageO8appended7detailsACSS_tF",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "visitLeafs",
          "printedName": "visitLeafs(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "ExpectationMessage",
              "printedName": "Nimble.ExpectationMessage",
              "usr": "s:6Nimble18ExpectationMessageO"
            },
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.ExpectationMessage) -> Nimble.ExpectationMessage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ExpectationMessage",
                  "printedName": "Nimble.ExpectationMessage",
                  "usr": "s:6Nimble18ExpectationMessageO"
                },
                {
                  "kind": "TypeNominal",
                  "name": "ExpectationMessage",
                  "printedName": "Nimble.ExpectationMessage",
                  "usr": "s:6Nimble18ExpectationMessageO"
                }
              ],
              "typeAttributes": [
                "noescape"
              ]
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble18ExpectationMessageO10visitLeafsyA3CXEF",
          "mangledName": "$s6Nimble18ExpectationMessageO10visitLeafsyA3CXEF",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "replacedExpectation",
          "printedName": "replacedExpectation(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "ExpectationMessage",
              "printedName": "Nimble.ExpectationMessage",
              "usr": "s:6Nimble18ExpectationMessageO"
            },
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.ExpectationMessage) -> Nimble.ExpectationMessage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ExpectationMessage",
                  "printedName": "Nimble.ExpectationMessage",
                  "usr": "s:6Nimble18ExpectationMessageO"
                },
                {
                  "kind": "TypeNominal",
                  "name": "ExpectationMessage",
                  "printedName": "Nimble.ExpectationMessage",
                  "usr": "s:6Nimble18ExpectationMessageO"
                }
              ]
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble18ExpectationMessageO08replacedB0yA3CcF",
          "mangledName": "$s6Nimble18ExpectationMessageO08replacedB0yA3CcF",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "wrappedExpectation",
          "printedName": "wrappedExpectation(before:after:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "ExpectationMessage",
              "printedName": "Nimble.ExpectationMessage",
              "usr": "s:6Nimble18ExpectationMessageO"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble18ExpectationMessageO07wrappedB06before5afterACSS_SStF",
          "mangledName": "$s6Nimble18ExpectationMessageO07wrappedB06before5afterACSS_SStF",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "prepended",
          "printedName": "prepended(expectation:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "ExpectationMessage",
              "printedName": "Nimble.ExpectationMessage",
              "usr": "s:6Nimble18ExpectationMessageO"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble18ExpectationMessageO9prepended11expectationACSS_tF",
          "mangledName": "$s6Nimble18ExpectationMessageO9prepended11expectationACSS_tF",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "prepended",
          "printedName": "prepended(message:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "ExpectationMessage",
              "printedName": "Nimble.ExpectationMessage",
              "usr": "s:6Nimble18ExpectationMessageO"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble18ExpectationMessageO9prepended7messageACSS_tF",
          "mangledName": "$s6Nimble18ExpectationMessageO9prepended7messageACSS_tF",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "toString",
          "printedName": "toString(actual:expected:to:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "hasDefaultArg": true,
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "hasDefaultArg": true,
              "usr": "s:SS"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble18ExpectationMessageO8toString6actual8expected0D0S2S_S2StF",
          "mangledName": "$s6Nimble18ExpectationMessageO8toString6actual8expected0D0S2S_S2StF",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "update",
          "printedName": "update(failureMessage:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "FailureMessage",
              "printedName": "Nimble.FailureMessage",
              "usr": "c:@M@Nimble@objc(cs)FailureMessage"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble18ExpectationMessageO6update07failureC0yAA07FailureC0C_tF",
          "mangledName": "$s6Nimble18ExpectationMessageO6update07failureC0yAA07FailureC0C_tF",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "toObjectiveC",
          "printedName": "toObjectiveC()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBExpectationMessage",
              "printedName": "Nimble.NMBExpectationMessage",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble18ExpectationMessageO12toObjectiveCAA014NMBExpectationC0CyF",
          "mangledName": "$s6Nimble18ExpectationMessageO12toObjectiveCAA014NMBExpectationC0CyF",
          "moduleName": "Nimble",
          "funcSelfKind": "NonMutating"
        }
      ],
      "declKind": "Enum",
      "usr": "s:6Nimble18ExpectationMessageO",
      "mangledName": "$s6Nimble18ExpectationMessageO",
      "moduleName": "Nimble",
      "declAttributes": [
        "Indirect",
        "AccessControl"
      ],
      "isEnumExhaustive": true
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "TypeDecl",
      "name": "NMBExpectationMessage",
      "printedName": "NMBExpectationMessage",
      "children": [
        {
          "kind": "Var",
          "name": "msg",
          "printedName": "msg",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "ExpectationMessage",
              "printedName": "Nimble.ExpectationMessage",
              "usr": "s:6Nimble18ExpectationMessageO"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble21NMBExpectationMessageC3msg33_91B61A31BDCDD83074B5B86E95C6888ELLAA011ExpectationC0Ovp",
          "mangledName": "$s6Nimble21NMBExpectationMessageC3msg33_91B61A31BDCDD83074B5B86E95C6888ELLAA011ExpectationC0Ovp",
          "moduleName": "Nimble",
          "isInternal": true,
          "declAttributes": [
            "Final",
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 0,
          "isLet": true,
          "hasStorage": true
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(swift:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBExpectationMessage",
              "printedName": "Nimble.NMBExpectationMessage",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
            },
            {
              "kind": "TypeNominal",
              "name": "ExpectationMessage",
              "printedName": "Nimble.ExpectationMessage",
              "usr": "s:6Nimble18ExpectationMessageO"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble21NMBExpectationMessageC5swiftAcA011ExpectationC0O_tcfc",
          "mangledName": "$s6Nimble21NMBExpectationMessageC5swiftAcA011ExpectationC0O_tcfc",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(expectedTo:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBExpectationMessage",
              "printedName": "Nimble.NMBExpectationMessage",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble21NMBExpectationMessageC10expectedToACSS_tcfc",
          "mangledName": "$s6Nimble21NMBExpectationMessageC10expectedToACSS_tcfc",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(expectedActualValueTo:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBExpectationMessage",
              "printedName": "Nimble.NMBExpectationMessage",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble21NMBExpectationMessageC21expectedActualValueToACSS_tcfc",
          "mangledName": "$s6Nimble21NMBExpectationMessageC21expectedActualValueToACSS_tcfc",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(expectedActualValueTo:customActualValue:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBExpectationMessage",
              "printedName": "Nimble.NMBExpectationMessage",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble21NMBExpectationMessageC21expectedActualValueTo06customeF0ACSS_SStcfc",
          "mangledName": "$s6Nimble21NMBExpectationMessageC21expectedActualValueTo06customeF0ACSS_SStcfc",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(fail:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBExpectationMessage",
              "printedName": "Nimble.NMBExpectationMessage",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble21NMBExpectationMessageC4failACSS_tcfc",
          "mangledName": "$s6Nimble21NMBExpectationMessageC4failACSS_tcfc",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(prepend:child:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBExpectationMessage",
              "printedName": "Nimble.NMBExpectationMessage",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "NMBExpectationMessage",
              "printedName": "Nimble.NMBExpectationMessage",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble21NMBExpectationMessageC7prepend5childACSS_ACtcfc",
          "mangledName": "$s6Nimble21NMBExpectationMessageC7prepend5childACSS_ACtcfc",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(appendedMessage:child:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBExpectationMessage",
              "printedName": "Nimble.NMBExpectationMessage",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "NMBExpectationMessage",
              "printedName": "Nimble.NMBExpectationMessage",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble21NMBExpectationMessageC08appendedC05childACSS_ACtcfc",
          "mangledName": "$s6Nimble21NMBExpectationMessageC08appendedC05childACSS_ACtcfc",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(prependedMessage:child:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBExpectationMessage",
              "printedName": "Nimble.NMBExpectationMessage",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "NMBExpectationMessage",
              "printedName": "Nimble.NMBExpectationMessage",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble21NMBExpectationMessageC09prependedC05childACSS_ACtcfc",
          "mangledName": "$s6Nimble21NMBExpectationMessageC09prependedC05childACSS_ACtcfc",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(details:child:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBExpectationMessage",
              "printedName": "Nimble.NMBExpectationMessage",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "NMBExpectationMessage",
              "printedName": "Nimble.NMBExpectationMessage",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble21NMBExpectationMessageC7details5childACSS_ACtcfc",
          "mangledName": "$s6Nimble21NMBExpectationMessageC7details5childACSS_ACtcfc",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Function",
          "name": "appendedBeNilHint",
          "printedName": "appendedBeNilHint()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBExpectationMessage",
              "printedName": "Nimble.NMBExpectationMessage",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble21NMBExpectationMessageC17appendedBeNilHintACyF",
          "mangledName": "$s6Nimble21NMBExpectationMessageC17appendedBeNilHintACyF",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "toSwift",
          "printedName": "toSwift()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "ExpectationMessage",
              "printedName": "Nimble.ExpectationMessage",
              "usr": "s:6Nimble18ExpectationMessageO"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble21NMBExpectationMessageC7toSwiftAA011ExpectationC0OyF",
          "mangledName": "$s6Nimble21NMBExpectationMessageC7toSwiftAA011ExpectationC0OyF",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBExpectationMessage",
              "printedName": "Nimble.NMBExpectationMessage",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
            }
          ],
          "declKind": "Constructor",
          "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage(im)init",
          "mangledName": "$s6Nimble21NMBExpectationMessageCACycfc",
          "moduleName": "Nimble",
          "overriding": true,
          "implicit": true,
          "objc_name": "init",
          "declAttributes": [
            "Dynamic",
            "ObjC",
            "Override"
          ],
          "init_kind": "Designated"
        }
      ],
      "declKind": "Class",
      "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage",
      "mangledName": "$s6Nimble21NMBExpectationMessageC",
      "moduleName": "Nimble",
      "isOpen": true,
      "declAttributes": [
        "AccessControl",
        "ObjC"
      ],
      "superclassUsr": "c:objc(cs)NSObject",
      "hasMissingDesignatedInitializers": true,
      "superclassNames": [
        "ObjectiveC.NSObject"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObservingPublishing",
          "printedName": "_KeyValueCodingAndObservingPublishing",
          "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
          "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObserving",
          "printedName": "_KeyValueCodingAndObserving",
          "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
          "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        }
      ]
    },
    {
      "kind": "Function",
      "name": "memoizedClosure",
      "printedName": "memoizedClosure(_:)",
      "children": [
        {
          "kind": "TypeFunc",
          "name": "Function",
          "printedName": "(Swift.Bool) throws -> τ_0_0",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            },
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            }
          ]
        },
        {
          "kind": "TypeFunc",
          "name": "Function",
          "printedName": "() throws -> τ_0_0",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            },
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            }
          ]
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble15memoizedClosureyxSbKcxyKclF",
      "mangledName": "$s6Nimble15memoizedClosureyxSbKcxyKclF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<T>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "TypeDecl",
      "name": "Expression",
      "printedName": "Expression",
      "children": [
        {
          "kind": "Var",
          "name": "_expression",
          "printedName": "_expression",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Swift.Bool) throws -> τ_0_0?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Optional",
                  "printedName": "τ_0_0?",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    }
                  ],
                  "usr": "s:Sq"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Bool",
                  "printedName": "Swift.Bool",
                  "usr": "s:Sb"
                }
              ]
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble10ExpressionV11_expressionyxSgSbKcvp",
          "mangledName": "$s6Nimble10ExpressionV11_expressionyxSgSbKcvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 0,
          "isLet": true,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Swift.Bool) throws -> τ_0_0?",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Optional",
                      "printedName": "τ_0_0?",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "GenericTypeParam",
                          "printedName": "τ_0_0"
                        }
                      ],
                      "usr": "s:Sq"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "Bool",
                      "printedName": "Swift.Bool",
                      "usr": "s:Sb"
                    }
                  ]
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble10ExpressionV11_expressionyxSgSbKcvg",
              "mangledName": "$s6Nimble10ExpressionV11_expressionyxSgSbKcvg",
              "moduleName": "Nimble",
              "genericSig": "<τ_0_0>",
              "sugared_genericSig": "<T>",
              "implicit": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "_withoutCaching",
          "printedName": "_withoutCaching",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble10ExpressionV15_withoutCachingSbvp",
          "mangledName": "$s6Nimble10ExpressionV15_withoutCachingSbvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 1,
          "isLet": true,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Bool",
                  "printedName": "Swift.Bool",
                  "usr": "s:Sb"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble10ExpressionV15_withoutCachingSbvg",
              "mangledName": "$s6Nimble10ExpressionV15_withoutCachingSbvg",
              "moduleName": "Nimble",
              "genericSig": "<τ_0_0>",
              "sugared_genericSig": "<T>",
              "implicit": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "location",
          "printedName": "location",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "SourceLocation",
              "printedName": "Nimble.SourceLocation",
              "usr": "c:@M@Nimble@objc(cs)SourceLocation"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble10ExpressionV8locationAA14SourceLocationCvp",
          "mangledName": "$s6Nimble10ExpressionV8locationAA14SourceLocationCvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 2,
          "isLet": true,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SourceLocation",
                  "printedName": "Nimble.SourceLocation",
                  "usr": "c:@M@Nimble@objc(cs)SourceLocation"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble10ExpressionV8locationAA14SourceLocationCvg",
              "mangledName": "$s6Nimble10ExpressionV8locationAA14SourceLocationCvg",
              "moduleName": "Nimble",
              "genericSig": "<τ_0_0>",
              "sugared_genericSig": "<T>",
              "implicit": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "isClosure",
          "printedName": "isClosure",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble10ExpressionV9isClosureSbvp",
          "mangledName": "$s6Nimble10ExpressionV9isClosureSbvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 3,
          "isLet": true,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Bool",
                  "printedName": "Swift.Bool",
                  "usr": "s:Sb"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble10ExpressionV9isClosureSbvg",
              "mangledName": "$s6Nimble10ExpressionV9isClosureSbvg",
              "moduleName": "Nimble",
              "genericSig": "<τ_0_0>",
              "sugared_genericSig": "<T>",
              "implicit": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(expression:location:isClosure:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Expression",
              "printedName": "Nimble.Expression<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble10ExpressionV"
            },
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "() throws -> τ_0_0?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Optional",
                  "printedName": "τ_0_0?",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    }
                  ],
                  "usr": "s:Sq"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ]
            },
            {
              "kind": "TypeNominal",
              "name": "SourceLocation",
              "printedName": "Nimble.SourceLocation",
              "usr": "c:@M@Nimble@objc(cs)SourceLocation"
            },
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "hasDefaultArg": true,
              "usr": "s:Sb"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble10ExpressionV10expression8location9isClosureACyxGxSgyKc_AA14SourceLocationCSbtcfc",
          "mangledName": "$s6Nimble10ExpressionV10expression8location9isClosureACyxGxSgyKc_AA14SourceLocationCSbtcfc",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(memoizedExpression:location:withoutCaching:isClosure:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Expression",
              "printedName": "Nimble.Expression<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble10ExpressionV"
            },
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Swift.Bool) throws -> τ_0_0?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Optional",
                  "printedName": "τ_0_0?",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    }
                  ],
                  "usr": "s:Sq"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Bool",
                  "printedName": "Swift.Bool",
                  "usr": "s:Sb"
                }
              ]
            },
            {
              "kind": "TypeNominal",
              "name": "SourceLocation",
              "printedName": "Nimble.SourceLocation",
              "usr": "c:@M@Nimble@objc(cs)SourceLocation"
            },
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "hasDefaultArg": true,
              "usr": "s:Sb"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble10ExpressionV08memoizedB08location14withoutCaching9isClosureACyxGxSgSbKc_AA14SourceLocationCS2btcfc",
          "mangledName": "$s6Nimble10ExpressionV08memoizedB08location14withoutCaching9isClosureACyxGxSgSbKc_AA14SourceLocationCS2btcfc",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Function",
          "name": "cast",
          "printedName": "cast(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Expression",
              "printedName": "Nimble.Expression<τ_1_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_1_0"
                }
              ],
              "usr": "s:6Nimble10ExpressionV"
            },
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(τ_0_0?) throws -> τ_1_0?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Optional",
                  "printedName": "τ_1_0?",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_1_0"
                    }
                  ],
                  "usr": "s:Sq"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Optional",
                  "printedName": "τ_0_0?",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    }
                  ],
                  "usr": "s:Sq"
                }
              ]
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble10ExpressionV4castyACyqd__Gqd__SgxSgKclF",
          "mangledName": "$s6Nimble10ExpressionV4castyACyqd__Gqd__SgxSgKclF",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0, τ_1_0>",
          "sugared_genericSig": "<T, U>",
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "evaluate",
          "printedName": "evaluate()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "τ_0_0?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble10ExpressionV8evaluatexSgyKF",
          "mangledName": "$s6Nimble10ExpressionV8evaluatexSgyKF",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "declAttributes": [
            "AccessControl"
          ],
          "throwing": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "withoutCaching",
          "printedName": "withoutCaching()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Expression",
              "printedName": "Nimble.Expression<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble10ExpressionV"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble10ExpressionV14withoutCachingACyxGyF",
          "mangledName": "$s6Nimble10ExpressionV14withoutCachingACyxGyF",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "declAttributes": [
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        }
      ],
      "declKind": "Struct",
      "usr": "s:6Nimble10ExpressionV",
      "mangledName": "$s6Nimble10ExpressionV",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<T>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ]
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "TypeDecl",
      "name": "FailureMessage",
      "printedName": "FailureMessage",
      "children": [
        {
          "kind": "Var",
          "name": "expected",
          "printedName": "expected",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble14FailureMessageC8expectedSSvp",
          "mangledName": "$s6Nimble14FailureMessageC8expectedSSvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "HasInitialValue",
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 0,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14FailureMessageC8expectedSSvg",
              "mangledName": "$s6Nimble14FailureMessageC8expectedSSvg",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "get"
            },
            {
              "kind": "Accessor",
              "name": "Set",
              "printedName": "Set()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14FailureMessageC8expectedSSvs",
              "mangledName": "$s6Nimble14FailureMessageC8expectedSSvs",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "set"
            },
            {
              "kind": "Accessor",
              "name": "Modify",
              "printedName": "Modify()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14FailureMessageC8expectedSSvM",
              "mangledName": "$s6Nimble14FailureMessageC8expectedSSvM",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "_modify"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "actualValue",
          "printedName": "actualValue",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "Swift.String?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble14FailureMessageC11actualValueSSSgvp",
          "mangledName": "$s6Nimble14FailureMessageC11actualValueSSSgvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "HasInitialValue",
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 1,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Optional",
                  "printedName": "Swift.String?",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "String",
                      "printedName": "Swift.String",
                      "usr": "s:SS"
                    }
                  ],
                  "usr": "s:Sq"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14FailureMessageC11actualValueSSSgvg",
              "mangledName": "$s6Nimble14FailureMessageC11actualValueSSSgvg",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "get"
            },
            {
              "kind": "Accessor",
              "name": "Set",
              "printedName": "Set()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Optional",
                  "printedName": "Swift.String?",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "String",
                      "printedName": "Swift.String",
                      "usr": "s:SS"
                    }
                  ],
                  "usr": "s:Sq"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14FailureMessageC11actualValueSSSgvs",
              "mangledName": "$s6Nimble14FailureMessageC11actualValueSSSgvs",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "set"
            },
            {
              "kind": "Accessor",
              "name": "Modify",
              "printedName": "Modify()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14FailureMessageC11actualValueSSSgvM",
              "mangledName": "$s6Nimble14FailureMessageC11actualValueSSSgvM",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "_modify"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "to",
          "printedName": "to",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble14FailureMessageC2toSSvp",
          "mangledName": "$s6Nimble14FailureMessageC2toSSvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "HasInitialValue",
            "HasStorage",
            "AccessControl",
            "RawDocComment"
          ],
          "fixedbinaryorder": 2,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14FailureMessageC2toSSvg",
              "mangledName": "$s6Nimble14FailureMessageC2toSSvg",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "get"
            },
            {
              "kind": "Accessor",
              "name": "Set",
              "printedName": "Set()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14FailureMessageC2toSSvs",
              "mangledName": "$s6Nimble14FailureMessageC2toSSvs",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "set"
            },
            {
              "kind": "Accessor",
              "name": "Modify",
              "printedName": "Modify()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14FailureMessageC2toSSvM",
              "mangledName": "$s6Nimble14FailureMessageC2toSSvM",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "_modify"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "postfixMessage",
          "printedName": "postfixMessage",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble14FailureMessageC07postfixC0SSvp",
          "mangledName": "$s6Nimble14FailureMessageC07postfixC0SSvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "HasInitialValue",
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 3,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14FailureMessageC07postfixC0SSvg",
              "mangledName": "$s6Nimble14FailureMessageC07postfixC0SSvg",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "get"
            },
            {
              "kind": "Accessor",
              "name": "Set",
              "printedName": "Set()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14FailureMessageC07postfixC0SSvs",
              "mangledName": "$s6Nimble14FailureMessageC07postfixC0SSvs",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "set"
            },
            {
              "kind": "Accessor",
              "name": "Modify",
              "printedName": "Modify()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14FailureMessageC07postfixC0SSvM",
              "mangledName": "$s6Nimble14FailureMessageC07postfixC0SSvM",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "_modify"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "postfixActual",
          "printedName": "postfixActual",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble14FailureMessageC13postfixActualSSvp",
          "mangledName": "$s6Nimble14FailureMessageC13postfixActualSSvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "HasInitialValue",
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 4,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14FailureMessageC13postfixActualSSvg",
              "mangledName": "$s6Nimble14FailureMessageC13postfixActualSSvg",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "get"
            },
            {
              "kind": "Accessor",
              "name": "Set",
              "printedName": "Set()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14FailureMessageC13postfixActualSSvs",
              "mangledName": "$s6Nimble14FailureMessageC13postfixActualSSvs",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "set"
            },
            {
              "kind": "Accessor",
              "name": "Modify",
              "printedName": "Modify()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14FailureMessageC13postfixActualSSvM",
              "mangledName": "$s6Nimble14FailureMessageC13postfixActualSSvM",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "_modify"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "extendedMessage",
          "printedName": "extendedMessage",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "Swift.String?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble14FailureMessageC08extendedC0SSSgvp",
          "mangledName": "$s6Nimble14FailureMessageC08extendedC0SSSgvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "HasInitialValue",
            "HasStorage",
            "AccessControl",
            "RawDocComment"
          ],
          "fixedbinaryorder": 5,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Optional",
                  "printedName": "Swift.String?",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "String",
                      "printedName": "Swift.String",
                      "usr": "s:SS"
                    }
                  ],
                  "usr": "s:Sq"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14FailureMessageC08extendedC0SSSgvg",
              "mangledName": "$s6Nimble14FailureMessageC08extendedC0SSSgvg",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "get"
            },
            {
              "kind": "Accessor",
              "name": "Set",
              "printedName": "Set()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Optional",
                  "printedName": "Swift.String?",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "String",
                      "printedName": "Swift.String",
                      "usr": "s:SS"
                    }
                  ],
                  "usr": "s:Sq"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14FailureMessageC08extendedC0SSSgvs",
              "mangledName": "$s6Nimble14FailureMessageC08extendedC0SSSgvs",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "set"
            },
            {
              "kind": "Accessor",
              "name": "Modify",
              "printedName": "Modify()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14FailureMessageC08extendedC0SSSgvM",
              "mangledName": "$s6Nimble14FailureMessageC08extendedC0SSSgvM",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "_modify"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "userDescription",
          "printedName": "userDescription",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "Swift.String?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble14FailureMessageC15userDescriptionSSSgvp",
          "mangledName": "$s6Nimble14FailureMessageC15userDescriptionSSSgvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "HasInitialValue",
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 6,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Optional",
                  "printedName": "Swift.String?",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "String",
                      "printedName": "Swift.String",
                      "usr": "s:SS"
                    }
                  ],
                  "usr": "s:Sq"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14FailureMessageC15userDescriptionSSSgvg",
              "mangledName": "$s6Nimble14FailureMessageC15userDescriptionSSSgvg",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "get"
            },
            {
              "kind": "Accessor",
              "name": "Set",
              "printedName": "Set()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Optional",
                  "printedName": "Swift.String?",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "String",
                      "printedName": "Swift.String",
                      "usr": "s:SS"
                    }
                  ],
                  "usr": "s:Sq"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14FailureMessageC15userDescriptionSSSgvs",
              "mangledName": "$s6Nimble14FailureMessageC15userDescriptionSSSgvs",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "set"
            },
            {
              "kind": "Accessor",
              "name": "Modify",
              "printedName": "Modify()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14FailureMessageC15userDescriptionSSSgvM",
              "mangledName": "$s6Nimble14FailureMessageC15userDescriptionSSSgvM",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "_modify"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "stringValue",
          "printedName": "stringValue",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble14FailureMessageC11stringValueSSvp",
          "mangledName": "$s6Nimble14FailureMessageC11stringValueSSvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14FailureMessageC11stringValueSSvg",
              "mangledName": "$s6Nimble14FailureMessageC11stringValueSSvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "accessorKind": "get"
            },
            {
              "kind": "Accessor",
              "name": "Set",
              "printedName": "Set()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14FailureMessageC11stringValueSSvs",
              "mangledName": "$s6Nimble14FailureMessageC11stringValueSSvs",
              "moduleName": "Nimble",
              "isOpen": true,
              "accessorKind": "set"
            },
            {
              "kind": "Accessor",
              "name": "Modify",
              "printedName": "Modify()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14FailureMessageC11stringValueSSvM",
              "mangledName": "$s6Nimble14FailureMessageC11stringValueSSvM",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "_modify"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "_stringValueOverride",
          "printedName": "_stringValueOverride",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "Swift.String?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble14FailureMessageC20_stringValueOverrideSSSgvp",
          "mangledName": "$s6Nimble14FailureMessageC20_stringValueOverrideSSSgvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "HasInitialValue",
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 7,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Optional",
                  "printedName": "Swift.String?",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "String",
                      "printedName": "Swift.String",
                      "usr": "s:SS"
                    }
                  ],
                  "usr": "s:Sq"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14FailureMessageC20_stringValueOverrideSSSgvg",
              "mangledName": "$s6Nimble14FailureMessageC20_stringValueOverrideSSSgvg",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "get"
            },
            {
              "kind": "Accessor",
              "name": "Set",
              "printedName": "Set()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Optional",
                  "printedName": "Swift.String?",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "String",
                      "printedName": "Swift.String",
                      "usr": "s:SS"
                    }
                  ],
                  "usr": "s:Sq"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14FailureMessageC20_stringValueOverrideSSSgvs",
              "mangledName": "$s6Nimble14FailureMessageC20_stringValueOverrideSSSgvs",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "set"
            },
            {
              "kind": "Accessor",
              "name": "Modify",
              "printedName": "Modify()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14FailureMessageC20_stringValueOverrideSSSgvM",
              "mangledName": "$s6Nimble14FailureMessageC20_stringValueOverrideSSSgvM",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "_modify"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "hasOverriddenStringValue",
          "printedName": "hasOverriddenStringValue",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble14FailureMessageC24hasOverriddenStringValueSbvp",
          "mangledName": "$s6Nimble14FailureMessageC24hasOverriddenStringValueSbvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Bool",
                  "printedName": "Swift.Bool",
                  "usr": "s:Sb"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14FailureMessageC24hasOverriddenStringValueSbvg",
              "mangledName": "$s6Nimble14FailureMessageC24hasOverriddenStringValueSbvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "FailureMessage",
              "printedName": "Nimble.FailureMessage",
              "usr": "c:@M@Nimble@objc(cs)FailureMessage"
            }
          ],
          "declKind": "Constructor",
          "usr": "c:@M@Nimble@objc(cs)FailureMessage(im)init",
          "mangledName": "$s6Nimble14FailureMessageCACycfc",
          "moduleName": "Nimble",
          "overriding": true,
          "objc_name": "init",
          "declAttributes": [
            "Dynamic",
            "ObjC",
            "Override",
            "AccessControl"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(stringValue:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "FailureMessage",
              "printedName": "Nimble.FailureMessage",
              "usr": "c:@M@Nimble@objc(cs)FailureMessage"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble14FailureMessageC11stringValueACSS_tcfc",
          "mangledName": "$s6Nimble14FailureMessageC11stringValueACSS_tcfc",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Function",
          "name": "stripNewlines",
          "printedName": "stripNewlines(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble14FailureMessageC13stripNewlinesyS2SF",
          "mangledName": "$s6Nimble14FailureMessageC13stripNewlinesyS2SF",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "computeStringValue",
          "printedName": "computeStringValue()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble14FailureMessageC18computeStringValueSSyF",
          "mangledName": "$s6Nimble14FailureMessageC18computeStringValueSSyF",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "appendMessage",
          "printedName": "appendMessage(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble14FailureMessageC06appendC0yySSF",
          "mangledName": "$s6Nimble14FailureMessageC06appendC0yySSF",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "appendDetails",
          "printedName": "appendDetails(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble14FailureMessageC13appendDetailsyySSF",
          "mangledName": "$s6Nimble14FailureMessageC13appendDetailsyySSF",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "toExpectationMessage",
          "printedName": "toExpectationMessage()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "ExpectationMessage",
              "printedName": "Nimble.ExpectationMessage",
              "usr": "s:6Nimble18ExpectationMessageO"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble14FailureMessageC013toExpectationC0AA0eC0OyF",
          "mangledName": "$s6Nimble14FailureMessageC013toExpectationC0AA0eC0OyF",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        }
      ],
      "declKind": "Class",
      "usr": "c:@M@Nimble@objc(cs)FailureMessage",
      "mangledName": "$s6Nimble14FailureMessageC",
      "moduleName": "Nimble",
      "isOpen": true,
      "declAttributes": [
        "AccessControl",
        "RawDocComment",
        "ObjC"
      ],
      "superclassUsr": "c:objc(cs)NSObject",
      "inheritsConvenienceInitializers": true,
      "superclassNames": [
        "ObjectiveC.NSObject"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObservingPublishing",
          "printedName": "_KeyValueCodingAndObservingPublishing",
          "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
          "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObserving",
          "printedName": "_KeyValueCodingAndObserving",
          "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
          "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        }
      ]
    },
    {
      "kind": "Function",
      "name": "haveCount",
      "printedName": "haveCount(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Int",
          "printedName": "Swift.Int",
          "usr": "s:Si"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble9haveCountyAA9PredicateVyxGSiSlRzlF",
      "mangledName": "$s6Nimble9haveCountyAA9PredicateVyxGSiSlRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Collection>",
      "sugared_genericSig": "<T where T : Swift.Collection>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "haveCount",
      "printedName": "haveCount(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Nimble.NMBCollection>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBCollection",
              "printedName": "Nimble.NMBCollection",
              "usr": "s:6Nimble13NMBCollectionP"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Int",
          "printedName": "Swift.Int",
          "usr": "s:Si"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble9haveCountyAA9PredicateVyAA13NMBCollection_pGSiF",
      "mangledName": "$s6Nimble9haveCountyAA9PredicateVyAA13NMBCollection_pGSiF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Function",
      "name": "match",
      "printedName": "match(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Swift.String>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "Swift.String?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble5matchyAA9PredicateVySSGSSSgF",
      "mangledName": "$s6Nimble5matchyAA9PredicateVySSGSSSgF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Import",
      "name": "CoreGraphics",
      "printedName": "CoreGraphics",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "TypeDecl",
      "name": "NMBContainer",
      "printedName": "NMBContainer",
      "children": [
        {
          "kind": "Function",
          "name": "contains",
          "printedName": "contains(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "ProtocolComposition",
              "printedName": "Any"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble12NMBContainerP8containsySbypF",
          "mangledName": "$s6Nimble12NMBContainerP8containsySbypF",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBContainer>",
          "sugared_genericSig": "<Self where Self : Nimble.NMBContainer>",
          "protocolReq": true,
          "reqNewWitnessTableEntry": true,
          "funcSelfKind": "NonMutating"
        }
      ],
      "declKind": "Protocol",
      "usr": "s:6Nimble12NMBContainerP",
      "mangledName": "$s6Nimble12NMBContainerP",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "NMBCollection",
      "printedName": "NMBCollection",
      "children": [
        {
          "kind": "Var",
          "name": "count",
          "printedName": "count",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble13NMBCollectionP5countSivp",
          "mangledName": "$s6Nimble13NMBCollectionP5countSivp",
          "moduleName": "Nimble",
          "protocolReq": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble13NMBCollectionP5countSivg",
              "mangledName": "$s6Nimble13NMBCollectionP5countSivg",
              "moduleName": "Nimble",
              "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBCollection>",
              "sugared_genericSig": "<Self where Self : Nimble.NMBCollection>",
              "protocolReq": true,
              "reqNewWitnessTableEntry": true,
              "accessorKind": "get"
            }
          ]
        }
      ],
      "declKind": "Protocol",
      "usr": "s:6Nimble13NMBCollectionP",
      "mangledName": "$s6Nimble13NMBCollectionP",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "NMBOrderedCollection",
      "printedName": "NMBOrderedCollection",
      "children": [
        {
          "kind": "Function",
          "name": "object",
          "printedName": "object(at:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "ProtocolComposition",
              "printedName": "Any"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble20NMBOrderedCollectionP6object2atypSi_tF",
          "mangledName": "$s6Nimble20NMBOrderedCollectionP6object2atypSi_tF",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBOrderedCollection>",
          "sugared_genericSig": "<Self where Self : Nimble.NMBOrderedCollection>",
          "protocolReq": true,
          "reqNewWitnessTableEntry": true,
          "funcSelfKind": "NonMutating"
        }
      ],
      "declKind": "Protocol",
      "usr": "s:6Nimble20NMBOrderedCollectionP",
      "mangledName": "$s6Nimble20NMBOrderedCollectionP",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 : Nimble.NMBCollection>",
      "sugared_genericSig": "<Self : Nimble.NMBCollection>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "NMBCollection",
          "printedName": "NMBCollection",
          "usr": "s:6Nimble13NMBCollectionP",
          "mangledName": "$s6Nimble13NMBCollectionP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "NMBDoubleConvertible",
      "printedName": "NMBDoubleConvertible",
      "children": [
        {
          "kind": "Var",
          "name": "doubleValue",
          "printedName": "doubleValue",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Double",
              "printedName": "Swift.Double",
              "usr": "s:Sd"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble20NMBDoubleConvertibleP11doubleValueSdvp",
          "mangledName": "$s6Nimble20NMBDoubleConvertibleP11doubleValueSdvp",
          "moduleName": "Nimble",
          "protocolReq": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Double",
                  "printedName": "Swift.Double",
                  "usr": "s:Sd"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble20NMBDoubleConvertibleP11doubleValueSdvg",
              "mangledName": "$s6Nimble20NMBDoubleConvertibleP11doubleValueSdvg",
              "moduleName": "Nimble",
              "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBDoubleConvertible>",
              "sugared_genericSig": "<Self where Self : Nimble.NMBDoubleConvertible>",
              "protocolReq": true,
              "reqNewWitnessTableEntry": true,
              "accessorKind": "get"
            }
          ]
        }
      ],
      "declKind": "Protocol",
      "usr": "s:6Nimble20NMBDoubleConvertibleP",
      "mangledName": "$s6Nimble20NMBDoubleConvertibleP",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl"
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "NMBComparable",
      "printedName": "NMBComparable",
      "children": [
        {
          "kind": "Function",
          "name": "NMB_compare",
          "printedName": "NMB_compare(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "ComparisonResult",
              "printedName": "Foundation.ComparisonResult",
              "usr": "c:@E@NSComparisonResult"
            },
            {
              "kind": "TypeNominal",
              "name": "ImplicitlyUnwrappedOptional",
              "printedName": "Nimble.NMBComparable?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NMBComparable",
                  "printedName": "Nimble.NMBComparable",
                  "usr": "c:@M@Nimble@objc(pl)NMBComparable"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@Nimble@objc(pl)NMBComparable(im)NMB_compare:",
          "mangledName": "$s6Nimble13NMBComparableP11NMB_compareySo18NSComparisonResultVAaB_pSgF",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBComparable>",
          "sugared_genericSig": "<Self where Self : Nimble.NMBComparable>",
          "protocolReq": true,
          "declAttributes": [
            "ObjC"
          ],
          "reqNewWitnessTableEntry": true,
          "funcSelfKind": "NonMutating"
        }
      ],
      "declKind": "Protocol",
      "usr": "c:@M@Nimble@objc(pl)NMBComparable",
      "mangledName": "$s6Nimble13NMBComparableP",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 : AnyObject>",
      "sugared_genericSig": "<Self : AnyObject>",
      "declAttributes": [
        "AccessControl",
        "ObjC",
        "RawDocComment"
      ]
    },
    {
      "kind": "Function",
      "name": "matchError",
      "printedName": "matchError(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Swift.Error>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Error",
              "printedName": "Swift.Error",
              "usr": "s:s5ErrorP"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "GenericTypeParam",
          "printedName": "τ_0_0"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble10matchErroryAA9PredicateVys0C0_pGxsAERzlF",
      "mangledName": "$s6Nimble10matchErroryAA9PredicateVys0C0_pGxsAERzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Error>",
      "sugared_genericSig": "<T where T : Swift.Error>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "matchError",
      "printedName": "matchError(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Swift.Error>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Error",
              "printedName": "Swift.Error",
              "usr": "s:s5ErrorP"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "GenericTypeParam",
          "printedName": "τ_0_0"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble10matchErroryAA9PredicateVys0C0_pGxSQRzsAERzlF",
      "mangledName": "$s6Nimble10matchErroryAA9PredicateVys0C0_pGxSQRzsAERzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Equatable, τ_0_0 : Swift.Error>",
      "sugared_genericSig": "<T where T : Swift.Equatable, T : Swift.Error>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "matchError",
      "printedName": "matchError(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Swift.Error>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Error",
              "printedName": "Swift.Error",
              "usr": "s:s5ErrorP"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Metatype",
          "printedName": "τ_0_0.Type",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ]
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble10matchErroryAA9PredicateVys0C0_pGxmsAERzlF",
      "mangledName": "$s6Nimble10matchErroryAA9PredicateVys0C0_pGxmsAERzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Error>",
      "sugared_genericSig": "<T where T : Swift.Error>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Import",
      "name": "Dispatch",
      "printedName": "Dispatch",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "TypeDecl",
      "name": "NimbleEnvironment",
      "printedName": "NimbleEnvironment",
      "children": [
        {
          "kind": "Var",
          "name": "activeInstance",
          "printedName": "activeInstance",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NimbleEnvironment",
              "printedName": "Nimble.NimbleEnvironment",
              "usr": "c:@M@Nimble@objc(cs)NimbleEnvironment"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble0A11EnvironmentC14activeInstanceACvpZ",
          "mangledName": "$s6Nimble0A11EnvironmentC14activeInstanceACvpZ",
          "moduleName": "Nimble",
          "static": true,
          "declAttributes": [
            "Final"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NimbleEnvironment",
                  "printedName": "Nimble.NimbleEnvironment",
                  "usr": "c:@M@Nimble@objc(cs)NimbleEnvironment"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble0A11EnvironmentC14activeInstanceACvgZ",
              "mangledName": "$s6Nimble0A11EnvironmentC14activeInstanceACvgZ",
              "moduleName": "Nimble",
              "static": true,
              "declAttributes": [
                "Final"
              ],
              "accessorKind": "get"
            },
            {
              "kind": "Accessor",
              "name": "Set",
              "printedName": "Set()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "NimbleEnvironment",
                  "printedName": "Nimble.NimbleEnvironment",
                  "usr": "c:@M@Nimble@objc(cs)NimbleEnvironment"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble0A11EnvironmentC14activeInstanceACvsZ",
              "mangledName": "$s6Nimble0A11EnvironmentC14activeInstanceACvsZ",
              "moduleName": "Nimble",
              "static": true,
              "declAttributes": [
                "Final"
              ],
              "accessorKind": "set"
            },
            {
              "kind": "Accessor",
              "name": "Modify",
              "printedName": "Modify()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble0A11EnvironmentC14activeInstanceACvMZ",
              "mangledName": "$s6Nimble0A11EnvironmentC14activeInstanceACvMZ",
              "moduleName": "Nimble",
              "static": true,
              "implicit": true,
              "declAttributes": [
                "Final"
              ],
              "accessorKind": "_modify"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "assertionHandler",
          "printedName": "assertionHandler",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "AssertionHandler",
              "printedName": "Nimble.AssertionHandler",
              "usr": "s:6Nimble16AssertionHandlerP"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble0A11EnvironmentC16assertionHandlerAA09AssertionD0_pvp",
          "mangledName": "$s6Nimble0A11EnvironmentC16assertionHandlerAA09AssertionD0_pvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "RawDocComment"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "AssertionHandler",
                  "printedName": "Nimble.AssertionHandler",
                  "usr": "s:6Nimble16AssertionHandlerP"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble0A11EnvironmentC16assertionHandlerAA09AssertionD0_pvg",
              "mangledName": "$s6Nimble0A11EnvironmentC16assertionHandlerAA09AssertionD0_pvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "accessorKind": "get"
            },
            {
              "kind": "Accessor",
              "name": "Set",
              "printedName": "Set()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "AssertionHandler",
                  "printedName": "Nimble.AssertionHandler",
                  "usr": "s:6Nimble16AssertionHandlerP"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble0A11EnvironmentC16assertionHandlerAA09AssertionD0_pvs",
              "mangledName": "$s6Nimble0A11EnvironmentC16assertionHandlerAA09AssertionD0_pvs",
              "moduleName": "Nimble",
              "isOpen": true,
              "accessorKind": "set"
            },
            {
              "kind": "Accessor",
              "name": "Modify",
              "printedName": "Modify()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble0A11EnvironmentC16assertionHandlerAA09AssertionD0_pvM",
              "mangledName": "$s6Nimble0A11EnvironmentC16assertionHandlerAA09AssertionD0_pvM",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "_modify"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "suppressTVOSAssertionWarning",
          "printedName": "suppressTVOSAssertionWarning",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble0A11EnvironmentC28suppressTVOSAssertionWarningSbvp",
          "mangledName": "$s6Nimble0A11EnvironmentC28suppressTVOSAssertionWarningSbvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "HasInitialValue",
            "HasStorage"
          ],
          "fixedbinaryorder": 0,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Bool",
                  "printedName": "Swift.Bool",
                  "usr": "s:Sb"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble0A11EnvironmentC28suppressTVOSAssertionWarningSbvg",
              "mangledName": "$s6Nimble0A11EnvironmentC28suppressTVOSAssertionWarningSbvg",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "get"
            },
            {
              "kind": "Accessor",
              "name": "Set",
              "printedName": "Set()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Bool",
                  "printedName": "Swift.Bool",
                  "usr": "s:Sb"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble0A11EnvironmentC28suppressTVOSAssertionWarningSbvs",
              "mangledName": "$s6Nimble0A11EnvironmentC28suppressTVOSAssertionWarningSbvs",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "set"
            },
            {
              "kind": "Accessor",
              "name": "Modify",
              "printedName": "Modify()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble0A11EnvironmentC28suppressTVOSAssertionWarningSbvM",
              "mangledName": "$s6Nimble0A11EnvironmentC28suppressTVOSAssertionWarningSbvM",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "_modify"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "awaiter",
          "printedName": "awaiter",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Awaiter",
              "printedName": "Nimble.Awaiter",
              "usr": "s:6Nimble7AwaiterC"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble0A11EnvironmentC7awaiterAA7AwaiterCvp",
          "mangledName": "$s6Nimble0A11EnvironmentC7awaiterAA7AwaiterCvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "HasStorage"
          ],
          "fixedbinaryorder": 1,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Awaiter",
                  "printedName": "Nimble.Awaiter",
                  "usr": "s:6Nimble7AwaiterC"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble0A11EnvironmentC7awaiterAA7AwaiterCvg",
              "mangledName": "$s6Nimble0A11EnvironmentC7awaiterAA7AwaiterCvg",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "get"
            },
            {
              "kind": "Accessor",
              "name": "Set",
              "printedName": "Set()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Awaiter",
                  "printedName": "Nimble.Awaiter",
                  "usr": "s:6Nimble7AwaiterC"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble0A11EnvironmentC7awaiterAA7AwaiterCvs",
              "mangledName": "$s6Nimble0A11EnvironmentC7awaiterAA7AwaiterCvs",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "set"
            },
            {
              "kind": "Accessor",
              "name": "Modify",
              "printedName": "Modify()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble0A11EnvironmentC7awaiterAA7AwaiterCvM",
              "mangledName": "$s6Nimble0A11EnvironmentC7awaiterAA7AwaiterCvM",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "_modify"
            }
          ]
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NimbleEnvironment",
              "printedName": "Nimble.NimbleEnvironment",
              "usr": "c:@M@Nimble@objc(cs)NimbleEnvironment"
            }
          ],
          "declKind": "Constructor",
          "usr": "c:@M@Nimble@objc(cs)NimbleEnvironment(im)init",
          "mangledName": "$s6Nimble0A11EnvironmentCACycfc",
          "moduleName": "Nimble",
          "overriding": true,
          "objc_name": "init",
          "declAttributes": [
            "Dynamic",
            "ObjC",
            "Override"
          ],
          "init_kind": "Designated"
        }
      ],
      "declKind": "Class",
      "usr": "c:@M@Nimble@objc(cs)NimbleEnvironment",
      "mangledName": "$s6Nimble0A11EnvironmentC",
      "moduleName": "Nimble",
      "isOpen": true,
      "declAttributes": [
        "AccessControl",
        "RawDocComment",
        "ObjC"
      ],
      "superclassUsr": "c:objc(cs)NSObject",
      "inheritsConvenienceInitializers": true,
      "superclassNames": [
        "ObjectiveC.NSObject"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObservingPublishing",
          "printedName": "_KeyValueCodingAndObservingPublishing",
          "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
          "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObserving",
          "printedName": "_KeyValueCodingAndObserving",
          "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
          "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        }
      ]
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Import",
      "name": "XCTest",
      "printedName": "XCTest",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "TypeDecl",
      "name": "NimbleXCTestHandler",
      "printedName": "NimbleXCTestHandler",
      "children": [
        {
          "kind": "Function",
          "name": "assert",
          "printedName": "assert(_:message:location:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "FailureMessage",
              "printedName": "Nimble.FailureMessage",
              "usr": "c:@M@Nimble@objc(cs)FailureMessage"
            },
            {
              "kind": "TypeNominal",
              "name": "SourceLocation",
              "printedName": "Nimble.SourceLocation",
              "usr": "c:@M@Nimble@objc(cs)SourceLocation"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble0A13XCTestHandlerC6assert_7message8locationySb_AA14FailureMessageCAA14SourceLocationCtF",
          "mangledName": "$s6Nimble0A13XCTestHandlerC6assert_7message8locationySb_AA14FailureMessageCAA14SourceLocationCtF",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NimbleXCTestHandler",
              "printedName": "Nimble.NimbleXCTestHandler",
              "usr": "s:6Nimble0A13XCTestHandlerC"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble0A13XCTestHandlerCACycfc",
          "mangledName": "$s6Nimble0A13XCTestHandlerCACycfc",
          "moduleName": "Nimble",
          "implicit": true,
          "init_kind": "Designated"
        }
      ],
      "declKind": "Class",
      "usr": "s:6Nimble0A13XCTestHandlerC",
      "mangledName": "$s6Nimble0A13XCTestHandlerC",
      "moduleName": "Nimble",
      "isOpen": true,
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "hasMissingDesignatedInitializers": true,
      "conformances": [
        {
          "kind": "Conformance",
          "name": "AssertionHandler",
          "printedName": "AssertionHandler",
          "usr": "s:6Nimble16AssertionHandlerP",
          "mangledName": "$s6Nimble16AssertionHandlerP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "NimbleShortXCTestHandler",
      "printedName": "NimbleShortXCTestHandler",
      "children": [
        {
          "kind": "Function",
          "name": "assert",
          "printedName": "assert(_:message:location:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "FailureMessage",
              "printedName": "Nimble.FailureMessage",
              "usr": "c:@M@Nimble@objc(cs)FailureMessage"
            },
            {
              "kind": "TypeNominal",
              "name": "SourceLocation",
              "printedName": "Nimble.SourceLocation",
              "usr": "c:@M@Nimble@objc(cs)SourceLocation"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble0A18ShortXCTestHandlerC6assert_7message8locationySb_AA14FailureMessageCAA14SourceLocationCtF",
          "mangledName": "$s6Nimble0A18ShortXCTestHandlerC6assert_7message8locationySb_AA14FailureMessageCAA14SourceLocationCtF",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NimbleShortXCTestHandler",
              "printedName": "Nimble.NimbleShortXCTestHandler",
              "usr": "s:6Nimble0A18ShortXCTestHandlerC"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble0A18ShortXCTestHandlerCACycfc",
          "mangledName": "$s6Nimble0A18ShortXCTestHandlerCACycfc",
          "moduleName": "Nimble",
          "implicit": true,
          "init_kind": "Designated"
        }
      ],
      "declKind": "Class",
      "usr": "s:6Nimble0A18ShortXCTestHandlerC",
      "mangledName": "$s6Nimble0A18ShortXCTestHandlerC",
      "moduleName": "Nimble",
      "isOpen": true,
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "hasMissingDesignatedInitializers": true,
      "conformances": [
        {
          "kind": "Conformance",
          "name": "AssertionHandler",
          "printedName": "AssertionHandler",
          "usr": "s:6Nimble16AssertionHandlerP",
          "mangledName": "$s6Nimble16AssertionHandlerP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "NimbleXCTestUnavailableHandler",
      "printedName": "NimbleXCTestUnavailableHandler",
      "children": [
        {
          "kind": "Function",
          "name": "assert",
          "printedName": "assert(_:message:location:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "FailureMessage",
              "printedName": "Nimble.FailureMessage",
              "usr": "c:@M@Nimble@objc(cs)FailureMessage"
            },
            {
              "kind": "TypeNominal",
              "name": "SourceLocation",
              "printedName": "Nimble.SourceLocation",
              "usr": "c:@M@Nimble@objc(cs)SourceLocation"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble0A24XCTestUnavailableHandlerC6assert_7message8locationySb_AA14FailureMessageCAA14SourceLocationCtF",
          "mangledName": "$s6Nimble0A24XCTestUnavailableHandlerC6assert_7message8locationySb_AA14FailureMessageCAA14SourceLocationCtF",
          "moduleName": "Nimble",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NimbleXCTestUnavailableHandler",
              "printedName": "Nimble.NimbleXCTestUnavailableHandler",
              "usr": "s:6Nimble0A24XCTestUnavailableHandlerC"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble0A24XCTestUnavailableHandlerCACycfc",
          "mangledName": "$s6Nimble0A24XCTestUnavailableHandlerCACycfc",
          "moduleName": "Nimble",
          "implicit": true,
          "init_kind": "Designated"
        }
      ],
      "declKind": "Class",
      "usr": "s:6Nimble0A24XCTestUnavailableHandlerC",
      "mangledName": "$s6Nimble0A24XCTestUnavailableHandlerC",
      "moduleName": "Nimble",
      "isOpen": true,
      "declAttributes": [
        "RawDocComment"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "AssertionHandler",
          "printedName": "AssertionHandler",
          "usr": "s:6Nimble16AssertionHandlerP",
          "mangledName": "$s6Nimble16AssertionHandlerP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "CurrentTestCaseTracker",
      "printedName": "CurrentTestCaseTracker",
      "children": [
        {
          "kind": "Var",
          "name": "sharedInstance",
          "printedName": "sharedInstance",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "CurrentTestCaseTracker",
              "printedName": "Nimble.CurrentTestCaseTracker",
              "usr": "c:@M@Nimble@objc(cs)CurrentTestCaseTracker"
            }
          ],
          "declKind": "Var",
          "usr": "c:@M@Nimble@objc(cs)CurrentTestCaseTracker(cpy)sharedInstance",
          "mangledName": "$s6Nimble22CurrentTestCaseTrackerC14sharedInstanceACvpZ",
          "moduleName": "Nimble",
          "static": true,
          "declAttributes": [
            "HasInitialValue",
            "Final",
            "HasStorage",
            "ObjC"
          ],
          "isLet": true,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "CurrentTestCaseTracker",
                  "printedName": "Nimble.CurrentTestCaseTracker",
                  "usr": "c:@M@Nimble@objc(cs)CurrentTestCaseTracker"
                }
              ],
              "declKind": "Accessor",
              "usr": "c:@M@Nimble@objc(cs)CurrentTestCaseTracker(cm)sharedInstance",
              "mangledName": "$s6Nimble22CurrentTestCaseTrackerC14sharedInstanceACvgZ",
              "moduleName": "Nimble",
              "static": true,
              "implicit": true,
              "declAttributes": [
                "Final",
                "ObjC"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "currentTestCase",
          "printedName": "currentTestCase",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "XCTest.XCTestCase?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "XCTestCase",
                  "printedName": "XCTest.XCTestCase",
                  "usr": "c:objc(cs)XCTestCase"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble22CurrentTestCaseTrackerC07currentcD0So06XCTestD0CSgvp",
          "mangledName": "$s6Nimble22CurrentTestCaseTrackerC07currentcD0So06XCTestD0CSgvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "HasInitialValue",
            "Final",
            "HasStorage",
            "SetterAccess"
          ],
          "fixedbinaryorder": 0,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Optional",
                  "printedName": "XCTest.XCTestCase?",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "XCTestCase",
                      "printedName": "XCTest.XCTestCase",
                      "usr": "c:objc(cs)XCTestCase"
                    }
                  ],
                  "usr": "s:Sq"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble22CurrentTestCaseTrackerC07currentcD0So06XCTestD0CSgvg",
              "mangledName": "$s6Nimble22CurrentTestCaseTrackerC07currentcD0So06XCTestD0CSgvg",
              "moduleName": "Nimble",
              "implicit": true,
              "declAttributes": [
                "Final"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "stashed_swift_reportFatalErrorsToDebugger",
          "printedName": "stashed_swift_reportFatalErrorsToDebugger",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble22CurrentTestCaseTrackerC41stashed_swift_reportFatalErrorsToDebugger33_3F48DF7243EE4E52B06D6D1EA023E491LLSbvp",
          "mangledName": "$s6Nimble22CurrentTestCaseTrackerC41stashed_swift_reportFatalErrorsToDebugger33_3F48DF7243EE4E52B06D6D1EA023E491LLSbvp",
          "moduleName": "Nimble",
          "isInternal": true,
          "declAttributes": [
            "HasInitialValue",
            "Final",
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 1,
          "hasStorage": true
        },
        {
          "kind": "Function",
          "name": "testCaseWillStart",
          "printedName": "testCaseWillStart(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "XCTestCase",
              "printedName": "XCTest.XCTestCase",
              "usr": "c:objc(cs)XCTestCase"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@Nimble@objc(cs)CurrentTestCaseTracker(im)testCaseWillStart:",
          "mangledName": "$s6Nimble22CurrentTestCaseTrackerC04testD9WillStartyySo06XCTestD0CF",
          "moduleName": "Nimble",
          "objc_name": "testCaseWillStart:",
          "declAttributes": [
            "Final",
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "testCaseDidFinish",
          "printedName": "testCaseDidFinish(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "XCTestCase",
              "printedName": "XCTest.XCTestCase",
              "usr": "c:objc(cs)XCTestCase"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@Nimble@objc(cs)CurrentTestCaseTracker(im)testCaseDidFinish:",
          "mangledName": "$s6Nimble22CurrentTestCaseTrackerC04testD9DidFinishyySo06XCTestD0CF",
          "moduleName": "Nimble",
          "objc_name": "testCaseDidFinish:",
          "declAttributes": [
            "Final",
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "CurrentTestCaseTracker",
              "printedName": "Nimble.CurrentTestCaseTracker",
              "usr": "c:@M@Nimble@objc(cs)CurrentTestCaseTracker"
            }
          ],
          "declKind": "Constructor",
          "usr": "c:@M@Nimble@objc(cs)CurrentTestCaseTracker(im)init",
          "mangledName": "$s6Nimble22CurrentTestCaseTrackerCACycfc",
          "moduleName": "Nimble",
          "overriding": true,
          "implicit": true,
          "objc_name": "init",
          "declAttributes": [
            "Dynamic",
            "ObjC",
            "Override"
          ],
          "init_kind": "Designated"
        }
      ],
      "declKind": "Class",
      "usr": "c:@M@Nimble@objc(cs)CurrentTestCaseTracker",
      "mangledName": "$s6Nimble22CurrentTestCaseTrackerC",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "Final",
        "ObjC",
        "RawDocComment"
      ],
      "superclassUsr": "c:objc(cs)NSObject",
      "inheritsConvenienceInitializers": true,
      "superclassNames": [
        "ObjectiveC.NSObject"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObservingPublishing",
          "printedName": "_KeyValueCodingAndObservingPublishing",
          "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
          "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObserving",
          "printedName": "_KeyValueCodingAndObserving",
          "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
          "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        }
      ]
    },
    {
      "kind": "Function",
      "name": "isXCTestAvailable",
      "printedName": "isXCTestAvailable()",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Bool",
          "printedName": "Swift.Bool",
          "usr": "s:Sb"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble17isXCTestAvailableSbyF",
      "mangledName": "$s6Nimble17isXCTestAvailableSbyF",
      "moduleName": "Nimble",
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "recordFailure",
      "printedName": "recordFailure(_:location:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Void",
          "printedName": "()"
        },
        {
          "kind": "TypeNominal",
          "name": "String",
          "printedName": "Swift.String",
          "usr": "s:SS"
        },
        {
          "kind": "TypeNominal",
          "name": "SourceLocation",
          "printedName": "Nimble.SourceLocation",
          "usr": "c:@M@Nimble@objc(cs)SourceLocation"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble13recordFailure_8locationySS_AA14SourceLocationCtF",
      "mangledName": "$s6Nimble13recordFailure_8locationySS_AA14SourceLocationCtF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Import",
      "name": "Dispatch",
      "printedName": "Dispatch",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "TypeDecl",
      "name": "NMBExpectation",
      "printedName": "NMBExpectation",
      "children": [
        {
          "kind": "Var",
          "name": "_actualBlock",
          "printedName": "_actualBlock",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "() -> ObjectiveC.NSObject?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Optional",
                  "printedName": "ObjectiveC.NSObject?",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "NSObject",
                      "printedName": "ObjectiveC.NSObject",
                      "usr": "c:objc(cs)NSObject"
                    }
                  ],
                  "usr": "s:Sq"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ]
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble14NMBExpectationC12_actualBlockSo8NSObjectCSgycvp",
          "mangledName": "$s6Nimble14NMBExpectationC12_actualBlockSo8NSObjectCSgycvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "Final",
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 0,
          "isLet": true,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "() -> ObjectiveC.NSObject?",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Optional",
                      "printedName": "ObjectiveC.NSObject?",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "NSObject",
                          "printedName": "ObjectiveC.NSObject",
                          "usr": "c:objc(cs)NSObject"
                        }
                      ],
                      "usr": "s:Sq"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "Void",
                      "printedName": "()"
                    }
                  ]
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14NMBExpectationC12_actualBlockSo8NSObjectCSgycvg",
              "mangledName": "$s6Nimble14NMBExpectationC12_actualBlockSo8NSObjectCSgycvg",
              "moduleName": "Nimble",
              "implicit": true,
              "declAttributes": [
                "Final"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "_negative",
          "printedName": "_negative",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble14NMBExpectationC9_negativeSbvp",
          "mangledName": "$s6Nimble14NMBExpectationC9_negativeSbvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 1,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Bool",
                  "printedName": "Swift.Bool",
                  "usr": "s:Sb"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14NMBExpectationC9_negativeSbvg",
              "mangledName": "$s6Nimble14NMBExpectationC9_negativeSbvg",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "get"
            },
            {
              "kind": "Accessor",
              "name": "Set",
              "printedName": "Set()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Bool",
                  "printedName": "Swift.Bool",
                  "usr": "s:Sb"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14NMBExpectationC9_negativeSbvs",
              "mangledName": "$s6Nimble14NMBExpectationC9_negativeSbvs",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "set"
            },
            {
              "kind": "Accessor",
              "name": "Modify",
              "printedName": "Modify()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14NMBExpectationC9_negativeSbvM",
              "mangledName": "$s6Nimble14NMBExpectationC9_negativeSbvM",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "_modify"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "_file",
          "printedName": "_file",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble14NMBExpectationC5_fileSSvp",
          "mangledName": "$s6Nimble14NMBExpectationC5_fileSSvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "Final",
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 2,
          "isLet": true,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14NMBExpectationC5_fileSSvg",
              "mangledName": "$s6Nimble14NMBExpectationC5_fileSSvg",
              "moduleName": "Nimble",
              "implicit": true,
              "declAttributes": [
                "Final"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "_line",
          "printedName": "_line",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "UInt",
              "printedName": "Swift.UInt",
              "usr": "s:Su"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble14NMBExpectationC5_lineSuvp",
          "mangledName": "$s6Nimble14NMBExpectationC5_lineSuvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "Final",
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 3,
          "isLet": true,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt",
                  "printedName": "Swift.UInt",
                  "usr": "s:Su"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14NMBExpectationC5_lineSuvg",
              "mangledName": "$s6Nimble14NMBExpectationC5_lineSuvg",
              "moduleName": "Nimble",
              "implicit": true,
              "declAttributes": [
                "Final"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "_timeout",
          "printedName": "_timeout",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "DispatchTimeInterval",
              "printedName": "Dispatch.DispatchTimeInterval",
              "usr": "s:8Dispatch0A12TimeIntervalO"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble14NMBExpectationC8_timeout8Dispatch0D12TimeIntervalOvp",
          "mangledName": "$s6Nimble14NMBExpectationC8_timeout8Dispatch0D12TimeIntervalOvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "HasInitialValue",
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 4,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "DispatchTimeInterval",
                  "printedName": "Dispatch.DispatchTimeInterval",
                  "usr": "s:8Dispatch0A12TimeIntervalO"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14NMBExpectationC8_timeout8Dispatch0D12TimeIntervalOvg",
              "mangledName": "$s6Nimble14NMBExpectationC8_timeout8Dispatch0D12TimeIntervalOvg",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "get"
            },
            {
              "kind": "Accessor",
              "name": "Set",
              "printedName": "Set()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "DispatchTimeInterval",
                  "printedName": "Dispatch.DispatchTimeInterval",
                  "usr": "s:8Dispatch0A12TimeIntervalO"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14NMBExpectationC8_timeout8Dispatch0D12TimeIntervalOvs",
              "mangledName": "$s6Nimble14NMBExpectationC8_timeout8Dispatch0D12TimeIntervalOvs",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "set"
            },
            {
              "kind": "Accessor",
              "name": "Modify",
              "printedName": "Modify()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14NMBExpectationC8_timeout8Dispatch0D12TimeIntervalOvM",
              "mangledName": "$s6Nimble14NMBExpectationC8_timeout8Dispatch0D12TimeIntervalOvM",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "accessorKind": "_modify"
            }
          ]
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(actualBlock:negative:file:line:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBExpectation",
              "printedName": "Nimble.NMBExpectation",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectation"
            },
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "() -> ObjectiveC.NSObject?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Optional",
                  "printedName": "ObjectiveC.NSObject?",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "NSObject",
                      "printedName": "ObjectiveC.NSObject",
                      "usr": "c:objc(cs)NSObject"
                    }
                  ],
                  "usr": "s:Sq"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ]
            },
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "UInt",
              "printedName": "Swift.UInt",
              "usr": "s:Su"
            }
          ],
          "declKind": "Constructor",
          "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)initWithActualBlock:negative:file:line:",
          "mangledName": "$s6Nimble14NMBExpectationC11actualBlock8negative4file4lineACSo8NSObjectCSgyc_SbSSSutcfc",
          "moduleName": "Nimble",
          "objc_name": "initWithActualBlock:negative:file:line:",
          "declAttributes": [
            "AccessControl",
            "ObjC"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Var",
          "name": "withTimeout",
          "printedName": "withTimeout",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Swift.Double) -> Nimble.NMBExpectation",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NMBExpectation",
                  "printedName": "Nimble.NMBExpectation",
                  "usr": "c:@M@Nimble@objc(cs)NMBExpectation"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Double",
                  "printedName": "Swift.Double",
                  "usr": "s:Sd"
                }
              ]
            }
          ],
          "declKind": "Var",
          "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)withTimeout",
          "mangledName": "$s6Nimble14NMBExpectationC11withTimeoutyACSdcvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl",
            "ObjC"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Swift.Double) -> Nimble.NMBExpectation",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "NMBExpectation",
                      "printedName": "Nimble.NMBExpectation",
                      "usr": "c:@M@Nimble@objc(cs)NMBExpectation"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "Double",
                      "printedName": "Swift.Double",
                      "usr": "s:Sd"
                    }
                  ]
                }
              ],
              "declKind": "Accessor",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)withTimeout",
              "mangledName": "$s6Nimble14NMBExpectationC11withTimeoutyACSdcvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "declAttributes": [
                "ObjC"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "to",
          "printedName": "to",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.NMBPredicate) -> Nimble.NMBExpectation",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NMBExpectation",
                  "printedName": "Nimble.NMBExpectation",
                  "usr": "c:@M@Nimble@objc(cs)NMBExpectation"
                },
                {
                  "kind": "TypeNominal",
                  "name": "NMBPredicate",
                  "printedName": "Nimble.NMBPredicate",
                  "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                }
              ]
            }
          ],
          "declKind": "Var",
          "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)to",
          "mangledName": "$s6Nimble14NMBExpectationC2toyAcA12NMBPredicateCcvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl",
            "ObjC"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Nimble.NMBPredicate) -> Nimble.NMBExpectation",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "NMBExpectation",
                      "printedName": "Nimble.NMBExpectation",
                      "usr": "c:@M@Nimble@objc(cs)NMBExpectation"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "NMBPredicate",
                      "printedName": "Nimble.NMBPredicate",
                      "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                    }
                  ]
                }
              ],
              "declKind": "Accessor",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)to",
              "mangledName": "$s6Nimble14NMBExpectationC2toyAcA12NMBPredicateCcvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "declAttributes": [
                "ObjC"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "toWithDescription",
          "printedName": "toWithDescription",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.NMBPredicate, Swift.String) -> Nimble.NMBExpectation",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NMBExpectation",
                  "printedName": "Nimble.NMBExpectation",
                  "usr": "c:@M@Nimble@objc(cs)NMBExpectation"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Tuple",
                  "printedName": "(Nimble.NMBPredicate, Swift.String)",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "NMBPredicate",
                      "printedName": "Nimble.NMBPredicate",
                      "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "String",
                      "printedName": "Swift.String",
                      "usr": "s:SS"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "Var",
          "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)toWithDescription",
          "mangledName": "$s6Nimble14NMBExpectationC17toWithDescriptionyAcA12NMBPredicateC_SStcvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl",
            "ObjC"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Nimble.NMBPredicate, Swift.String) -> Nimble.NMBExpectation",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "NMBExpectation",
                      "printedName": "Nimble.NMBExpectation",
                      "usr": "c:@M@Nimble@objc(cs)NMBExpectation"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "Tuple",
                      "printedName": "(Nimble.NMBPredicate, Swift.String)",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "NMBPredicate",
                          "printedName": "Nimble.NMBPredicate",
                          "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                        },
                        {
                          "kind": "TypeNominal",
                          "name": "String",
                          "printedName": "Swift.String",
                          "usr": "s:SS"
                        }
                      ]
                    }
                  ]
                }
              ],
              "declKind": "Accessor",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)toWithDescription",
              "mangledName": "$s6Nimble14NMBExpectationC17toWithDescriptionyAcA12NMBPredicateC_SStcvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "declAttributes": [
                "ObjC"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "toNot",
          "printedName": "toNot",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.NMBPredicate) -> Nimble.NMBExpectation",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NMBExpectation",
                  "printedName": "Nimble.NMBExpectation",
                  "usr": "c:@M@Nimble@objc(cs)NMBExpectation"
                },
                {
                  "kind": "TypeNominal",
                  "name": "NMBPredicate",
                  "printedName": "Nimble.NMBPredicate",
                  "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                }
              ]
            }
          ],
          "declKind": "Var",
          "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)toNot",
          "mangledName": "$s6Nimble14NMBExpectationC5toNotyAcA12NMBPredicateCcvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl",
            "ObjC"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Nimble.NMBPredicate) -> Nimble.NMBExpectation",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "NMBExpectation",
                      "printedName": "Nimble.NMBExpectation",
                      "usr": "c:@M@Nimble@objc(cs)NMBExpectation"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "NMBPredicate",
                      "printedName": "Nimble.NMBPredicate",
                      "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                    }
                  ]
                }
              ],
              "declKind": "Accessor",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)toNot",
              "mangledName": "$s6Nimble14NMBExpectationC5toNotyAcA12NMBPredicateCcvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "declAttributes": [
                "ObjC"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "toNotWithDescription",
          "printedName": "toNotWithDescription",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.NMBPredicate, Swift.String) -> Nimble.NMBExpectation",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NMBExpectation",
                  "printedName": "Nimble.NMBExpectation",
                  "usr": "c:@M@Nimble@objc(cs)NMBExpectation"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Tuple",
                  "printedName": "(Nimble.NMBPredicate, Swift.String)",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "NMBPredicate",
                      "printedName": "Nimble.NMBPredicate",
                      "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "String",
                      "printedName": "Swift.String",
                      "usr": "s:SS"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "Var",
          "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)toNotWithDescription",
          "mangledName": "$s6Nimble14NMBExpectationC20toNotWithDescriptionyAcA12NMBPredicateC_SStcvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl",
            "ObjC"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Nimble.NMBPredicate, Swift.String) -> Nimble.NMBExpectation",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "NMBExpectation",
                      "printedName": "Nimble.NMBExpectation",
                      "usr": "c:@M@Nimble@objc(cs)NMBExpectation"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "Tuple",
                      "printedName": "(Nimble.NMBPredicate, Swift.String)",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "NMBPredicate",
                          "printedName": "Nimble.NMBPredicate",
                          "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                        },
                        {
                          "kind": "TypeNominal",
                          "name": "String",
                          "printedName": "Swift.String",
                          "usr": "s:SS"
                        }
                      ]
                    }
                  ]
                }
              ],
              "declKind": "Accessor",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)toNotWithDescription",
              "mangledName": "$s6Nimble14NMBExpectationC20toNotWithDescriptionyAcA12NMBPredicateC_SStcvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "declAttributes": [
                "ObjC"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "notTo",
          "printedName": "notTo",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.NMBPredicate) -> Nimble.NMBExpectation",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NMBExpectation",
                  "printedName": "Nimble.NMBExpectation",
                  "usr": "c:@M@Nimble@objc(cs)NMBExpectation"
                },
                {
                  "kind": "TypeNominal",
                  "name": "NMBPredicate",
                  "printedName": "Nimble.NMBPredicate",
                  "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                }
              ]
            }
          ],
          "declKind": "Var",
          "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)notTo",
          "mangledName": "$s6Nimble14NMBExpectationC5notToyAcA12NMBPredicateCcvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl",
            "ObjC"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Nimble.NMBPredicate) -> Nimble.NMBExpectation",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "NMBExpectation",
                      "printedName": "Nimble.NMBExpectation",
                      "usr": "c:@M@Nimble@objc(cs)NMBExpectation"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "NMBPredicate",
                      "printedName": "Nimble.NMBPredicate",
                      "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                    }
                  ]
                }
              ],
              "declKind": "Accessor",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)notTo",
              "mangledName": "$s6Nimble14NMBExpectationC5notToyAcA12NMBPredicateCcvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "declAttributes": [
                "ObjC"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "notToWithDescription",
          "printedName": "notToWithDescription",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.NMBPredicate, Swift.String) -> Nimble.NMBExpectation",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NMBExpectation",
                  "printedName": "Nimble.NMBExpectation",
                  "usr": "c:@M@Nimble@objc(cs)NMBExpectation"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Tuple",
                  "printedName": "(Nimble.NMBPredicate, Swift.String)",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "NMBPredicate",
                      "printedName": "Nimble.NMBPredicate",
                      "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "String",
                      "printedName": "Swift.String",
                      "usr": "s:SS"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "Var",
          "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)notToWithDescription",
          "mangledName": "$s6Nimble14NMBExpectationC20notToWithDescriptionyAcA12NMBPredicateC_SStcvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl",
            "ObjC"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Nimble.NMBPredicate, Swift.String) -> Nimble.NMBExpectation",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "NMBExpectation",
                      "printedName": "Nimble.NMBExpectation",
                      "usr": "c:@M@Nimble@objc(cs)NMBExpectation"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "Tuple",
                      "printedName": "(Nimble.NMBPredicate, Swift.String)",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "NMBPredicate",
                          "printedName": "Nimble.NMBPredicate",
                          "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                        },
                        {
                          "kind": "TypeNominal",
                          "name": "String",
                          "printedName": "Swift.String",
                          "usr": "s:SS"
                        }
                      ]
                    }
                  ]
                }
              ],
              "declKind": "Accessor",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)notToWithDescription",
              "mangledName": "$s6Nimble14NMBExpectationC20notToWithDescriptionyAcA12NMBPredicateC_SStcvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "declAttributes": [
                "ObjC"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "toEventually",
          "printedName": "toEventually",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.NMBPredicate) -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "NMBPredicate",
                  "printedName": "Nimble.NMBPredicate",
                  "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                }
              ]
            }
          ],
          "declKind": "Var",
          "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)toEventually",
          "mangledName": "$s6Nimble14NMBExpectationC12toEventuallyyyAA12NMBPredicateCcvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl",
            "ObjC"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Nimble.NMBPredicate) -> ()",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Void",
                      "printedName": "()"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "NMBPredicate",
                      "printedName": "Nimble.NMBPredicate",
                      "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                    }
                  ]
                }
              ],
              "declKind": "Accessor",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)toEventually",
              "mangledName": "$s6Nimble14NMBExpectationC12toEventuallyyyAA12NMBPredicateCcvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "declAttributes": [
                "ObjC"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "toEventuallyWithDescription",
          "printedName": "toEventuallyWithDescription",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.NMBPredicate, Swift.String) -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Tuple",
                  "printedName": "(Nimble.NMBPredicate, Swift.String)",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "NMBPredicate",
                      "printedName": "Nimble.NMBPredicate",
                      "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "String",
                      "printedName": "Swift.String",
                      "usr": "s:SS"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "Var",
          "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)toEventuallyWithDescription",
          "mangledName": "$s6Nimble14NMBExpectationC27toEventuallyWithDescriptionyyAA12NMBPredicateC_SStcvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl",
            "ObjC"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Nimble.NMBPredicate, Swift.String) -> ()",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Void",
                      "printedName": "()"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "Tuple",
                      "printedName": "(Nimble.NMBPredicate, Swift.String)",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "NMBPredicate",
                          "printedName": "Nimble.NMBPredicate",
                          "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                        },
                        {
                          "kind": "TypeNominal",
                          "name": "String",
                          "printedName": "Swift.String",
                          "usr": "s:SS"
                        }
                      ]
                    }
                  ]
                }
              ],
              "declKind": "Accessor",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)toEventuallyWithDescription",
              "mangledName": "$s6Nimble14NMBExpectationC27toEventuallyWithDescriptionyyAA12NMBPredicateC_SStcvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "declAttributes": [
                "ObjC"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "toEventuallyNot",
          "printedName": "toEventuallyNot",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.NMBPredicate) -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "NMBPredicate",
                  "printedName": "Nimble.NMBPredicate",
                  "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                }
              ]
            }
          ],
          "declKind": "Var",
          "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)toEventuallyNot",
          "mangledName": "$s6Nimble14NMBExpectationC15toEventuallyNotyyAA12NMBPredicateCcvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl",
            "ObjC"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Nimble.NMBPredicate) -> ()",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Void",
                      "printedName": "()"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "NMBPredicate",
                      "printedName": "Nimble.NMBPredicate",
                      "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                    }
                  ]
                }
              ],
              "declKind": "Accessor",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)toEventuallyNot",
              "mangledName": "$s6Nimble14NMBExpectationC15toEventuallyNotyyAA12NMBPredicateCcvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "declAttributes": [
                "ObjC"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "toEventuallyNotWithDescription",
          "printedName": "toEventuallyNotWithDescription",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.NMBPredicate, Swift.String) -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Tuple",
                  "printedName": "(Nimble.NMBPredicate, Swift.String)",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "NMBPredicate",
                      "printedName": "Nimble.NMBPredicate",
                      "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "String",
                      "printedName": "Swift.String",
                      "usr": "s:SS"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "Var",
          "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)toEventuallyNotWithDescription",
          "mangledName": "$s6Nimble14NMBExpectationC30toEventuallyNotWithDescriptionyyAA12NMBPredicateC_SStcvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl",
            "ObjC"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Nimble.NMBPredicate, Swift.String) -> ()",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Void",
                      "printedName": "()"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "Tuple",
                      "printedName": "(Nimble.NMBPredicate, Swift.String)",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "NMBPredicate",
                          "printedName": "Nimble.NMBPredicate",
                          "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                        },
                        {
                          "kind": "TypeNominal",
                          "name": "String",
                          "printedName": "Swift.String",
                          "usr": "s:SS"
                        }
                      ]
                    }
                  ]
                }
              ],
              "declKind": "Accessor",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)toEventuallyNotWithDescription",
              "mangledName": "$s6Nimble14NMBExpectationC30toEventuallyNotWithDescriptionyyAA12NMBPredicateC_SStcvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "declAttributes": [
                "ObjC"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "toNotEventually",
          "printedName": "toNotEventually",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.NMBPredicate) -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "NMBPredicate",
                  "printedName": "Nimble.NMBPredicate",
                  "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                }
              ]
            }
          ],
          "declKind": "Var",
          "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)toNotEventually",
          "mangledName": "$s6Nimble14NMBExpectationC15toNotEventuallyyyAA12NMBPredicateCcvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl",
            "ObjC"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Nimble.NMBPredicate) -> ()",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Void",
                      "printedName": "()"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "NMBPredicate",
                      "printedName": "Nimble.NMBPredicate",
                      "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                    }
                  ]
                }
              ],
              "declKind": "Accessor",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)toNotEventually",
              "mangledName": "$s6Nimble14NMBExpectationC15toNotEventuallyyyAA12NMBPredicateCcvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "declAttributes": [
                "ObjC"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "toNotEventuallyWithDescription",
          "printedName": "toNotEventuallyWithDescription",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.NMBPredicate, Swift.String) -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Tuple",
                  "printedName": "(Nimble.NMBPredicate, Swift.String)",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "NMBPredicate",
                      "printedName": "Nimble.NMBPredicate",
                      "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "String",
                      "printedName": "Swift.String",
                      "usr": "s:SS"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "Var",
          "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)toNotEventuallyWithDescription",
          "mangledName": "$s6Nimble14NMBExpectationC30toNotEventuallyWithDescriptionyyAA12NMBPredicateC_SStcvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl",
            "ObjC"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Nimble.NMBPredicate, Swift.String) -> ()",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Void",
                      "printedName": "()"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "Tuple",
                      "printedName": "(Nimble.NMBPredicate, Swift.String)",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "NMBPredicate",
                          "printedName": "Nimble.NMBPredicate",
                          "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                        },
                        {
                          "kind": "TypeNominal",
                          "name": "String",
                          "printedName": "Swift.String",
                          "usr": "s:SS"
                        }
                      ]
                    }
                  ]
                }
              ],
              "declKind": "Accessor",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)toNotEventuallyWithDescription",
              "mangledName": "$s6Nimble14NMBExpectationC30toNotEventuallyWithDescriptionyyAA12NMBPredicateC_SStcvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "declAttributes": [
                "ObjC"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "toNever",
          "printedName": "toNever",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.NMBPredicate) -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "NMBPredicate",
                  "printedName": "Nimble.NMBPredicate",
                  "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                }
              ]
            }
          ],
          "declKind": "Var",
          "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)toNever",
          "mangledName": "$s6Nimble14NMBExpectationC7toNeveryyAA12NMBPredicateCcvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl",
            "ObjC"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Nimble.NMBPredicate) -> ()",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Void",
                      "printedName": "()"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "NMBPredicate",
                      "printedName": "Nimble.NMBPredicate",
                      "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                    }
                  ]
                }
              ],
              "declKind": "Accessor",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)toNever",
              "mangledName": "$s6Nimble14NMBExpectationC7toNeveryyAA12NMBPredicateCcvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "declAttributes": [
                "ObjC"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "toNeverWithDescription",
          "printedName": "toNeverWithDescription",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.NMBPredicate, Swift.String) -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Tuple",
                  "printedName": "(Nimble.NMBPredicate, Swift.String)",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "NMBPredicate",
                      "printedName": "Nimble.NMBPredicate",
                      "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "String",
                      "printedName": "Swift.String",
                      "usr": "s:SS"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "Var",
          "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)toNeverWithDescription",
          "mangledName": "$s6Nimble14NMBExpectationC22toNeverWithDescriptionyyAA12NMBPredicateC_SStcvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl",
            "ObjC"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Nimble.NMBPredicate, Swift.String) -> ()",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Void",
                      "printedName": "()"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "Tuple",
                      "printedName": "(Nimble.NMBPredicate, Swift.String)",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "NMBPredicate",
                          "printedName": "Nimble.NMBPredicate",
                          "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                        },
                        {
                          "kind": "TypeNominal",
                          "name": "String",
                          "printedName": "Swift.String",
                          "usr": "s:SS"
                        }
                      ]
                    }
                  ]
                }
              ],
              "declKind": "Accessor",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)toNeverWithDescription",
              "mangledName": "$s6Nimble14NMBExpectationC22toNeverWithDescriptionyyAA12NMBPredicateC_SStcvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "declAttributes": [
                "ObjC"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "neverTo",
          "printedName": "neverTo",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.NMBPredicate) -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "NMBPredicate",
                  "printedName": "Nimble.NMBPredicate",
                  "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                }
              ]
            }
          ],
          "declKind": "Var",
          "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)neverTo",
          "mangledName": "$s6Nimble14NMBExpectationC7neverToyyAA12NMBPredicateCcvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl",
            "ObjC"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Nimble.NMBPredicate) -> ()",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Void",
                      "printedName": "()"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "NMBPredicate",
                      "printedName": "Nimble.NMBPredicate",
                      "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                    }
                  ]
                }
              ],
              "declKind": "Accessor",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)neverTo",
              "mangledName": "$s6Nimble14NMBExpectationC7neverToyyAA12NMBPredicateCcvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "declAttributes": [
                "ObjC"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "neverToWithDescription",
          "printedName": "neverToWithDescription",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.NMBPredicate, Swift.String) -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Tuple",
                  "printedName": "(Nimble.NMBPredicate, Swift.String)",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "NMBPredicate",
                      "printedName": "Nimble.NMBPredicate",
                      "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "String",
                      "printedName": "Swift.String",
                      "usr": "s:SS"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "Var",
          "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)neverToWithDescription",
          "mangledName": "$s6Nimble14NMBExpectationC22neverToWithDescriptionyyAA12NMBPredicateC_SStcvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl",
            "ObjC"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Nimble.NMBPredicate, Swift.String) -> ()",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Void",
                      "printedName": "()"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "Tuple",
                      "printedName": "(Nimble.NMBPredicate, Swift.String)",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "NMBPredicate",
                          "printedName": "Nimble.NMBPredicate",
                          "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                        },
                        {
                          "kind": "TypeNominal",
                          "name": "String",
                          "printedName": "Swift.String",
                          "usr": "s:SS"
                        }
                      ]
                    }
                  ]
                }
              ],
              "declKind": "Accessor",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)neverToWithDescription",
              "mangledName": "$s6Nimble14NMBExpectationC22neverToWithDescriptionyyAA12NMBPredicateC_SStcvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "declAttributes": [
                "ObjC"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "toAlways",
          "printedName": "toAlways",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.NMBPredicate) -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "NMBPredicate",
                  "printedName": "Nimble.NMBPredicate",
                  "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                }
              ]
            }
          ],
          "declKind": "Var",
          "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)toAlways",
          "mangledName": "$s6Nimble14NMBExpectationC8toAlwaysyyAA12NMBPredicateCcvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl",
            "ObjC"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Nimble.NMBPredicate) -> ()",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Void",
                      "printedName": "()"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "NMBPredicate",
                      "printedName": "Nimble.NMBPredicate",
                      "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                    }
                  ]
                }
              ],
              "declKind": "Accessor",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)toAlways",
              "mangledName": "$s6Nimble14NMBExpectationC8toAlwaysyyAA12NMBPredicateCcvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "declAttributes": [
                "ObjC"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "toAlwaysWithDescription",
          "printedName": "toAlwaysWithDescription",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.NMBPredicate, Swift.String) -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Tuple",
                  "printedName": "(Nimble.NMBPredicate, Swift.String)",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "NMBPredicate",
                      "printedName": "Nimble.NMBPredicate",
                      "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "String",
                      "printedName": "Swift.String",
                      "usr": "s:SS"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "Var",
          "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)toAlwaysWithDescription",
          "mangledName": "$s6Nimble14NMBExpectationC23toAlwaysWithDescriptionyyAA12NMBPredicateC_SStcvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl",
            "ObjC"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Nimble.NMBPredicate, Swift.String) -> ()",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Void",
                      "printedName": "()"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "Tuple",
                      "printedName": "(Nimble.NMBPredicate, Swift.String)",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "NMBPredicate",
                          "printedName": "Nimble.NMBPredicate",
                          "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                        },
                        {
                          "kind": "TypeNominal",
                          "name": "String",
                          "printedName": "Swift.String",
                          "usr": "s:SS"
                        }
                      ]
                    }
                  ]
                }
              ],
              "declKind": "Accessor",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)toAlwaysWithDescription",
              "mangledName": "$s6Nimble14NMBExpectationC23toAlwaysWithDescriptionyyAA12NMBPredicateC_SStcvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "declAttributes": [
                "ObjC"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "alwaysTo",
          "printedName": "alwaysTo",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.NMBPredicate) -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "NMBPredicate",
                  "printedName": "Nimble.NMBPredicate",
                  "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                }
              ]
            }
          ],
          "declKind": "Var",
          "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)alwaysTo",
          "mangledName": "$s6Nimble14NMBExpectationC8alwaysToyyAA12NMBPredicateCcvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl",
            "ObjC"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Nimble.NMBPredicate) -> ()",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Void",
                      "printedName": "()"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "NMBPredicate",
                      "printedName": "Nimble.NMBPredicate",
                      "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                    }
                  ]
                }
              ],
              "declKind": "Accessor",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)alwaysTo",
              "mangledName": "$s6Nimble14NMBExpectationC8alwaysToyyAA12NMBPredicateCcvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "declAttributes": [
                "ObjC"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "alwaysToWithDescription",
          "printedName": "alwaysToWithDescription",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.NMBPredicate, Swift.String) -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Tuple",
                  "printedName": "(Nimble.NMBPredicate, Swift.String)",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "NMBPredicate",
                      "printedName": "Nimble.NMBPredicate",
                      "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "String",
                      "printedName": "Swift.String",
                      "usr": "s:SS"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "Var",
          "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)alwaysToWithDescription",
          "mangledName": "$s6Nimble14NMBExpectationC23alwaysToWithDescriptionyyAA12NMBPredicateC_SStcvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl",
            "ObjC"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Nimble.NMBPredicate, Swift.String) -> ()",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Void",
                      "printedName": "()"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "Tuple",
                      "printedName": "(Nimble.NMBPredicate, Swift.String)",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "NMBPredicate",
                          "printedName": "Nimble.NMBPredicate",
                          "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                        },
                        {
                          "kind": "TypeNominal",
                          "name": "String",
                          "printedName": "Swift.String",
                          "usr": "s:SS"
                        }
                      ]
                    }
                  ]
                }
              ],
              "declKind": "Accessor",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)alwaysToWithDescription",
              "mangledName": "$s6Nimble14NMBExpectationC23alwaysToWithDescriptionyyAA12NMBPredicateC_SStcvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "declAttributes": [
                "ObjC"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Function",
          "name": "failWithMessage",
          "printedName": "failWithMessage(_:file:line:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "UInt",
              "printedName": "Swift.UInt",
              "usr": "s:Su"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@Nimble@objc(cs)NMBExpectation(cm)failWithMessage:file:line:",
          "mangledName": "$s6Nimble14NMBExpectationC15failWithMessage_4file4lineySS_SSSutFZ",
          "moduleName": "Nimble",
          "static": true,
          "isOpen": true,
          "declAttributes": [
            "AccessControl",
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBExpectation",
              "printedName": "Nimble.NMBExpectation",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectation"
            }
          ],
          "declKind": "Constructor",
          "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)init",
          "mangledName": "$s6Nimble14NMBExpectationCACycfc",
          "moduleName": "Nimble",
          "overriding": true,
          "implicit": true,
          "objc_name": "init",
          "declAttributes": [
            "Dynamic",
            "ObjC",
            "Override"
          ],
          "init_kind": "Designated"
        }
      ],
      "declKind": "Class",
      "usr": "c:@M@Nimble@objc(cs)NMBExpectation",
      "mangledName": "$s6Nimble14NMBExpectationC",
      "moduleName": "Nimble",
      "isOpen": true,
      "declAttributes": [
        "AccessControl",
        "RawDocComment",
        "ObjC"
      ],
      "superclassUsr": "c:objc(cs)NSObject",
      "superclassNames": [
        "ObjectiveC.NSObject"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObservingPublishing",
          "printedName": "_KeyValueCodingAndObservingPublishing",
          "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
          "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObserving",
          "printedName": "_KeyValueCodingAndObserving",
          "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
          "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        }
      ]
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "TypeDecl",
      "name": "NotificationCollector",
      "printedName": "NotificationCollector",
      "children": [
        {
          "kind": "Var",
          "name": "observedNotifications",
          "printedName": "observedNotifications",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Foundation.Notification]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Notification",
                  "printedName": "Foundation.Notification",
                  "usr": "s:10Foundation12NotificationV"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble21NotificationCollectorC21observedNotificationsSay10Foundation0B0VGvp",
          "mangledName": "$s6Nimble21NotificationCollectorC21observedNotificationsSay10Foundation0B0VGvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "HasStorage",
            "SetterAccess"
          ],
          "fixedbinaryorder": 0,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Array",
                  "printedName": "[Foundation.Notification]",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Notification",
                      "printedName": "Foundation.Notification",
                      "usr": "s:10Foundation12NotificationV"
                    }
                  ],
                  "usr": "s:Sa"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble21NotificationCollectorC21observedNotificationsSay10Foundation0B0VGvg",
              "mangledName": "$s6Nimble21NotificationCollectorC21observedNotificationsSay10Foundation0B0VGvg",
              "moduleName": "Nimble",
              "implicit": true,
              "isOpen": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "notificationCenter",
          "printedName": "notificationCenter",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NotificationCenter",
              "printedName": "Foundation.NotificationCenter",
              "usr": "c:objc(cs)NSNotificationCenter"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble21NotificationCollectorC18notificationCenter33_593625F496B5EB08C64004EFD16C07E4LLSo014NSNotificationE0Cvp",
          "mangledName": "$s6Nimble21NotificationCollectorC18notificationCenter33_593625F496B5EB08C64004EFD16C07E4LLSo014NSNotificationE0Cvp",
          "moduleName": "Nimble",
          "isInternal": true,
          "declAttributes": [
            "Final",
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 1,
          "isLet": true,
          "hasStorage": true
        },
        {
          "kind": "Var",
          "name": "names",
          "printedName": "names",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Set",
              "printedName": "Swift.Set<Foundation.NSNotification.Name>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Name",
                  "printedName": "Foundation.NSNotification.Name",
                  "usr": "c:@T@NSNotificationName"
                }
              ],
              "usr": "s:Sh"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble21NotificationCollectorC5names33_593625F496B5EB08C64004EFD16C07E4LLShySo18NSNotificationNameaGvp",
          "mangledName": "$s6Nimble21NotificationCollectorC5names33_593625F496B5EB08C64004EFD16C07E4LLShySo18NSNotificationNameaGvp",
          "moduleName": "Nimble",
          "isInternal": true,
          "declAttributes": [
            "Final",
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 2,
          "isLet": true,
          "hasStorage": true
        },
        {
          "kind": "Var",
          "name": "tokens",
          "printedName": "tokens",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[ObjectiveC.NSObjectProtocol]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NSObjectProtocol",
                  "printedName": "ObjectiveC.NSObjectProtocol",
                  "usr": "c:objc(pl)NSObject"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble21NotificationCollectorC6tokens33_593625F496B5EB08C64004EFD16C07E4LLSaySo8NSObject_pGvp",
          "mangledName": "$s6Nimble21NotificationCollectorC6tokens33_593625F496B5EB08C64004EFD16C07E4LLSaySo8NSObject_pGvp",
          "moduleName": "Nimble",
          "isInternal": true,
          "declAttributes": [
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 3,
          "hasStorage": true
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(notificationCenter:names:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NotificationCollector",
              "printedName": "Nimble.NotificationCollector",
              "usr": "s:6Nimble21NotificationCollectorC"
            },
            {
              "kind": "TypeNominal",
              "name": "NotificationCenter",
              "printedName": "Foundation.NotificationCenter",
              "usr": "c:objc(cs)NSNotificationCenter"
            },
            {
              "kind": "TypeNominal",
              "name": "Set",
              "printedName": "Swift.Set<Foundation.NSNotification.Name>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Name",
                  "printedName": "Foundation.NSNotification.Name",
                  "usr": "c:@T@NSNotificationName"
                }
              ],
              "hasDefaultArg": true,
              "usr": "s:Sh"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble21NotificationCollectorC18notificationCenter5namesACSo014NSNotificationE0C_ShySo0G4NameaGtcfc",
          "mangledName": "$s6Nimble21NotificationCollectorC18notificationCenter5namesACSo014NSNotificationE0C_ShySo0G4NameaGtcfc",
          "moduleName": "Nimble",
          "declAttributes": [
            "Required"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Function",
          "name": "startObserving",
          "printedName": "startObserving()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble21NotificationCollectorC14startObservingyyF",
          "mangledName": "$s6Nimble21NotificationCollectorC14startObservingyyF",
          "moduleName": "Nimble",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        }
      ],
      "declKind": "Class",
      "usr": "s:6Nimble21NotificationCollectorC",
      "mangledName": "$s6Nimble21NotificationCollectorC",
      "moduleName": "Nimble",
      "isOpen": true,
      "declAttributes": [
        "AccessControl"
      ]
    },
    {
      "kind": "Function",
      "name": "postNotifications",
      "printedName": "postNotifications(_:from:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<[Foundation.Notification]>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Foundation.Notification]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Notification",
                  "printedName": "Foundation.Notification",
                  "usr": "s:10Foundation12NotificationV"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "NotificationCenter",
          "printedName": "Foundation.NotificationCenter",
          "hasDefaultArg": true,
          "usr": "c:objc(cs)NSNotificationCenter"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble17postNotifications_4fromAA9PredicateVyxGAEySay10Foundation12NotificationVGG_So20NSNotificationCenterCtlF",
      "mangledName": "$s6Nimble17postNotifications_4fromAA9PredicateVyxGAEySay10Foundation12NotificationVGG_So20NSNotificationCenterCtlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<Out>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "TypeDecl",
      "name": "Predicate",
      "printedName": "Predicate",
      "children": [
        {
          "kind": "Var",
          "name": "matcher",
          "printedName": "matcher",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.Expression<τ_0_0>) throws -> Nimble.PredicateResult",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "PredicateResult",
                  "printedName": "Nimble.PredicateResult",
                  "usr": "s:6Nimble15PredicateResultV"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Expression",
                  "printedName": "Nimble.Expression<τ_0_0>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    }
                  ],
                  "usr": "s:6Nimble10ExpressionV"
                }
              ]
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble9PredicateV7matcher33_5F40AD2AE295C299D892363EA67C8826LLyAA0B6ResultVAA10ExpressionVyxGKcvp",
          "mangledName": "$s6Nimble9PredicateV7matcher33_5F40AD2AE295C299D892363EA67C8826LLyAA0B6ResultVAA10ExpressionVyxGKcvp",
          "moduleName": "Nimble",
          "isInternal": true,
          "declAttributes": [
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 0,
          "hasStorage": true
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Predicate",
              "printedName": "Nimble.Predicate<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble9PredicateV"
            },
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.Expression<τ_0_0>) throws -> Nimble.PredicateResult",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "PredicateResult",
                  "printedName": "Nimble.PredicateResult",
                  "usr": "s:6Nimble15PredicateResultV"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Expression",
                  "printedName": "Nimble.Expression<τ_0_0>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    }
                  ],
                  "usr": "s:6Nimble10ExpressionV"
                }
              ]
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble9PredicateVyACyxGAA0B6ResultVAA10ExpressionVyxGKccfc",
          "mangledName": "$s6Nimble9PredicateVyACyxGAA0B6ResultVAA10ExpressionVyxGKccfc",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Function",
          "name": "satisfies",
          "printedName": "satisfies(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "PredicateResult",
              "printedName": "Nimble.PredicateResult",
              "usr": "s:6Nimble15PredicateResultV"
            },
            {
              "kind": "TypeNominal",
              "name": "Expression",
              "printedName": "Nimble.Expression<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble10ExpressionV"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble9PredicateV9satisfiesyAA0B6ResultVAA10ExpressionVyxGKF",
          "mangledName": "$s6Nimble9PredicateV9satisfiesyAA0B6ResultVAA10ExpressionVyxGKF",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "throwing": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "define",
          "printedName": "define(matcher:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Predicate",
              "printedName": "Nimble.Predicate<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble9PredicateV"
            },
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.Expression<τ_0_0>) throws -> Nimble.PredicateResult",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "PredicateResult",
                  "printedName": "Nimble.PredicateResult",
                  "usr": "s:6Nimble15PredicateResultV"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Expression",
                  "printedName": "Nimble.Expression<τ_0_0>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    }
                  ],
                  "usr": "s:6Nimble10ExpressionV"
                }
              ]
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble9PredicateV6define7matcherACyxGAA0B6ResultVAA10ExpressionVyxGKc_tFZ",
          "mangledName": "$s6Nimble9PredicateV6define7matcherACyxGAA0B6ResultVAA10ExpressionVyxGKc_tFZ",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "static": true,
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "define",
          "printedName": "define(_:matcher:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Predicate",
              "printedName": "Nimble.Predicate<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble9PredicateV"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "hasDefaultArg": true,
              "usr": "s:SS"
            },
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.Expression<τ_0_0>, Nimble.ExpectationMessage) throws -> Nimble.PredicateResult",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "PredicateResult",
                  "printedName": "Nimble.PredicateResult",
                  "usr": "s:6Nimble15PredicateResultV"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Tuple",
                  "printedName": "(Nimble.Expression<τ_0_0>, Nimble.ExpectationMessage)",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Expression",
                      "printedName": "Nimble.Expression<τ_0_0>",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "GenericTypeParam",
                          "printedName": "τ_0_0"
                        }
                      ],
                      "usr": "s:6Nimble10ExpressionV"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "ExpectationMessage",
                      "printedName": "Nimble.ExpectationMessage",
                      "usr": "s:6Nimble18ExpectationMessageO"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble9PredicateV6define_7matcherACyxGSS_AA0B6ResultVAA10ExpressionVyxG_AA18ExpectationMessageOtKctFZ",
          "mangledName": "$s6Nimble9PredicateV6define_7matcherACyxGSS_AA0B6ResultVAA10ExpressionVyxG_AA18ExpectationMessageOtKctFZ",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "static": true,
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "defineNilable",
          "printedName": "defineNilable(_:matcher:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Predicate",
              "printedName": "Nimble.Predicate<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble9PredicateV"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "hasDefaultArg": true,
              "usr": "s:SS"
            },
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.Expression<τ_0_0>, Nimble.ExpectationMessage) throws -> Nimble.PredicateResult",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "PredicateResult",
                  "printedName": "Nimble.PredicateResult",
                  "usr": "s:6Nimble15PredicateResultV"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Tuple",
                  "printedName": "(Nimble.Expression<τ_0_0>, Nimble.ExpectationMessage)",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Expression",
                      "printedName": "Nimble.Expression<τ_0_0>",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "GenericTypeParam",
                          "printedName": "τ_0_0"
                        }
                      ],
                      "usr": "s:6Nimble10ExpressionV"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "ExpectationMessage",
                      "printedName": "Nimble.ExpectationMessage",
                      "usr": "s:6Nimble18ExpectationMessageO"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble9PredicateV13defineNilable_7matcherACyxGSS_AA0B6ResultVAA10ExpressionVyxG_AA18ExpectationMessageOtKctFZ",
          "mangledName": "$s6Nimble9PredicateV13defineNilable_7matcherACyxGSS_AA0B6ResultVAA10ExpressionVyxG_AA18ExpectationMessageOtKctFZ",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "static": true,
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "simple",
          "printedName": "simple(_:matcher:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Predicate",
              "printedName": "Nimble.Predicate<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble9PredicateV"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "hasDefaultArg": true,
              "usr": "s:SS"
            },
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.Expression<τ_0_0>) throws -> Nimble.PredicateStatus",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "PredicateStatus",
                  "printedName": "Nimble.PredicateStatus",
                  "usr": "s:6Nimble15PredicateStatusO"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Expression",
                  "printedName": "Nimble.Expression<τ_0_0>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    }
                  ],
                  "usr": "s:6Nimble10ExpressionV"
                }
              ]
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble9PredicateV6simple_7matcherACyxGSS_AA0B6StatusOAA10ExpressionVyxGKctFZ",
          "mangledName": "$s6Nimble9PredicateV6simple_7matcherACyxGSS_AA0B6StatusOAA10ExpressionVyxGKctFZ",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "static": true,
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "simpleNilable",
          "printedName": "simpleNilable(_:matcher:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Predicate",
              "printedName": "Nimble.Predicate<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble9PredicateV"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "hasDefaultArg": true,
              "usr": "s:SS"
            },
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.Expression<τ_0_0>) throws -> Nimble.PredicateStatus",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "PredicateStatus",
                  "printedName": "Nimble.PredicateStatus",
                  "usr": "s:6Nimble15PredicateStatusO"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Expression",
                  "printedName": "Nimble.Expression<τ_0_0>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    }
                  ],
                  "usr": "s:6Nimble10ExpressionV"
                }
              ]
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble9PredicateV13simpleNilable_7matcherACyxGSS_AA0B6StatusOAA10ExpressionVyxGKctFZ",
          "mangledName": "$s6Nimble9PredicateV13simpleNilable_7matcherACyxGSS_AA0B6StatusOAA10ExpressionVyxGKctFZ",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "static": true,
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "after",
          "printedName": "after(f:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Predicate",
              "printedName": "Nimble.Predicate<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble9PredicateV"
            },
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.Expression<τ_0_0>, Nimble.PredicateResult) throws -> Nimble.PredicateResult",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "PredicateResult",
                  "printedName": "Nimble.PredicateResult",
                  "usr": "s:6Nimble15PredicateResultV"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Tuple",
                  "printedName": "(Nimble.Expression<τ_0_0>, Nimble.PredicateResult)",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Expression",
                      "printedName": "Nimble.Expression<τ_0_0>",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "GenericTypeParam",
                          "printedName": "τ_0_0"
                        }
                      ],
                      "usr": "s:6Nimble10ExpressionV"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "PredicateResult",
                      "printedName": "Nimble.PredicateResult",
                      "usr": "s:6Nimble15PredicateResultV"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble9PredicateV5after1fACyxGAA0B6ResultVAA10ExpressionVyxG_AHtKc_tF",
          "mangledName": "$s6Nimble9PredicateV5after1fACyxGAA0B6ResultVAA10ExpressionVyxG_AHtKc_tF",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<T>",
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Var",
          "name": "requireNonNil",
          "printedName": "requireNonNil",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Predicate",
              "printedName": "Nimble.Predicate<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble9PredicateV"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble9PredicateV13requireNonNilACyxGvp",
          "mangledName": "$s6Nimble9PredicateV13requireNonNilACyxGvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Predicate",
                  "printedName": "Nimble.Predicate<τ_0_0>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    }
                  ],
                  "usr": "s:6Nimble9PredicateV"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble9PredicateV13requireNonNilACyxGvg",
              "mangledName": "$s6Nimble9PredicateV13requireNonNilACyxGvg",
              "moduleName": "Nimble",
              "genericSig": "<τ_0_0>",
              "sugared_genericSig": "<T>",
              "accessorKind": "get"
            }
          ]
        }
      ],
      "declKind": "Struct",
      "usr": "s:6Nimble9PredicateV",
      "mangledName": "$s6Nimble9PredicateV",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<T>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "ExpectationStyle",
      "printedName": "ExpectationStyle",
      "children": [
        {
          "kind": "Var",
          "name": "toMatch",
          "printedName": "toMatch",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.ExpectationStyle.Type) -> Nimble.ExpectationStyle",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ExpectationStyle",
                  "printedName": "Nimble.ExpectationStyle",
                  "usr": "s:6Nimble16ExpectationStyleO"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Metatype",
                  "printedName": "Nimble.ExpectationStyle.Type",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "ExpectationStyle",
                      "printedName": "Nimble.ExpectationStyle",
                      "usr": "s:6Nimble16ExpectationStyleO"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "EnumElement",
          "usr": "s:6Nimble16ExpectationStyleO7toMatchyA2CmF",
          "mangledName": "$s6Nimble16ExpectationStyleO7toMatchyA2CmF",
          "moduleName": "Nimble",
          "fixedbinaryorder": 0
        },
        {
          "kind": "Var",
          "name": "toNotMatch",
          "printedName": "toNotMatch",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.ExpectationStyle.Type) -> Nimble.ExpectationStyle",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ExpectationStyle",
                  "printedName": "Nimble.ExpectationStyle",
                  "usr": "s:6Nimble16ExpectationStyleO"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Metatype",
                  "printedName": "Nimble.ExpectationStyle.Type",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "ExpectationStyle",
                      "printedName": "Nimble.ExpectationStyle",
                      "usr": "s:6Nimble16ExpectationStyleO"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "EnumElement",
          "usr": "s:6Nimble16ExpectationStyleO10toNotMatchyA2CmF",
          "mangledName": "$s6Nimble16ExpectationStyleO10toNotMatchyA2CmF",
          "moduleName": "Nimble",
          "fixedbinaryorder": 1
        },
        {
          "kind": "Function",
          "name": "__derived_enum_equals",
          "printedName": "__derived_enum_equals(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "ExpectationStyle",
              "printedName": "Nimble.ExpectationStyle",
              "usr": "s:6Nimble16ExpectationStyleO"
            },
            {
              "kind": "TypeNominal",
              "name": "ExpectationStyle",
              "printedName": "Nimble.ExpectationStyle",
              "usr": "s:6Nimble16ExpectationStyleO"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble16ExpectationStyleO21__derived_enum_equalsySbAC_ACtFZ",
          "mangledName": "$s6Nimble16ExpectationStyleO21__derived_enum_equalsySbAC_ACtFZ",
          "moduleName": "Nimble",
          "static": true,
          "implicit": true,
          "declAttributes": [
            "Implements"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Var",
          "name": "hashValue",
          "printedName": "hashValue",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble16ExpectationStyleO9hashValueSivp",
          "mangledName": "$s6Nimble16ExpectationStyleO9hashValueSivp",
          "moduleName": "Nimble",
          "implicit": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble16ExpectationStyleO9hashValueSivg",
              "mangledName": "$s6Nimble16ExpectationStyleO9hashValueSivg",
              "moduleName": "Nimble",
              "implicit": true,
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Function",
          "name": "hash",
          "printedName": "hash(into:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Hasher",
              "printedName": "Swift.Hasher",
              "paramValueOwnership": "InOut",
              "usr": "s:s6HasherV"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble16ExpectationStyleO4hash4intoys6HasherVz_tF",
          "mangledName": "$s6Nimble16ExpectationStyleO4hash4intoys6HasherVz_tF",
          "moduleName": "Nimble",
          "implicit": true,
          "funcSelfKind": "NonMutating"
        }
      ],
      "declKind": "Enum",
      "usr": "s:6Nimble16ExpectationStyleO",
      "mangledName": "$s6Nimble16ExpectationStyleO",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "isEnumExhaustive": true,
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "PredicateResult",
      "printedName": "PredicateResult",
      "children": [
        {
          "kind": "Var",
          "name": "status",
          "printedName": "status",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "PredicateStatus",
              "printedName": "Nimble.PredicateStatus",
              "usr": "s:6Nimble15PredicateStatusO"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble15PredicateResultV6statusAA0B6StatusOvp",
          "mangledName": "$s6Nimble15PredicateResultV6statusAA0B6StatusOvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "HasStorage",
            "AccessControl",
            "RawDocComment"
          ],
          "fixedbinaryorder": 0,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "PredicateStatus",
                  "printedName": "Nimble.PredicateStatus",
                  "usr": "s:6Nimble15PredicateStatusO"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble15PredicateResultV6statusAA0B6StatusOvg",
              "mangledName": "$s6Nimble15PredicateResultV6statusAA0B6StatusOvg",
              "moduleName": "Nimble",
              "implicit": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "get"
            },
            {
              "kind": "Accessor",
              "name": "Set",
              "printedName": "Set()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "PredicateStatus",
                  "printedName": "Nimble.PredicateStatus",
                  "usr": "s:6Nimble15PredicateStatusO"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble15PredicateResultV6statusAA0B6StatusOvs",
              "mangledName": "$s6Nimble15PredicateResultV6statusAA0B6StatusOvs",
              "moduleName": "Nimble",
              "implicit": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "set"
            },
            {
              "kind": "Accessor",
              "name": "Modify",
              "printedName": "Modify()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble15PredicateResultV6statusAA0B6StatusOvM",
              "mangledName": "$s6Nimble15PredicateResultV6statusAA0B6StatusOvM",
              "moduleName": "Nimble",
              "implicit": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "_modify"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "message",
          "printedName": "message",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "ExpectationMessage",
              "printedName": "Nimble.ExpectationMessage",
              "usr": "s:6Nimble18ExpectationMessageO"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble15PredicateResultV7messageAA18ExpectationMessageOvp",
          "mangledName": "$s6Nimble15PredicateResultV7messageAA18ExpectationMessageOvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "HasStorage",
            "AccessControl",
            "RawDocComment"
          ],
          "fixedbinaryorder": 1,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ExpectationMessage",
                  "printedName": "Nimble.ExpectationMessage",
                  "usr": "s:6Nimble18ExpectationMessageO"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble15PredicateResultV7messageAA18ExpectationMessageOvg",
              "mangledName": "$s6Nimble15PredicateResultV7messageAA18ExpectationMessageOvg",
              "moduleName": "Nimble",
              "implicit": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "get"
            },
            {
              "kind": "Accessor",
              "name": "Set",
              "printedName": "Set()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "ExpectationMessage",
                  "printedName": "Nimble.ExpectationMessage",
                  "usr": "s:6Nimble18ExpectationMessageO"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble15PredicateResultV7messageAA18ExpectationMessageOvs",
              "mangledName": "$s6Nimble15PredicateResultV7messageAA18ExpectationMessageOvs",
              "moduleName": "Nimble",
              "implicit": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "set"
            },
            {
              "kind": "Accessor",
              "name": "Modify",
              "printedName": "Modify()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble15PredicateResultV7messageAA18ExpectationMessageOvM",
              "mangledName": "$s6Nimble15PredicateResultV7messageAA18ExpectationMessageOvM",
              "moduleName": "Nimble",
              "implicit": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "_modify"
            }
          ]
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(status:message:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "PredicateResult",
              "printedName": "Nimble.PredicateResult",
              "usr": "s:6Nimble15PredicateResultV"
            },
            {
              "kind": "TypeNominal",
              "name": "PredicateStatus",
              "printedName": "Nimble.PredicateStatus",
              "usr": "s:6Nimble15PredicateStatusO"
            },
            {
              "kind": "TypeNominal",
              "name": "ExpectationMessage",
              "printedName": "Nimble.ExpectationMessage",
              "usr": "s:6Nimble18ExpectationMessageO"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble15PredicateResultV6status7messageAcA0B6StatusO_AA18ExpectationMessageOtcfc",
          "mangledName": "$s6Nimble15PredicateResultV6status7messageAcA0B6StatusO_AA18ExpectationMessageOtcfc",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(bool:message:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "PredicateResult",
              "printedName": "Nimble.PredicateResult",
              "usr": "s:6Nimble15PredicateResultV"
            },
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "ExpectationMessage",
              "printedName": "Nimble.ExpectationMessage",
              "usr": "s:6Nimble18ExpectationMessageO"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble15PredicateResultV4bool7messageACSb_AA18ExpectationMessageOtcfc",
          "mangledName": "$s6Nimble15PredicateResultV4bool7messageACSb_AA18ExpectationMessageOtcfc",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Function",
          "name": "toBoolean",
          "printedName": "toBoolean(expectation:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "ExpectationStyle",
              "printedName": "Nimble.ExpectationStyle",
              "usr": "s:6Nimble16ExpectationStyleO"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble15PredicateResultV9toBoolean11expectationSbAA16ExpectationStyleO_tF",
          "mangledName": "$s6Nimble15PredicateResultV9toBoolean11expectationSbAA16ExpectationStyleO_tF",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "toObjectiveC",
          "printedName": "toObjectiveC()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicateResult",
              "printedName": "Nimble.NMBPredicateResult",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicateResult"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble15PredicateResultV12toObjectiveCAA012NMBPredicateC0CyF",
          "mangledName": "$s6Nimble15PredicateResultV12toObjectiveCAA012NMBPredicateC0CyF",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        }
      ],
      "declKind": "Struct",
      "usr": "s:6Nimble15PredicateResultV",
      "mangledName": "$s6Nimble15PredicateResultV",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "PredicateStatus",
      "printedName": "PredicateStatus",
      "children": [
        {
          "kind": "Var",
          "name": "matches",
          "printedName": "matches",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.PredicateStatus.Type) -> Nimble.PredicateStatus",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "PredicateStatus",
                  "printedName": "Nimble.PredicateStatus",
                  "usr": "s:6Nimble15PredicateStatusO"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Metatype",
                  "printedName": "Nimble.PredicateStatus.Type",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "PredicateStatus",
                      "printedName": "Nimble.PredicateStatus",
                      "usr": "s:6Nimble15PredicateStatusO"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "EnumElement",
          "usr": "s:6Nimble15PredicateStatusO7matchesyA2CmF",
          "mangledName": "$s6Nimble15PredicateStatusO7matchesyA2CmF",
          "moduleName": "Nimble",
          "declAttributes": [
            "RawDocComment"
          ],
          "fixedbinaryorder": 0
        },
        {
          "kind": "Var",
          "name": "doesNotMatch",
          "printedName": "doesNotMatch",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.PredicateStatus.Type) -> Nimble.PredicateStatus",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "PredicateStatus",
                  "printedName": "Nimble.PredicateStatus",
                  "usr": "s:6Nimble15PredicateStatusO"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Metatype",
                  "printedName": "Nimble.PredicateStatus.Type",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "PredicateStatus",
                      "printedName": "Nimble.PredicateStatus",
                      "usr": "s:6Nimble15PredicateStatusO"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "EnumElement",
          "usr": "s:6Nimble15PredicateStatusO12doesNotMatchyA2CmF",
          "mangledName": "$s6Nimble15PredicateStatusO12doesNotMatchyA2CmF",
          "moduleName": "Nimble",
          "declAttributes": [
            "RawDocComment"
          ],
          "fixedbinaryorder": 1
        },
        {
          "kind": "Var",
          "name": "fail",
          "printedName": "fail",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.PredicateStatus.Type) -> Nimble.PredicateStatus",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "PredicateStatus",
                  "printedName": "Nimble.PredicateStatus",
                  "usr": "s:6Nimble15PredicateStatusO"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Metatype",
                  "printedName": "Nimble.PredicateStatus.Type",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "PredicateStatus",
                      "printedName": "Nimble.PredicateStatus",
                      "usr": "s:6Nimble15PredicateStatusO"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "EnumElement",
          "usr": "s:6Nimble15PredicateStatusO4failyA2CmF",
          "mangledName": "$s6Nimble15PredicateStatusO4failyA2CmF",
          "moduleName": "Nimble",
          "declAttributes": [
            "RawDocComment"
          ],
          "fixedbinaryorder": 2
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(bool:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "PredicateStatus",
              "printedName": "Nimble.PredicateStatus",
              "usr": "s:6Nimble15PredicateStatusO"
            },
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble15PredicateStatusO4boolACSb_tcfc",
          "mangledName": "$s6Nimble15PredicateStatusO4boolACSb_tcfc",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Function",
          "name": "toBoolean",
          "printedName": "toBoolean(expectation:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "ExpectationStyle",
              "printedName": "Nimble.ExpectationStyle",
              "usr": "s:6Nimble16ExpectationStyleO"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble15PredicateStatusO9toBoolean11expectationSbAA16ExpectationStyleO_tF",
          "mangledName": "$s6Nimble15PredicateStatusO9toBoolean11expectationSbAA16ExpectationStyleO_tF",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl",
            "RawDocComment"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "__derived_enum_equals",
          "printedName": "__derived_enum_equals(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "PredicateStatus",
              "printedName": "Nimble.PredicateStatus",
              "usr": "s:6Nimble15PredicateStatusO"
            },
            {
              "kind": "TypeNominal",
              "name": "PredicateStatus",
              "printedName": "Nimble.PredicateStatus",
              "usr": "s:6Nimble15PredicateStatusO"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble15PredicateStatusO21__derived_enum_equalsySbAC_ACtFZ",
          "mangledName": "$s6Nimble15PredicateStatusO21__derived_enum_equalsySbAC_ACtFZ",
          "moduleName": "Nimble",
          "static": true,
          "implicit": true,
          "declAttributes": [
            "Implements"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Var",
          "name": "hashValue",
          "printedName": "hashValue",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble15PredicateStatusO9hashValueSivp",
          "mangledName": "$s6Nimble15PredicateStatusO9hashValueSivp",
          "moduleName": "Nimble",
          "implicit": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble15PredicateStatusO9hashValueSivg",
              "mangledName": "$s6Nimble15PredicateStatusO9hashValueSivg",
              "moduleName": "Nimble",
              "implicit": true,
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Function",
          "name": "hash",
          "printedName": "hash(into:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Hasher",
              "printedName": "Swift.Hasher",
              "paramValueOwnership": "InOut",
              "usr": "s:s6HasherV"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble15PredicateStatusO4hash4intoys6HasherVz_tF",
          "mangledName": "$s6Nimble15PredicateStatusO4hash4intoys6HasherVz_tF",
          "moduleName": "Nimble",
          "implicit": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "toObjectiveC",
          "printedName": "toObjectiveC()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicateStatus",
              "printedName": "Nimble.NMBPredicateStatus",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble15PredicateStatusO12toObjectiveCAA012NMBPredicateC0CyF",
          "mangledName": "$s6Nimble15PredicateStatusO12toObjectiveCAA012NMBPredicateC0CyF",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        }
      ],
      "declKind": "Enum",
      "usr": "s:6Nimble15PredicateStatusO",
      "mangledName": "$s6Nimble15PredicateStatusO",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "isEnumExhaustive": true,
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        }
      ]
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "TypeDecl",
      "name": "NMBPredicate",
      "printedName": "NMBPredicate",
      "children": [
        {
          "kind": "Var",
          "name": "predicate",
          "printedName": "predicate",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.Expression<ObjectiveC.NSObject>) throws -> Nimble.NMBPredicateResult",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NMBPredicateResult",
                  "printedName": "Nimble.NMBPredicateResult",
                  "usr": "c:@M@Nimble@objc(cs)NMBPredicateResult"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Expression",
                  "printedName": "Nimble.Expression<ObjectiveC.NSObject>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "NSObject",
                      "printedName": "ObjectiveC.NSObject",
                      "usr": "c:objc(cs)NSObject"
                    }
                  ],
                  "usr": "s:6Nimble10ExpressionV"
                }
              ]
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble12NMBPredicateC9predicate33_5F40AD2AE295C299D892363EA67C8826LLyAA0B6ResultCAA10ExpressionVySo8NSObjectCGKcvp",
          "mangledName": "$s6Nimble12NMBPredicateC9predicate33_5F40AD2AE295C299D892363EA67C8826LLyAA0B6ResultCAA10ExpressionVySo8NSObjectCGKcvp",
          "moduleName": "Nimble",
          "isInternal": true,
          "declAttributes": [
            "Final",
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 0,
          "isLet": true,
          "hasStorage": true
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(predicate:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicate",
              "printedName": "Nimble.NMBPredicate",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
            },
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.Expression<ObjectiveC.NSObject>) throws -> Nimble.NMBPredicateResult",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NMBPredicateResult",
                  "printedName": "Nimble.NMBPredicateResult",
                  "usr": "c:@M@Nimble@objc(cs)NMBPredicateResult"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Expression",
                  "printedName": "Nimble.Expression<ObjectiveC.NSObject>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "NSObject",
                      "printedName": "ObjectiveC.NSObject",
                      "usr": "c:objc(cs)NSObject"
                    }
                  ],
                  "usr": "s:6Nimble10ExpressionV"
                }
              ]
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble12NMBPredicateC9predicateAcA0B6ResultCAA10ExpressionVySo8NSObjectCGKc_tcfc",
          "mangledName": "$s6Nimble12NMBPredicateC9predicateAcA0B6ResultCAA10ExpressionVySo8NSObjectCGKc_tcfc",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Function",
          "name": "satisfies",
          "printedName": "satisfies(_:location:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicateResult",
              "printedName": "Nimble.NMBPredicateResult",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicateResult"
            },
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "() throws -> ObjectiveC.NSObject?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Optional",
                  "printedName": "ObjectiveC.NSObject?",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "NSObject",
                      "printedName": "ObjectiveC.NSObject",
                      "usr": "c:objc(cs)NSObject"
                    }
                  ],
                  "usr": "s:Sq"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ]
            },
            {
              "kind": "TypeNominal",
              "name": "SourceLocation",
              "printedName": "Nimble.SourceLocation",
              "usr": "c:@M@Nimble@objc(cs)SourceLocation"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble12NMBPredicateC9satisfies_8locationAA0B6ResultCSo8NSObjectCSgyKc_AA14SourceLocationCtF",
          "mangledName": "$s6Nimble12NMBPredicateC9satisfies_8locationAA0B6ResultCSo8NSObjectCSgyKc_AA14SourceLocationCtF",
          "moduleName": "Nimble",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicate",
              "printedName": "Nimble.NMBPredicate",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
            }
          ],
          "declKind": "Constructor",
          "usr": "c:@M@Nimble@objc(cs)NMBPredicate(im)init",
          "mangledName": "$s6Nimble12NMBPredicateCACycfc",
          "moduleName": "Nimble",
          "overriding": true,
          "implicit": true,
          "objc_name": "init",
          "declAttributes": [
            "Dynamic",
            "ObjC",
            "Override"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Function",
          "name": "allPassMatcher",
          "printedName": "allPassMatcher(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicate",
              "printedName": "Nimble.NMBPredicate",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
            },
            {
              "kind": "TypeNominal",
              "name": "NMBPredicate",
              "printedName": "Nimble.NMBPredicate",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
            }
          ],
          "declKind": "Func",
          "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)allPassMatcher:",
          "mangledName": "$s6Nimble12NMBPredicateC14allPassMatcheryA2CFZ",
          "moduleName": "Nimble",
          "static": true,
          "isOpen": true,
          "declAttributes": [
            "Dynamic",
            "AccessControl",
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "beAKindOfMatcher",
          "printedName": "beAKindOfMatcher(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicate",
              "printedName": "Nimble.NMBPredicate",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
            },
            {
              "kind": "TypeNominal",
              "name": "ExistentialMetatype",
              "printedName": "AnyObject.Type",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ProtocolComposition",
                  "printedName": "AnyObject"
                }
              ]
            }
          ],
          "declKind": "Func",
          "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)beAKindOfMatcher:",
          "mangledName": "$s6Nimble12NMBPredicateC16beAKindOfMatcheryACyXlXpFZ",
          "moduleName": "Nimble",
          "static": true,
          "isOpen": true,
          "declAttributes": [
            "Dynamic",
            "AccessControl",
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "beAnInstanceOfMatcher",
          "printedName": "beAnInstanceOfMatcher(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicate",
              "printedName": "Nimble.NMBPredicate",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
            },
            {
              "kind": "TypeNominal",
              "name": "ExistentialMetatype",
              "printedName": "AnyObject.Type",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ProtocolComposition",
                  "printedName": "AnyObject"
                }
              ]
            }
          ],
          "declKind": "Func",
          "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)beAnInstanceOfMatcher:",
          "mangledName": "$s6Nimble12NMBPredicateC21beAnInstanceOfMatcheryACyXlXpFZ",
          "moduleName": "Nimble",
          "static": true,
          "isOpen": true,
          "declAttributes": [
            "Dynamic",
            "AccessControl",
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "beCloseToMatcher",
          "printedName": "beCloseToMatcher(_:within:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBObjCBeCloseToPredicate",
              "printedName": "Nimble.NMBObjCBeCloseToPredicate",
              "usr": "c:@M@Nimble@objc(cs)NMBObjCBeCloseToPredicate"
            },
            {
              "kind": "TypeNominal",
              "name": "NSNumber",
              "printedName": "Foundation.NSNumber",
              "usr": "c:objc(cs)NSNumber"
            },
            {
              "kind": "TypeNominal",
              "name": "Double",
              "printedName": "Swift.Double",
              "usr": "s:Sd"
            }
          ],
          "declKind": "Func",
          "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)beCloseToMatcher:within:",
          "mangledName": "$s6Nimble12NMBPredicateC16beCloseToMatcher_6withinAA09NMBObjCBedE9PredicateCSo8NSNumberC_SdtFZ",
          "moduleName": "Nimble",
          "static": true,
          "isOpen": true,
          "declAttributes": [
            "Dynamic",
            "AccessControl",
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "beEmptyMatcher",
          "printedName": "beEmptyMatcher()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicate",
              "printedName": "Nimble.NMBPredicate",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
            }
          ],
          "declKind": "Func",
          "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)beEmptyMatcher",
          "mangledName": "$s6Nimble12NMBPredicateC14beEmptyMatcherACyFZ",
          "moduleName": "Nimble",
          "static": true,
          "isOpen": true,
          "declAttributes": [
            "Dynamic",
            "AccessControl",
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "beginWithMatcher",
          "printedName": "beginWithMatcher(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicate",
              "printedName": "Nimble.NMBPredicate",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
            },
            {
              "kind": "TypeNominal",
              "name": "ProtocolComposition",
              "printedName": "Any"
            }
          ],
          "declKind": "Func",
          "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)beginWithMatcher:",
          "mangledName": "$s6Nimble12NMBPredicateC16beginWithMatcheryACypFZ",
          "moduleName": "Nimble",
          "static": true,
          "isOpen": true,
          "declAttributes": [
            "Dynamic",
            "AccessControl",
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "beGreaterThanMatcher",
          "printedName": "beGreaterThanMatcher(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicate",
              "printedName": "Nimble.NMBPredicate",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "Nimble.NMBComparable?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NMBComparable",
                  "printedName": "Nimble.NMBComparable",
                  "usr": "c:@M@Nimble@objc(pl)NMBComparable"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)beGreaterThanMatcher:",
          "mangledName": "$s6Nimble12NMBPredicateC20beGreaterThanMatcheryAcA13NMBComparable_pSgFZ",
          "moduleName": "Nimble",
          "static": true,
          "isOpen": true,
          "declAttributes": [
            "Dynamic",
            "AccessControl",
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "beGreaterThanOrEqualToMatcher",
          "printedName": "beGreaterThanOrEqualToMatcher(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicate",
              "printedName": "Nimble.NMBPredicate",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "Nimble.NMBComparable?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NMBComparable",
                  "printedName": "Nimble.NMBComparable",
                  "usr": "c:@M@Nimble@objc(pl)NMBComparable"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)beGreaterThanOrEqualToMatcher:",
          "mangledName": "$s6Nimble12NMBPredicateC29beGreaterThanOrEqualToMatcheryAcA13NMBComparable_pSgFZ",
          "moduleName": "Nimble",
          "static": true,
          "isOpen": true,
          "declAttributes": [
            "Dynamic",
            "AccessControl",
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "beIdenticalToMatcher",
          "printedName": "beIdenticalToMatcher(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicate",
              "printedName": "Nimble.NMBPredicate",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "ObjectiveC.NSObject?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NSObject",
                  "printedName": "ObjectiveC.NSObject",
                  "usr": "c:objc(cs)NSObject"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)beIdenticalToMatcher:",
          "mangledName": "$s6Nimble12NMBPredicateC20beIdenticalToMatcheryACSo8NSObjectCSgFZ",
          "moduleName": "Nimble",
          "static": true,
          "isOpen": true,
          "declAttributes": [
            "Dynamic",
            "AccessControl",
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "beLessThanMatcher",
          "printedName": "beLessThanMatcher(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicate",
              "printedName": "Nimble.NMBPredicate",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "Nimble.NMBComparable?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NMBComparable",
                  "printedName": "Nimble.NMBComparable",
                  "usr": "c:@M@Nimble@objc(pl)NMBComparable"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)beLessThanMatcher:",
          "mangledName": "$s6Nimble12NMBPredicateC17beLessThanMatcheryAcA13NMBComparable_pSgFZ",
          "moduleName": "Nimble",
          "static": true,
          "isOpen": true,
          "declAttributes": [
            "Dynamic",
            "AccessControl",
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "beLessThanOrEqualToMatcher",
          "printedName": "beLessThanOrEqualToMatcher(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicate",
              "printedName": "Nimble.NMBPredicate",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "Nimble.NMBComparable?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NMBComparable",
                  "printedName": "Nimble.NMBComparable",
                  "usr": "c:@M@Nimble@objc(pl)NMBComparable"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)beLessThanOrEqualToMatcher:",
          "mangledName": "$s6Nimble12NMBPredicateC26beLessThanOrEqualToMatcheryAcA13NMBComparable_pSgFZ",
          "moduleName": "Nimble",
          "static": true,
          "isOpen": true,
          "declAttributes": [
            "Dynamic",
            "AccessControl",
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "beTruthyMatcher",
          "printedName": "beTruthyMatcher()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicate",
              "printedName": "Nimble.NMBPredicate",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
            }
          ],
          "declKind": "Func",
          "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)beTruthyMatcher",
          "mangledName": "$s6Nimble12NMBPredicateC15beTruthyMatcherACyFZ",
          "moduleName": "Nimble",
          "static": true,
          "isOpen": true,
          "declAttributes": [
            "Dynamic",
            "AccessControl",
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "beFalsyMatcher",
          "printedName": "beFalsyMatcher()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicate",
              "printedName": "Nimble.NMBPredicate",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
            }
          ],
          "declKind": "Func",
          "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)beFalsyMatcher",
          "mangledName": "$s6Nimble12NMBPredicateC14beFalsyMatcherACyFZ",
          "moduleName": "Nimble",
          "static": true,
          "isOpen": true,
          "declAttributes": [
            "Dynamic",
            "AccessControl",
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "beTrueMatcher",
          "printedName": "beTrueMatcher()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicate",
              "printedName": "Nimble.NMBPredicate",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
            }
          ],
          "declKind": "Func",
          "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)beTrueMatcher",
          "mangledName": "$s6Nimble12NMBPredicateC13beTrueMatcherACyFZ",
          "moduleName": "Nimble",
          "static": true,
          "isOpen": true,
          "declAttributes": [
            "Dynamic",
            "AccessControl",
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "beFalseMatcher",
          "printedName": "beFalseMatcher()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicate",
              "printedName": "Nimble.NMBPredicate",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
            }
          ],
          "declKind": "Func",
          "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)beFalseMatcher",
          "mangledName": "$s6Nimble12NMBPredicateC14beFalseMatcherACyFZ",
          "moduleName": "Nimble",
          "static": true,
          "isOpen": true,
          "declAttributes": [
            "Dynamic",
            "AccessControl",
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "beNilMatcher",
          "printedName": "beNilMatcher()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicate",
              "printedName": "Nimble.NMBPredicate",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
            }
          ],
          "declKind": "Func",
          "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)beNilMatcher",
          "mangledName": "$s6Nimble12NMBPredicateC12beNilMatcherACyFZ",
          "moduleName": "Nimble",
          "static": true,
          "isOpen": true,
          "declAttributes": [
            "Dynamic",
            "AccessControl",
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "containMatcher",
          "printedName": "containMatcher(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicate",
              "printedName": "Nimble.NMBPredicate",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[ObjectiveC.NSObject]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NSObject",
                  "printedName": "ObjectiveC.NSObject",
                  "usr": "c:objc(cs)NSObject"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)containMatcher:",
          "mangledName": "$s6Nimble12NMBPredicateC14containMatcheryACSaySo8NSObjectCGFZ",
          "moduleName": "Nimble",
          "static": true,
          "isOpen": true,
          "declAttributes": [
            "Dynamic",
            "AccessControl",
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "containElementSatisfyingMatcher",
          "printedName": "containElementSatisfyingMatcher(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicate",
              "printedName": "Nimble.NMBPredicate",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
            },
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(ObjectiveC.NSObject) -> Swift.Bool",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Bool",
                  "printedName": "Swift.Bool",
                  "usr": "s:Sb"
                },
                {
                  "kind": "TypeNominal",
                  "name": "NSObject",
                  "printedName": "ObjectiveC.NSObject",
                  "usr": "c:objc(cs)NSObject"
                }
              ]
            }
          ],
          "declKind": "Func",
          "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)containElementSatisfyingMatcher:",
          "mangledName": "$s6Nimble12NMBPredicateC31containElementSatisfyingMatcheryACSbSo8NSObjectCcFZ",
          "moduleName": "Nimble",
          "static": true,
          "isOpen": true,
          "declAttributes": [
            "Dynamic",
            "AccessControl",
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "endWithMatcher",
          "printedName": "endWithMatcher(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicate",
              "printedName": "Nimble.NMBPredicate",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
            },
            {
              "kind": "TypeNominal",
              "name": "ProtocolComposition",
              "printedName": "Any"
            }
          ],
          "declKind": "Func",
          "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)endWithMatcher:",
          "mangledName": "$s6Nimble12NMBPredicateC14endWithMatcheryACypFZ",
          "moduleName": "Nimble",
          "static": true,
          "isOpen": true,
          "declAttributes": [
            "Dynamic",
            "AccessControl",
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "equalMatcher",
          "printedName": "equalMatcher(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicate",
              "printedName": "Nimble.NMBPredicate",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
            },
            {
              "kind": "TypeNominal",
              "name": "NSObject",
              "printedName": "ObjectiveC.NSObject",
              "usr": "c:objc(cs)NSObject"
            }
          ],
          "declKind": "Func",
          "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)equalMatcher:",
          "mangledName": "$s6Nimble12NMBPredicateC12equalMatcheryACSo8NSObjectCFZ",
          "moduleName": "Nimble",
          "static": true,
          "isOpen": true,
          "declAttributes": [
            "Dynamic",
            "AccessControl",
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "haveCountMatcher",
          "printedName": "haveCountMatcher(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicate",
              "printedName": "Nimble.NMBPredicate",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
            },
            {
              "kind": "TypeNominal",
              "name": "NSNumber",
              "printedName": "Foundation.NSNumber",
              "usr": "c:objc(cs)NSNumber"
            }
          ],
          "declKind": "Func",
          "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)haveCountMatcher:",
          "mangledName": "$s6Nimble12NMBPredicateC16haveCountMatcheryACSo8NSNumberCFZ",
          "moduleName": "Nimble",
          "static": true,
          "isOpen": true,
          "declAttributes": [
            "Dynamic",
            "AccessControl",
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "matchMatcher",
          "printedName": "matchMatcher(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicate",
              "printedName": "Nimble.NMBPredicate",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
            },
            {
              "kind": "TypeNominal",
              "name": "NSString",
              "printedName": "Foundation.NSString",
              "usr": "c:objc(cs)NSString"
            }
          ],
          "declKind": "Func",
          "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)matchMatcher:",
          "mangledName": "$s6Nimble12NMBPredicateC12matchMatcheryACSo8NSStringCFZ",
          "moduleName": "Nimble",
          "static": true,
          "isOpen": true,
          "declAttributes": [
            "Dynamic",
            "AccessControl",
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "raiseExceptionMatcher",
          "printedName": "raiseExceptionMatcher()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBObjCRaiseExceptionPredicate",
              "printedName": "Nimble.NMBObjCRaiseExceptionPredicate",
              "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate"
            }
          ],
          "declKind": "Func",
          "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)raiseExceptionMatcher",
          "mangledName": "$s6Nimble12NMBPredicateC21raiseExceptionMatcherAA012NMBObjCRaiseD9PredicateCyFZ",
          "moduleName": "Nimble",
          "static": true,
          "isOpen": true,
          "declAttributes": [
            "Dynamic",
            "AccessControl",
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "satisfyAllOfMatcher",
          "printedName": "satisfyAllOfMatcher(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicate",
              "printedName": "Nimble.NMBPredicate",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Nimble.NMBPredicate]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NMBPredicate",
                  "printedName": "Nimble.NMBPredicate",
                  "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)satisfyAllOfMatcher:",
          "mangledName": "$s6Nimble12NMBPredicateC19satisfyAllOfMatcheryACSayACGFZ",
          "moduleName": "Nimble",
          "static": true,
          "isOpen": true,
          "declAttributes": [
            "Dynamic",
            "AccessControl",
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "satisfyAnyOfMatcher",
          "printedName": "satisfyAnyOfMatcher(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicate",
              "printedName": "Nimble.NMBPredicate",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Nimble.NMBPredicate]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NMBPredicate",
                  "printedName": "Nimble.NMBPredicate",
                  "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)satisfyAnyOfMatcher:",
          "mangledName": "$s6Nimble12NMBPredicateC19satisfyAnyOfMatcheryACSayACGFZ",
          "moduleName": "Nimble",
          "static": true,
          "isOpen": true,
          "declAttributes": [
            "Dynamic",
            "AccessControl",
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        }
      ],
      "declKind": "Class",
      "usr": "c:@M@Nimble@objc(cs)NMBPredicate",
      "mangledName": "$s6Nimble12NMBPredicateC",
      "moduleName": "Nimble",
      "isOpen": true,
      "declAttributes": [
        "AccessControl",
        "ObjC"
      ],
      "superclassUsr": "c:objc(cs)NSObject",
      "superclassNames": [
        "ObjectiveC.NSObject"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObservingPublishing",
          "printedName": "_KeyValueCodingAndObservingPublishing",
          "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
          "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObserving",
          "printedName": "_KeyValueCodingAndObserving",
          "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
          "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "NMBPredicateResult",
      "printedName": "NMBPredicateResult",
      "children": [
        {
          "kind": "Var",
          "name": "status",
          "printedName": "status",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicateStatus",
              "printedName": "Nimble.NMBPredicateStatus",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble18NMBPredicateResultC6statusAA0B6StatusCvp",
          "mangledName": "$s6Nimble18NMBPredicateResultC6statusAA0B6StatusCvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "Final",
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 0,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NMBPredicateStatus",
                  "printedName": "Nimble.NMBPredicateStatus",
                  "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble18NMBPredicateResultC6statusAA0B6StatusCvg",
              "mangledName": "$s6Nimble18NMBPredicateResultC6statusAA0B6StatusCvg",
              "moduleName": "Nimble",
              "implicit": true,
              "declAttributes": [
                "Final"
              ],
              "accessorKind": "get"
            },
            {
              "kind": "Accessor",
              "name": "Set",
              "printedName": "Set()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "NMBPredicateStatus",
                  "printedName": "Nimble.NMBPredicateStatus",
                  "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble18NMBPredicateResultC6statusAA0B6StatusCvs",
              "mangledName": "$s6Nimble18NMBPredicateResultC6statusAA0B6StatusCvs",
              "moduleName": "Nimble",
              "implicit": true,
              "declAttributes": [
                "Final"
              ],
              "accessorKind": "set"
            },
            {
              "kind": "Accessor",
              "name": "Modify",
              "printedName": "Modify()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble18NMBPredicateResultC6statusAA0B6StatusCvM",
              "mangledName": "$s6Nimble18NMBPredicateResultC6statusAA0B6StatusCvM",
              "moduleName": "Nimble",
              "implicit": true,
              "declAttributes": [
                "Final"
              ],
              "accessorKind": "_modify"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "message",
          "printedName": "message",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBExpectationMessage",
              "printedName": "Nimble.NMBExpectationMessage",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble18NMBPredicateResultC7messageAA21NMBExpectationMessageCvp",
          "mangledName": "$s6Nimble18NMBPredicateResultC7messageAA21NMBExpectationMessageCvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "Final",
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 1,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NMBExpectationMessage",
                  "printedName": "Nimble.NMBExpectationMessage",
                  "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble18NMBPredicateResultC7messageAA21NMBExpectationMessageCvg",
              "mangledName": "$s6Nimble18NMBPredicateResultC7messageAA21NMBExpectationMessageCvg",
              "moduleName": "Nimble",
              "implicit": true,
              "declAttributes": [
                "Final"
              ],
              "accessorKind": "get"
            },
            {
              "kind": "Accessor",
              "name": "Set",
              "printedName": "Set()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "NMBExpectationMessage",
                  "printedName": "Nimble.NMBExpectationMessage",
                  "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble18NMBPredicateResultC7messageAA21NMBExpectationMessageCvs",
              "mangledName": "$s6Nimble18NMBPredicateResultC7messageAA21NMBExpectationMessageCvs",
              "moduleName": "Nimble",
              "implicit": true,
              "declAttributes": [
                "Final"
              ],
              "accessorKind": "set"
            },
            {
              "kind": "Accessor",
              "name": "Modify",
              "printedName": "Modify()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble18NMBPredicateResultC7messageAA21NMBExpectationMessageCvM",
              "mangledName": "$s6Nimble18NMBPredicateResultC7messageAA21NMBExpectationMessageCvM",
              "moduleName": "Nimble",
              "implicit": true,
              "declAttributes": [
                "Final"
              ],
              "accessorKind": "_modify"
            }
          ]
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(status:message:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicateResult",
              "printedName": "Nimble.NMBPredicateResult",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicateResult"
            },
            {
              "kind": "TypeNominal",
              "name": "NMBPredicateStatus",
              "printedName": "Nimble.NMBPredicateStatus",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus"
            },
            {
              "kind": "TypeNominal",
              "name": "NMBExpectationMessage",
              "printedName": "Nimble.NMBExpectationMessage",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble18NMBPredicateResultC6status7messageAcA0B6StatusC_AA21NMBExpectationMessageCtcfc",
          "mangledName": "$s6Nimble18NMBPredicateResultC6status7messageAcA0B6StatusC_AA21NMBExpectationMessageCtcfc",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(bool:message:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicateResult",
              "printedName": "Nimble.NMBPredicateResult",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicateResult"
            },
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "NMBExpectationMessage",
              "printedName": "Nimble.NMBExpectationMessage",
              "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble18NMBPredicateResultC4bool7messageACSb_AA21NMBExpectationMessageCtcfc",
          "mangledName": "$s6Nimble18NMBPredicateResultC4bool7messageACSb_AA21NMBExpectationMessageCtcfc",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Function",
          "name": "toSwift",
          "printedName": "toSwift()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "PredicateResult",
              "printedName": "Nimble.PredicateResult",
              "usr": "s:6Nimble15PredicateResultV"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble18NMBPredicateResultC7toSwiftAA09PredicateC0VyF",
          "mangledName": "$s6Nimble18NMBPredicateResultC7toSwiftAA09PredicateC0VyF",
          "moduleName": "Nimble",
          "declAttributes": [
            "Final",
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicateResult",
              "printedName": "Nimble.NMBPredicateResult",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicateResult"
            }
          ],
          "declKind": "Constructor",
          "usr": "c:@M@Nimble@objc(cs)NMBPredicateResult(im)init",
          "mangledName": "$s6Nimble18NMBPredicateResultCACycfc",
          "moduleName": "Nimble",
          "overriding": true,
          "implicit": true,
          "objc_name": "init",
          "declAttributes": [
            "Dynamic",
            "ObjC",
            "Override"
          ],
          "init_kind": "Designated"
        }
      ],
      "declKind": "Class",
      "usr": "c:@M@Nimble@objc(cs)NMBPredicateResult",
      "mangledName": "$s6Nimble18NMBPredicateResultC",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "Final",
        "ObjC"
      ],
      "superclassUsr": "c:objc(cs)NSObject",
      "superclassNames": [
        "ObjectiveC.NSObject"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObservingPublishing",
          "printedName": "_KeyValueCodingAndObservingPublishing",
          "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
          "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObserving",
          "printedName": "_KeyValueCodingAndObserving",
          "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
          "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "NMBPredicateStatus",
      "printedName": "NMBPredicateStatus",
      "children": [
        {
          "kind": "Var",
          "name": "status",
          "printedName": "status",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble18NMBPredicateStatusC6status33_5F40AD2AE295C299D892363EA67C8826LLSivp",
          "mangledName": "$s6Nimble18NMBPredicateStatusC6status33_5F40AD2AE295C299D892363EA67C8826LLSivp",
          "moduleName": "Nimble",
          "isInternal": true,
          "declAttributes": [
            "Final",
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 0,
          "isLet": true,
          "hasStorage": true
        },
        {
          "kind": "Var",
          "name": "matches",
          "printedName": "matches",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicateStatus",
              "printedName": "Nimble.NMBPredicateStatus",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble18NMBPredicateStatusC7matchesACvpZ",
          "mangledName": "$s6Nimble18NMBPredicateStatusC7matchesACvpZ",
          "moduleName": "Nimble",
          "static": true,
          "declAttributes": [
            "HasInitialValue",
            "Final",
            "HasStorage",
            "AccessControl"
          ],
          "isLet": true,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NMBPredicateStatus",
                  "printedName": "Nimble.NMBPredicateStatus",
                  "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble18NMBPredicateStatusC7matchesACvgZ",
              "mangledName": "$s6Nimble18NMBPredicateStatusC7matchesACvgZ",
              "moduleName": "Nimble",
              "static": true,
              "implicit": true,
              "declAttributes": [
                "Final"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "doesNotMatch",
          "printedName": "doesNotMatch",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicateStatus",
              "printedName": "Nimble.NMBPredicateStatus",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble18NMBPredicateStatusC12doesNotMatchACvpZ",
          "mangledName": "$s6Nimble18NMBPredicateStatusC12doesNotMatchACvpZ",
          "moduleName": "Nimble",
          "static": true,
          "declAttributes": [
            "HasInitialValue",
            "Final",
            "HasStorage",
            "AccessControl"
          ],
          "isLet": true,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NMBPredicateStatus",
                  "printedName": "Nimble.NMBPredicateStatus",
                  "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble18NMBPredicateStatusC12doesNotMatchACvgZ",
              "mangledName": "$s6Nimble18NMBPredicateStatusC12doesNotMatchACvgZ",
              "moduleName": "Nimble",
              "static": true,
              "implicit": true,
              "declAttributes": [
                "Final"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "fail",
          "printedName": "fail",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicateStatus",
              "printedName": "Nimble.NMBPredicateStatus",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble18NMBPredicateStatusC4failACvpZ",
          "mangledName": "$s6Nimble18NMBPredicateStatusC4failACvpZ",
          "moduleName": "Nimble",
          "static": true,
          "declAttributes": [
            "HasInitialValue",
            "Final",
            "HasStorage",
            "AccessControl"
          ],
          "isLet": true,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NMBPredicateStatus",
                  "printedName": "Nimble.NMBPredicateStatus",
                  "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble18NMBPredicateStatusC4failACvgZ",
              "mangledName": "$s6Nimble18NMBPredicateStatusC4failACvgZ",
              "moduleName": "Nimble",
              "static": true,
              "implicit": true,
              "declAttributes": [
                "Final"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "hash",
          "printedName": "hash",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Var",
          "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus(py)hash",
          "mangledName": "$s6Nimble18NMBPredicateStatusC4hashSivp",
          "moduleName": "Nimble",
          "overriding": true,
          "objc_name": "hash",
          "declAttributes": [
            "Final",
            "ObjC",
            "Override",
            "AccessControl"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "declKind": "Accessor",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus(im)hash",
              "mangledName": "$s6Nimble18NMBPredicateStatusC4hashSivg",
              "moduleName": "Nimble",
              "overriding": true,
              "objc_name": "hash",
              "declAttributes": [
                "Final",
                "ObjC"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Function",
          "name": "isEqual",
          "printedName": "isEqual(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "Any?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ProtocolComposition",
                  "printedName": "Any"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus(im)isEqual:",
          "mangledName": "$s6Nimble18NMBPredicateStatusC7isEqualySbypSgF",
          "moduleName": "Nimble",
          "overriding": true,
          "objc_name": "isEqual:",
          "declAttributes": [
            "Final",
            "ObjC",
            "Override",
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "from",
          "printedName": "from(status:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicateStatus",
              "printedName": "Nimble.NMBPredicateStatus",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus"
            },
            {
              "kind": "TypeNominal",
              "name": "PredicateStatus",
              "printedName": "Nimble.PredicateStatus",
              "usr": "s:6Nimble15PredicateStatusO"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble18NMBPredicateStatusC4from6statusAcA09PredicateC0O_tFZ",
          "mangledName": "$s6Nimble18NMBPredicateStatusC4from6statusAcA09PredicateC0O_tFZ",
          "moduleName": "Nimble",
          "static": true,
          "declAttributes": [
            "Final",
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "from",
          "printedName": "from(bool:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicateStatus",
              "printedName": "Nimble.NMBPredicateStatus",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus"
            },
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble18NMBPredicateStatusC4from4boolACSb_tFZ",
          "mangledName": "$s6Nimble18NMBPredicateStatusC4from4boolACSb_tFZ",
          "moduleName": "Nimble",
          "static": true,
          "declAttributes": [
            "Final",
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "toSwift",
          "printedName": "toSwift()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "PredicateStatus",
              "printedName": "Nimble.PredicateStatus",
              "usr": "s:6Nimble15PredicateStatusO"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Nimble18NMBPredicateStatusC7toSwiftAA09PredicateC0OyF",
          "mangledName": "$s6Nimble18NMBPredicateStatusC7toSwiftAA09PredicateC0OyF",
          "moduleName": "Nimble",
          "declAttributes": [
            "Final",
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBPredicateStatus",
              "printedName": "Nimble.NMBPredicateStatus",
              "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus"
            }
          ],
          "declKind": "Constructor",
          "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus(im)init",
          "mangledName": "$s6Nimble18NMBPredicateStatusCACycfc",
          "moduleName": "Nimble",
          "overriding": true,
          "implicit": true,
          "objc_name": "init",
          "declAttributes": [
            "Dynamic",
            "ObjC",
            "Override"
          ],
          "init_kind": "Designated"
        }
      ],
      "declKind": "Class",
      "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus",
      "mangledName": "$s6Nimble18NMBPredicateStatusC",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "Final",
        "ObjC"
      ],
      "superclassUsr": "c:objc(cs)NSObject",
      "hasMissingDesignatedInitializers": true,
      "superclassNames": [
        "ObjectiveC.NSObject"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObservingPublishing",
          "printedName": "_KeyValueCodingAndObservingPublishing",
          "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
          "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObserving",
          "printedName": "_KeyValueCodingAndObserving",
          "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
          "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        }
      ]
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Function",
      "name": "raiseException",
      "printedName": "raiseException(named:reason:userInfo:closure:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "Foundation.NSExceptionName?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NSExceptionName",
              "printedName": "Foundation.NSExceptionName",
              "usr": "c:@T@NSExceptionName"
            }
          ],
          "hasDefaultArg": true,
          "usr": "s:Sq"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "Swift.String?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "hasDefaultArg": true,
          "usr": "s:Sq"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "Foundation.NSDictionary?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NSDictionary",
              "printedName": "Foundation.NSDictionary",
              "usr": "c:objc(cs)NSDictionary"
            }
          ],
          "hasDefaultArg": true,
          "usr": "s:Sq"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "((Foundation.NSException) -> ())?",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Foundation.NSException) -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "NSException",
                  "printedName": "Foundation.NSException",
                  "usr": "c:objc(cs)NSException"
                }
              ]
            }
          ],
          "hasDefaultArg": true,
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble14raiseException5named6reason8userInfo7closureAA9PredicateVyxGSo15NSExceptionNameaSg_SSSgSo12NSDictionaryCSgySo0J0CcSgtlF",
      "mangledName": "$s6Nimble14raiseException5named6reason8userInfo7closureAA9PredicateVyxGSo15NSExceptionNameaSg_SSSgSo12NSDictionaryCSgySo0J0CcSgtlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<Out>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "raiseException",
      "printedName": "raiseException(named:reason:userInfo:closure:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "Swift.String?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "usr": "s:Sq"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "Swift.String?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "hasDefaultArg": true,
          "usr": "s:Sq"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "Foundation.NSDictionary?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NSDictionary",
              "printedName": "Foundation.NSDictionary",
              "usr": "c:objc(cs)NSDictionary"
            }
          ],
          "hasDefaultArg": true,
          "usr": "s:Sq"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "((Foundation.NSException) -> ())?",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Foundation.NSException) -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "NSException",
                  "printedName": "Foundation.NSException",
                  "usr": "c:objc(cs)NSException"
                }
              ]
            }
          ],
          "hasDefaultArg": true,
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble14raiseException5named6reason8userInfo7closureAA9PredicateVyxGSSSg_AJSo12NSDictionaryCSgySo11NSExceptionCcSgtlF",
      "mangledName": "$s6Nimble14raiseException5named6reason8userInfo7closureAA9PredicateVyxGSSSg_AJSo12NSDictionaryCSgySo11NSExceptionCcSgtlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<Out>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "messageForException",
      "printedName": "messageForException(exception:named:reason:userInfo:closure:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "ExpectationMessage",
          "printedName": "Nimble.ExpectationMessage",
          "usr": "s:6Nimble18ExpectationMessageO"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "Foundation.NSException?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NSException",
              "printedName": "Foundation.NSException",
              "usr": "c:objc(cs)NSException"
            }
          ],
          "usr": "s:Sq"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "Swift.String?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "usr": "s:Sq"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "Swift.String?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "usr": "s:Sq"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "Foundation.NSDictionary?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NSDictionary",
              "printedName": "Foundation.NSDictionary",
              "usr": "c:objc(cs)NSDictionary"
            }
          ],
          "usr": "s:Sq"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "((Foundation.NSException) -> ())?",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Foundation.NSException) -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "NSException",
                  "printedName": "Foundation.NSException",
                  "usr": "c:objc(cs)NSException"
                }
              ]
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble19messageForException9exception5named6reason8userInfo7closureAA18ExpectationMessageOSo11NSExceptionCSg_SSSgAMSo12NSDictionaryCSgyAKcSgtF",
      "mangledName": "$s6Nimble19messageForException9exception5named6reason8userInfo7closureAA18ExpectationMessageOSo11NSExceptionCSg_SSSgAMSo12NSDictionaryCSgyAKcSgtF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "exceptionMatchesNonNilFieldsOrClosure",
      "printedName": "exceptionMatchesNonNilFieldsOrClosure(_:named:reason:userInfo:closure:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Bool",
          "printedName": "Swift.Bool",
          "usr": "s:Sb"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "Foundation.NSException?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NSException",
              "printedName": "Foundation.NSException",
              "usr": "c:objc(cs)NSException"
            }
          ],
          "usr": "s:Sq"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "Swift.String?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "usr": "s:Sq"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "Swift.String?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "usr": "s:Sq"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "Foundation.NSDictionary?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NSDictionary",
              "printedName": "Foundation.NSDictionary",
              "usr": "c:objc(cs)NSDictionary"
            }
          ],
          "usr": "s:Sq"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "((Foundation.NSException) -> ())?",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Foundation.NSException) -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "NSException",
                  "printedName": "Foundation.NSException",
                  "usr": "c:objc(cs)NSException"
                }
              ]
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble37exceptionMatchesNonNilFieldsOrClosure_5named6reason8userInfo7closureSbSo11NSExceptionCSg_SSSgAJSo12NSDictionaryCSgyAHcSgtF",
      "mangledName": "$s6Nimble37exceptionMatchesNonNilFieldsOrClosure_5named6reason8userInfo7closureSbSo11NSExceptionCSg_SSSgAJSo12NSDictionaryCSgyAHcSgtF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "TypeDecl",
      "name": "NMBObjCRaiseExceptionPredicate",
      "printedName": "NMBObjCRaiseExceptionPredicate",
      "children": [
        {
          "kind": "Var",
          "name": "_name",
          "printedName": "_name",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "Swift.String?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble30NMBObjCRaiseExceptionPredicateC5_name33_E29837F0481BA336B3BC318D00C5BD95LLSSSgvp",
          "mangledName": "$s6Nimble30NMBObjCRaiseExceptionPredicateC5_name33_E29837F0481BA336B3BC318D00C5BD95LLSSSgvp",
          "moduleName": "Nimble",
          "isInternal": true,
          "declAttributes": [
            "Final",
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 0,
          "isLet": true,
          "hasStorage": true
        },
        {
          "kind": "Var",
          "name": "_reason",
          "printedName": "_reason",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "Swift.String?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble30NMBObjCRaiseExceptionPredicateC7_reason33_E29837F0481BA336B3BC318D00C5BD95LLSSSgvp",
          "mangledName": "$s6Nimble30NMBObjCRaiseExceptionPredicateC7_reason33_E29837F0481BA336B3BC318D00C5BD95LLSSSgvp",
          "moduleName": "Nimble",
          "isInternal": true,
          "declAttributes": [
            "Final",
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 1,
          "isLet": true,
          "hasStorage": true
        },
        {
          "kind": "Var",
          "name": "_userInfo",
          "printedName": "_userInfo",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "Foundation.NSDictionary?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NSDictionary",
                  "printedName": "Foundation.NSDictionary",
                  "usr": "c:objc(cs)NSDictionary"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble30NMBObjCRaiseExceptionPredicateC9_userInfo33_E29837F0481BA336B3BC318D00C5BD95LLSo12NSDictionaryCSgvp",
          "mangledName": "$s6Nimble30NMBObjCRaiseExceptionPredicateC9_userInfo33_E29837F0481BA336B3BC318D00C5BD95LLSo12NSDictionaryCSgvp",
          "moduleName": "Nimble",
          "isInternal": true,
          "declAttributes": [
            "Final",
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 2,
          "isLet": true,
          "hasStorage": true
        },
        {
          "kind": "Var",
          "name": "_block",
          "printedName": "_block",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "((Foundation.NSException) -> ())?",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Foundation.NSException) -> ()",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Void",
                      "printedName": "()"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "NSException",
                      "printedName": "Foundation.NSException",
                      "usr": "c:objc(cs)NSException"
                    }
                  ]
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble30NMBObjCRaiseExceptionPredicateC6_block33_E29837F0481BA336B3BC318D00C5BD95LLySo11NSExceptionCcSgvp",
          "mangledName": "$s6Nimble30NMBObjCRaiseExceptionPredicateC6_block33_E29837F0481BA336B3BC318D00C5BD95LLySo11NSExceptionCcSgvp",
          "moduleName": "Nimble",
          "isInternal": true,
          "declAttributes": [
            "Final",
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 3,
          "isLet": true,
          "hasStorage": true
        },
        {
          "kind": "Var",
          "name": "named",
          "printedName": "named",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Swift.String) -> Nimble.NMBObjCRaiseExceptionPredicate",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NMBObjCRaiseExceptionPredicate",
                  "printedName": "Nimble.NMBObjCRaiseExceptionPredicate",
                  "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate"
                },
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ]
            }
          ],
          "declKind": "Var",
          "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate(py)named",
          "mangledName": "$s6Nimble30NMBObjCRaiseExceptionPredicateC5namedyACSScvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl",
            "ObjC"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Swift.String) -> Nimble.NMBObjCRaiseExceptionPredicate",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "NMBObjCRaiseExceptionPredicate",
                      "printedName": "Nimble.NMBObjCRaiseExceptionPredicate",
                      "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "String",
                      "printedName": "Swift.String",
                      "usr": "s:SS"
                    }
                  ]
                }
              ],
              "declKind": "Accessor",
              "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate(im)named",
              "mangledName": "$s6Nimble30NMBObjCRaiseExceptionPredicateC5namedyACSScvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "declAttributes": [
                "ObjC"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "reason",
          "printedName": "reason",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Swift.String?) -> Nimble.NMBObjCRaiseExceptionPredicate",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NMBObjCRaiseExceptionPredicate",
                  "printedName": "Nimble.NMBObjCRaiseExceptionPredicate",
                  "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Optional",
                  "printedName": "Swift.String?",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "String",
                      "printedName": "Swift.String",
                      "usr": "s:SS"
                    }
                  ],
                  "usr": "s:Sq"
                }
              ]
            }
          ],
          "declKind": "Var",
          "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate(py)reason",
          "mangledName": "$s6Nimble30NMBObjCRaiseExceptionPredicateC6reasonyACSSSgcvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl",
            "ObjC"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Swift.String?) -> Nimble.NMBObjCRaiseExceptionPredicate",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "NMBObjCRaiseExceptionPredicate",
                      "printedName": "Nimble.NMBObjCRaiseExceptionPredicate",
                      "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "Optional",
                      "printedName": "Swift.String?",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "String",
                          "printedName": "Swift.String",
                          "usr": "s:SS"
                        }
                      ],
                      "usr": "s:Sq"
                    }
                  ]
                }
              ],
              "declKind": "Accessor",
              "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate(im)reason",
              "mangledName": "$s6Nimble30NMBObjCRaiseExceptionPredicateC6reasonyACSSSgcvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "declAttributes": [
                "ObjC"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "userInfo",
          "printedName": "userInfo",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Foundation.NSDictionary?) -> Nimble.NMBObjCRaiseExceptionPredicate",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NMBObjCRaiseExceptionPredicate",
                  "printedName": "Nimble.NMBObjCRaiseExceptionPredicate",
                  "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Optional",
                  "printedName": "Foundation.NSDictionary?",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "NSDictionary",
                      "printedName": "Foundation.NSDictionary",
                      "usr": "c:objc(cs)NSDictionary"
                    }
                  ],
                  "usr": "s:Sq"
                }
              ]
            }
          ],
          "declKind": "Var",
          "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate(py)userInfo",
          "mangledName": "$s6Nimble30NMBObjCRaiseExceptionPredicateC8userInfoyACSo12NSDictionaryCSgcvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl",
            "ObjC"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Foundation.NSDictionary?) -> Nimble.NMBObjCRaiseExceptionPredicate",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "NMBObjCRaiseExceptionPredicate",
                      "printedName": "Nimble.NMBObjCRaiseExceptionPredicate",
                      "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "Optional",
                      "printedName": "Foundation.NSDictionary?",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "NSDictionary",
                          "printedName": "Foundation.NSDictionary",
                          "usr": "c:objc(cs)NSDictionary"
                        }
                      ],
                      "usr": "s:Sq"
                    }
                  ]
                }
              ],
              "declKind": "Accessor",
              "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate(im)userInfo",
              "mangledName": "$s6Nimble30NMBObjCRaiseExceptionPredicateC8userInfoyACSo12NSDictionaryCSgcvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "declAttributes": [
                "ObjC"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "satisfyingBlock",
          "printedName": "satisfyingBlock",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(((Foundation.NSException) -> ())?) -> Nimble.NMBObjCRaiseExceptionPredicate",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NMBObjCRaiseExceptionPredicate",
                  "printedName": "Nimble.NMBObjCRaiseExceptionPredicate",
                  "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Optional",
                  "printedName": "((Foundation.NSException) -> ())?",
                  "children": [
                    {
                      "kind": "TypeFunc",
                      "name": "Function",
                      "printedName": "(Foundation.NSException) -> ()",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "Void",
                          "printedName": "()"
                        },
                        {
                          "kind": "TypeNominal",
                          "name": "NSException",
                          "printedName": "Foundation.NSException",
                          "usr": "c:objc(cs)NSException"
                        }
                      ]
                    }
                  ],
                  "usr": "s:Sq"
                }
              ]
            }
          ],
          "declKind": "Var",
          "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate(py)satisfyingBlock",
          "mangledName": "$s6Nimble30NMBObjCRaiseExceptionPredicateC15satisfyingBlockyACySo11NSExceptionCcSgcvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl",
            "ObjC"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(((Foundation.NSException) -> ())?) -> Nimble.NMBObjCRaiseExceptionPredicate",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "NMBObjCRaiseExceptionPredicate",
                      "printedName": "Nimble.NMBObjCRaiseExceptionPredicate",
                      "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "Optional",
                      "printedName": "((Foundation.NSException) -> ())?",
                      "children": [
                        {
                          "kind": "TypeFunc",
                          "name": "Function",
                          "printedName": "(Foundation.NSException) -> ()",
                          "children": [
                            {
                              "kind": "TypeNominal",
                              "name": "Void",
                              "printedName": "()"
                            },
                            {
                              "kind": "TypeNominal",
                              "name": "NSException",
                              "printedName": "Foundation.NSException",
                              "usr": "c:objc(cs)NSException"
                            }
                          ]
                        }
                      ],
                      "usr": "s:Sq"
                    }
                  ]
                }
              ],
              "declKind": "Accessor",
              "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate(im)satisfyingBlock",
              "mangledName": "$s6Nimble30NMBObjCRaiseExceptionPredicateC15satisfyingBlockyACySo11NSExceptionCcSgcvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "declAttributes": [
                "ObjC"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(predicate:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBObjCRaiseExceptionPredicate",
              "printedName": "Nimble.NMBObjCRaiseExceptionPredicate",
              "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate"
            },
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.Expression<ObjectiveC.NSObject>) throws -> Nimble.NMBPredicateResult",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NMBPredicateResult",
                  "printedName": "Nimble.NMBPredicateResult",
                  "usr": "c:@M@Nimble@objc(cs)NMBPredicateResult"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Expression",
                  "printedName": "Nimble.Expression<ObjectiveC.NSObject>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "NSObject",
                      "printedName": "ObjectiveC.NSObject",
                      "usr": "c:objc(cs)NSObject"
                    }
                  ],
                  "usr": "s:6Nimble10ExpressionV"
                }
              ]
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble30NMBObjCRaiseExceptionPredicateC9predicateAcA18NMBPredicateResultCAA10ExpressionVySo8NSObjectCGKc_tcfc",
          "mangledName": "$s6Nimble30NMBObjCRaiseExceptionPredicateC9predicateAcA18NMBPredicateResultCAA10ExpressionVySo8NSObjectCGKc_tcfc",
          "moduleName": "Nimble",
          "overriding": true,
          "implicit": true,
          "declAttributes": [
            "Override"
          ],
          "init_kind": "Designated"
        }
      ],
      "declKind": "Class",
      "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate",
      "mangledName": "$s6Nimble30NMBObjCRaiseExceptionPredicateC",
      "moduleName": "Nimble",
      "isOpen": true,
      "declAttributes": [
        "AccessControl",
        "ObjC"
      ],
      "superclassUsr": "c:@M@Nimble@objc(cs)NMBPredicate",
      "hasMissingDesignatedInitializers": true,
      "superclassNames": [
        "Nimble.NMBPredicate",
        "ObjectiveC.NSObject"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObservingPublishing",
          "printedName": "_KeyValueCodingAndObservingPublishing",
          "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
          "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObserving",
          "printedName": "_KeyValueCodingAndObserving",
          "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
          "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        }
      ]
    },
    {
      "kind": "Function",
      "name": "satisfyAllOf",
      "printedName": "satisfyAllOf(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Array",
          "printedName": "[Nimble.Predicate<τ_0_0>]",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Predicate",
              "printedName": "Nimble.Predicate<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble9PredicateV"
            }
          ],
          "usr": "s:Sa"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble12satisfyAllOfyAA9PredicateVyxGAEd_tlF",
      "mangledName": "$s6Nimble12satisfyAllOfyAA9PredicateVyxGAEd_tlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<T>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "satisfyAllOf",
      "printedName": "satisfyAllOf(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Array",
          "printedName": "[Nimble.Predicate<τ_0_0>]",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Predicate",
              "printedName": "Nimble.Predicate<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble9PredicateV"
            }
          ],
          "usr": "s:Sa"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble12satisfyAllOfyAA9PredicateVyxGSayAEGlF",
      "mangledName": "$s6Nimble12satisfyAllOfyAA9PredicateVyxGSayAEGlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<T>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "&&",
      "printedName": "&&(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2aaoiyAA9PredicateVyxGAE_AEtlF",
      "mangledName": "$s6Nimble2aaoiyAA9PredicateVyxGAE_AEtlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<T>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Function",
      "name": "satisfyAnyOf",
      "printedName": "satisfyAnyOf(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Array",
          "printedName": "[Nimble.Predicate<τ_0_0>]",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Predicate",
              "printedName": "Nimble.Predicate<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble9PredicateV"
            }
          ],
          "usr": "s:Sa"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble12satisfyAnyOfyAA9PredicateVyxGAEd_tlF",
      "mangledName": "$s6Nimble12satisfyAnyOfyAA9PredicateVyxGAEd_tlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<T>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "satisfyAnyOf",
      "printedName": "satisfyAnyOf(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Array",
          "printedName": "[Nimble.Predicate<τ_0_0>]",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Predicate",
              "printedName": "Nimble.Predicate<τ_0_0>",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ],
              "usr": "s:6Nimble9PredicateV"
            }
          ],
          "usr": "s:Sa"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble12satisfyAnyOfyAA9PredicateVyxGSayAEGlF",
      "mangledName": "$s6Nimble12satisfyAnyOfyAA9PredicateVyxGSayAEGlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<T>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "||",
      "printedName": "||(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble2oooiyAA9PredicateVyxGAE_AEtlF",
      "mangledName": "$s6Nimble2oooiyAA9PredicateVyxGAE_AEtlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<T>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "TypeDecl",
      "name": "SourceLocation",
      "printedName": "SourceLocation",
      "children": [
        {
          "kind": "Var",
          "name": "file",
          "printedName": "file",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble14SourceLocationC4fileSSvp",
          "mangledName": "$s6Nimble14SourceLocationC4fileSSvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "Final",
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 0,
          "isLet": true,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14SourceLocationC4fileSSvg",
              "mangledName": "$s6Nimble14SourceLocationC4fileSSvg",
              "moduleName": "Nimble",
              "implicit": true,
              "declAttributes": [
                "Final"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "line",
          "printedName": "line",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "UInt",
              "printedName": "Swift.UInt",
              "usr": "s:Su"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble14SourceLocationC4lineSuvp",
          "mangledName": "$s6Nimble14SourceLocationC4lineSuvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "Final",
            "HasStorage",
            "AccessControl"
          ],
          "fixedbinaryorder": 1,
          "isLet": true,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt",
                  "printedName": "Swift.UInt",
                  "usr": "s:Su"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble14SourceLocationC4lineSuvg",
              "mangledName": "$s6Nimble14SourceLocationC4lineSuvg",
              "moduleName": "Nimble",
              "implicit": true,
              "declAttributes": [
                "Final"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "SourceLocation",
              "printedName": "Nimble.SourceLocation",
              "usr": "c:@M@Nimble@objc(cs)SourceLocation"
            }
          ],
          "declKind": "Constructor",
          "usr": "c:@M@Nimble@objc(cs)SourceLocation(im)init",
          "mangledName": "$s6Nimble14SourceLocationCACycfc",
          "moduleName": "Nimble",
          "overriding": true,
          "objc_name": "init",
          "declAttributes": [
            "Dynamic",
            "ObjC",
            "Override"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(file:line:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "SourceLocation",
              "printedName": "Nimble.SourceLocation",
              "usr": "c:@M@Nimble@objc(cs)SourceLocation"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "UInt",
              "printedName": "Swift.UInt",
              "usr": "s:Su"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:6Nimble14SourceLocationC4file4lineACSS_Sutcfc",
          "mangledName": "$s6Nimble14SourceLocationC4file4lineACSS_Sutcfc",
          "moduleName": "Nimble",
          "init_kind": "Designated"
        },
        {
          "kind": "Var",
          "name": "description",
          "printedName": "description",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Var",
          "usr": "c:@M@Nimble@objc(cs)SourceLocation(py)description",
          "mangledName": "$s6Nimble14SourceLocationC11descriptionSSvp",
          "moduleName": "Nimble",
          "overriding": true,
          "objc_name": "description",
          "declAttributes": [
            "Final",
            "ObjC",
            "AccessControl",
            "Override"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "c:@M@Nimble@objc(cs)SourceLocation(im)description",
              "mangledName": "$s6Nimble14SourceLocationC11descriptionSSvg",
              "moduleName": "Nimble",
              "overriding": true,
              "objc_name": "description",
              "declAttributes": [
                "Final",
                "ObjC"
              ],
              "accessorKind": "get"
            }
          ]
        }
      ],
      "declKind": "Class",
      "usr": "c:@M@Nimble@objc(cs)SourceLocation",
      "mangledName": "$s6Nimble14SourceLocationC",
      "moduleName": "Nimble",
      "declAttributes": [
        "Final",
        "AccessControl",
        "ObjC"
      ],
      "superclassUsr": "c:objc(cs)NSObject",
      "hasMissingDesignatedInitializers": true,
      "inheritsConvenienceInitializers": true,
      "superclassNames": [
        "ObjectiveC.NSObject"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObservingPublishing",
          "printedName": "_KeyValueCodingAndObservingPublishing",
          "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
          "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObserving",
          "printedName": "_KeyValueCodingAndObserving",
          "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
          "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        }
      ]
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Nimble"
    },
    {
      "kind": "Function",
      "name": "identityAsString",
      "printedName": "identityAsString(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "String",
          "printedName": "Swift.String",
          "usr": "s:SS"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "Any?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "ProtocolComposition",
              "printedName": "Any"
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble16identityAsStringySSypSgF",
      "mangledName": "$s6Nimble16identityAsStringySSypSgF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "arrayAsString",
      "printedName": "arrayAsString(_:joiner:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "String",
          "printedName": "Swift.String",
          "usr": "s:SS"
        },
        {
          "kind": "TypeNominal",
          "name": "Array",
          "printedName": "[τ_0_0]",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:Sa"
        },
        {
          "kind": "TypeNominal",
          "name": "String",
          "printedName": "Swift.String",
          "hasDefaultArg": true,
          "usr": "s:SS"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble13arrayAsString_6joinerSSSayxG_SStlF",
      "mangledName": "$s6Nimble13arrayAsString_6joinerSSSayxG_SStlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<T>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "TypeDecl",
      "name": "TestOutputStringConvertible",
      "printedName": "TestOutputStringConvertible",
      "children": [
        {
          "kind": "Var",
          "name": "testDescription",
          "printedName": "testDescription",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Nimble27TestOutputStringConvertibleP15testDescriptionSSvp",
          "mangledName": "$s6Nimble27TestOutputStringConvertibleP15testDescriptionSSvp",
          "moduleName": "Nimble",
          "protocolReq": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Nimble27TestOutputStringConvertibleP15testDescriptionSSvg",
              "mangledName": "$s6Nimble27TestOutputStringConvertibleP15testDescriptionSSvg",
              "moduleName": "Nimble",
              "genericSig": "<τ_0_0 where τ_0_0 : Nimble.TestOutputStringConvertible>",
              "sugared_genericSig": "<Self where Self : Nimble.TestOutputStringConvertible>",
              "protocolReq": true,
              "reqNewWitnessTableEntry": true,
              "accessorKind": "get"
            }
          ]
        }
      ],
      "declKind": "Protocol",
      "usr": "s:6Nimble27TestOutputStringConvertibleP",
      "mangledName": "$s6Nimble27TestOutputStringConvertibleP",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ]
    },
    {
      "kind": "Function",
      "name": "stringify",
      "printedName": "stringify(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "String",
          "printedName": "Swift.String",
          "usr": "s:SS"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "τ_0_0?",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble9stringifyySSxSglF",
      "mangledName": "$s6Nimble9stringifyySSxSglF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<T>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "TypeDecl",
      "name": "NMBStringer",
      "printedName": "NMBStringer",
      "children": [
        {
          "kind": "Function",
          "name": "stringify",
          "printedName": "stringify(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "Any?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ProtocolComposition",
                  "printedName": "Any"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@Nimble@objc(cs)NMBStringer(cm)stringify:",
          "mangledName": "$s6Nimble11NMBStringerC9stringifyySSypSgFZ",
          "moduleName": "Nimble",
          "static": true,
          "isOpen": true,
          "declAttributes": [
            "AccessControl",
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "NMBStringer",
              "printedName": "Nimble.NMBStringer",
              "usr": "c:@M@Nimble@objc(cs)NMBStringer"
            }
          ],
          "declKind": "Constructor",
          "usr": "c:@M@Nimble@objc(cs)NMBStringer(im)init",
          "mangledName": "$s6Nimble11NMBStringerCACycfc",
          "moduleName": "Nimble",
          "overriding": true,
          "implicit": true,
          "objc_name": "init",
          "declAttributes": [
            "Dynamic",
            "ObjC",
            "Override"
          ],
          "init_kind": "Designated"
        }
      ],
      "declKind": "Class",
      "usr": "c:@M@Nimble@objc(cs)NMBStringer",
      "mangledName": "$s6Nimble11NMBStringerC",
      "moduleName": "Nimble",
      "isOpen": true,
      "declAttributes": [
        "AccessControl",
        "ObjC"
      ],
      "superclassUsr": "c:objc(cs)NSObject",
      "inheritsConvenienceInitializers": true,
      "superclassNames": [
        "ObjectiveC.NSObject"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObservingPublishing",
          "printedName": "_KeyValueCodingAndObservingPublishing",
          "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
          "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObserving",
          "printedName": "_KeyValueCodingAndObserving",
          "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
          "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        }
      ]
    },
    {
      "kind": "Function",
      "name": "prettyCollectionType",
      "printedName": "prettyCollectionType(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "String",
          "printedName": "Swift.String",
          "usr": "s:SS"
        },
        {
          "kind": "TypeNominal",
          "name": "GenericTypeParam",
          "printedName": "τ_0_0"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble20prettyCollectionTypeySSxlF",
      "mangledName": "$s6Nimble20prettyCollectionTypeySSxlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<T>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "prettyCollectionType",
      "printedName": "prettyCollectionType(_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "String",
          "printedName": "Swift.String",
          "usr": "s:SS"
        },
        {
          "kind": "TypeNominal",
          "name": "GenericTypeParam",
          "printedName": "τ_0_0"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble20prettyCollectionTypeySSxSlRzlF",
      "mangledName": "$s6Nimble20prettyCollectionTypeySSxSlRzlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0 where τ_0_0 : Swift.Collection>",
      "sugared_genericSig": "<T where T : Swift.Collection>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "throwAssertion",
      "printedName": "throwAssertion()",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble14throwAssertionAA9PredicateVyxGylF",
      "mangledName": "$s6Nimble14throwAssertionAA9PredicateVyxGylF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<Out>",
      "declAttributes": [
        "AccessControl"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "throwError",
      "printedName": "throwError()",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble10throwErrorAA9PredicateVyxGylF",
      "mangledName": "$s6Nimble10throwErrorAA9PredicateVyxGylF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<Out>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "throwError",
      "printedName": "throwError(_:closure:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_1>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_1"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "GenericTypeParam",
          "printedName": "τ_0_0"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "((Swift.Error) -> ())?",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Swift.Error) -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Error",
                  "printedName": "Swift.Error",
                  "usr": "s:s5ErrorP"
                }
              ]
            }
          ],
          "hasDefaultArg": true,
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble10throwError_7closureAA9PredicateVyq_Gx_ys0C0_pcSgtsAGRzr0_lF",
      "mangledName": "$s6Nimble10throwError_7closureAA9PredicateVyq_Gx_ys0C0_pcSgtsAGRzr0_lF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Error>",
      "sugared_genericSig": "<T, Out where T : Swift.Error>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "throwError",
      "printedName": "throwError(_:closure:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_1>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_1"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "GenericTypeParam",
          "printedName": "τ_0_0"
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "((τ_0_0) -> ())?",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(τ_0_0) -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ]
            }
          ],
          "hasDefaultArg": true,
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble10throwError_7closureAA9PredicateVyq_Gx_yxcSgtSQRzs0C0Rzr0_lF",
      "mangledName": "$s6Nimble10throwError_7closureAA9PredicateVyq_Gx_yxcSgtSQRzs0C0Rzr0_lF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Equatable, τ_0_0 : Swift.Error>",
      "sugared_genericSig": "<T, Out where T : Swift.Equatable, T : Swift.Error>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "throwError",
      "printedName": "throwError(errorType:closure:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_1>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_1"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeNominal",
          "name": "Metatype",
          "printedName": "τ_0_0.Type",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ]
        },
        {
          "kind": "TypeNominal",
          "name": "Optional",
          "printedName": "((τ_0_0) -> ())?",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(τ_0_0) -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ]
            }
          ],
          "hasDefaultArg": true,
          "usr": "s:Sq"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble10throwError9errorType7closureAA9PredicateVyq_Gxm_yxcSgts0C0Rzr0_lF",
      "mangledName": "$s6Nimble10throwError9errorType7closureAA9PredicateVyq_Gxm_yxcSgts0C0Rzr0_lF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Error>",
      "sugared_genericSig": "<T, Out where T : Swift.Error>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "throwError",
      "printedName": "throwError(closure:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_0>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeFunc",
          "name": "Function",
          "printedName": "(Swift.Error) -> ()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Error",
              "printedName": "Swift.Error",
              "usr": "s:s5ErrorP"
            }
          ]
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble10throwError7closureAA9PredicateVyxGys0C0_pc_tlF",
      "mangledName": "$s6Nimble10throwError7closureAA9PredicateVyxGys0C0_pc_tlF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<Out>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "throwError",
      "printedName": "throwError(closure:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<τ_0_1>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_1"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        },
        {
          "kind": "TypeFunc",
          "name": "Function",
          "printedName": "(τ_0_0) -> ()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            }
          ]
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble10throwError7closureAA9PredicateVyq_Gyxc_ts0C0Rzr0_lF",
      "mangledName": "$s6Nimble10throwError7closureAA9PredicateVyq_Gyxc_ts0C0Rzr0_lF",
      "moduleName": "Nimble",
      "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Error>",
      "sugared_genericSig": "<T, Out where T : Swift.Error>",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "TypeDecl",
      "name": "ToSucceedResult",
      "printedName": "ToSucceedResult",
      "children": [
        {
          "kind": "Var",
          "name": "succeeded",
          "printedName": "succeeded",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.ToSucceedResult.Type) -> Nimble.ToSucceedResult",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ToSucceedResult",
                  "printedName": "Nimble.ToSucceedResult",
                  "usr": "s:6Nimble15ToSucceedResultO"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Metatype",
                  "printedName": "Nimble.ToSucceedResult.Type",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "ToSucceedResult",
                      "printedName": "Nimble.ToSucceedResult",
                      "usr": "s:6Nimble15ToSucceedResultO"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "EnumElement",
          "usr": "s:6Nimble15ToSucceedResultO9succeededyA2CmF",
          "mangledName": "$s6Nimble15ToSucceedResultO9succeededyA2CmF",
          "moduleName": "Nimble",
          "fixedbinaryorder": 0
        },
        {
          "kind": "Var",
          "name": "failed",
          "printedName": "failed",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Nimble.ToSucceedResult.Type) -> (Swift.String) -> Nimble.ToSucceedResult",
              "children": [
                {
                  "kind": "TypeFunc",
                  "name": "Function",
                  "printedName": "(Swift.String) -> Nimble.ToSucceedResult",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "ToSucceedResult",
                      "printedName": "Nimble.ToSucceedResult",
                      "usr": "s:6Nimble15ToSucceedResultO"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "Tuple",
                      "printedName": "(reason: Swift.String)",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "String",
                          "printedName": "Swift.String",
                          "usr": "s:SS"
                        }
                      ]
                    }
                  ]
                },
                {
                  "kind": "TypeNominal",
                  "name": "Metatype",
                  "printedName": "Nimble.ToSucceedResult.Type",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "ToSucceedResult",
                      "printedName": "Nimble.ToSucceedResult",
                      "usr": "s:6Nimble15ToSucceedResultO"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "EnumElement",
          "usr": "s:6Nimble15ToSucceedResultO6failedyACSS_tcACmF",
          "mangledName": "$s6Nimble15ToSucceedResultO6failedyACSS_tcACmF",
          "moduleName": "Nimble",
          "fixedbinaryorder": 1
        }
      ],
      "declKind": "Enum",
      "usr": "s:6Nimble15ToSucceedResultO",
      "mangledName": "$s6Nimble15ToSucceedResultO",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "isEnumExhaustive": true
    },
    {
      "kind": "Function",
      "name": "succeed",
      "printedName": "succeed()",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Predicate",
          "printedName": "Nimble.Predicate<Nimble.ToSucceedResult>",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "ToSucceedResult",
              "printedName": "Nimble.ToSucceedResult",
              "usr": "s:6Nimble15ToSucceedResultO"
            }
          ],
          "usr": "s:6Nimble9PredicateV"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Nimble7succeedAA9PredicateVyAA15ToSucceedResultOGyF",
      "mangledName": "$s6Nimble7succeedAA9PredicateVyAA15ToSucceedResultOGyF",
      "moduleName": "Nimble",
      "declAttributes": [
        "AccessControl",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "TypeDecl",
      "name": "NMBExceptionCapture",
      "printedName": "NMBExceptionCapture",
      "children": [
        {
          "kind": "Function",
          "name": "tryBlockThrows",
          "printedName": "tryBlockThrows(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "() throws -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "typeAttributes": [
                "noescape"
              ]
            }
          ],
          "declKind": "Func",
          "usr": "s:So19NMBExceptionCaptureC6NimbleE14tryBlockThrowsyyyyKXEKF",
          "mangledName": "$sSo19NMBExceptionCaptureC6NimbleE14tryBlockThrowsyyyyKXEKF",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl"
          ],
          "throwing": true,
          "funcSelfKind": "NonMutating"
        }
      ],
      "declKind": "Class",
      "usr": "c:objc(cs)NMBExceptionCapture",
      "moduleName": "Nimble",
      "isOpen": true,
      "objc_name": "NMBExceptionCapture",
      "declAttributes": [
        "ObjC",
        "Dynamic"
      ],
      "superclassUsr": "c:objc(cs)NSObject",
      "isExternal": true,
      "inheritsConvenienceInitializers": true,
      "superclassNames": [
        "ObjectiveC.NSObject"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObservingPublishing",
          "printedName": "_KeyValueCodingAndObservingPublishing",
          "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
          "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObserving",
          "printedName": "_KeyValueCodingAndObserving",
          "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
          "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "Int8",
      "printedName": "Int8",
      "children": [
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(booleanLiteral:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int8",
              "printedName": "Swift.Int8",
              "usr": "s:s4Int8V"
            },
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:s4Int8V6NimbleE14booleanLiteralABSb_tcfc",
          "mangledName": "$ss4Int8V6NimbleE14booleanLiteralABSb_tcfc",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "init_kind": "Designated"
        }
      ],
      "declKind": "Struct",
      "usr": "s:s4Int8V",
      "mangledName": "$ss4Int8V",
      "moduleName": "Swift",
      "declAttributes": [
        "Frozen"
      ],
      "isExternal": true,
      "conformances": [
        {
          "kind": "Conformance",
          "name": "FixedWidthInteger",
          "printedName": "FixedWidthInteger",
          "usr": "s:s17FixedWidthIntegerP",
          "mangledName": "$ss17FixedWidthIntegerP"
        },
        {
          "kind": "Conformance",
          "name": "SignedInteger",
          "printedName": "SignedInteger",
          "usr": "s:SZ",
          "mangledName": "$sSZ"
        },
        {
          "kind": "Conformance",
          "name": "_ExpressibleByBuiltinIntegerLiteral",
          "printedName": "_ExpressibleByBuiltinIntegerLiteral",
          "usr": "s:s35_ExpressibleByBuiltinIntegerLiteralP",
          "mangledName": "$ss35_ExpressibleByBuiltinIntegerLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "BinaryInteger",
          "printedName": "BinaryInteger",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Words",
              "printedName": "Words",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Words",
                  "printedName": "Swift.Int8.Words",
                  "usr": "s:s4Int8V5WordsV"
                }
              ]
            }
          ],
          "usr": "s:Sz",
          "mangledName": "$sSz"
        },
        {
          "kind": "Conformance",
          "name": "LosslessStringConvertible",
          "printedName": "LosslessStringConvertible",
          "usr": "s:s25LosslessStringConvertibleP",
          "mangledName": "$ss25LosslessStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "SignedNumeric",
          "printedName": "SignedNumeric",
          "usr": "s:s13SignedNumericP",
          "mangledName": "$ss13SignedNumericP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "Numeric",
          "printedName": "Numeric",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Magnitude",
              "printedName": "Magnitude",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt8",
                  "printedName": "Swift.UInt8",
                  "usr": "s:s5UInt8V"
                }
              ]
            }
          ],
          "usr": "s:Sj",
          "mangledName": "$sSj"
        },
        {
          "kind": "Conformance",
          "name": "Strideable",
          "printedName": "Strideable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Stride",
              "printedName": "Stride",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ]
            }
          ],
          "usr": "s:Sx",
          "mangledName": "$sSx"
        },
        {
          "kind": "Conformance",
          "name": "AdditiveArithmetic",
          "printedName": "AdditiveArithmetic",
          "usr": "s:s18AdditiveArithmeticP",
          "mangledName": "$ss18AdditiveArithmeticP"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByIntegerLiteral",
          "printedName": "ExpressibleByIntegerLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "IntegerLiteralType",
              "printedName": "IntegerLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int8",
                  "printedName": "Swift.Int8",
                  "usr": "s:s4Int8V"
                }
              ]
            }
          ],
          "usr": "s:s27ExpressibleByIntegerLiteralP",
          "mangledName": "$ss27ExpressibleByIntegerLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "Comparable",
          "printedName": "Comparable",
          "usr": "s:SL",
          "mangledName": "$sSL"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByBooleanLiteral",
          "printedName": "ExpressibleByBooleanLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "BooleanLiteralType",
              "printedName": "BooleanLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Bool",
                  "printedName": "Swift.Bool",
                  "usr": "s:Sb"
                }
              ]
            }
          ],
          "usr": "s:s27ExpressibleByBooleanLiteralP",
          "mangledName": "$ss27ExpressibleByBooleanLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "Decodable",
          "printedName": "Decodable",
          "usr": "s:Se",
          "mangledName": "$sSe"
        },
        {
          "kind": "Conformance",
          "name": "Encodable",
          "printedName": "Encodable",
          "usr": "s:SE",
          "mangledName": "$sSE"
        },
        {
          "kind": "Conformance",
          "name": "CustomReflectable",
          "printedName": "CustomReflectable",
          "usr": "s:s17CustomReflectableP",
          "mangledName": "$ss17CustomReflectableP"
        },
        {
          "kind": "Conformance",
          "name": "_CustomPlaygroundQuickLookable",
          "printedName": "_CustomPlaygroundQuickLookable",
          "usr": "s:s30_CustomPlaygroundQuickLookableP",
          "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "_HasCustomAnyHashableRepresentation",
          "printedName": "_HasCustomAnyHashableRepresentation",
          "usr": "s:s35_HasCustomAnyHashableRepresentationP",
          "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
        },
        {
          "kind": "Conformance",
          "name": "Sendable",
          "printedName": "Sendable",
          "usr": "s:s8SendableP",
          "mangledName": "$ss8SendableP"
        },
        {
          "kind": "Conformance",
          "name": "SIMDScalar",
          "printedName": "SIMDScalar",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "SIMDMaskScalar",
              "printedName": "SIMDMaskScalar",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int8",
                  "printedName": "Swift.Int8",
                  "usr": "s:s4Int8V"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD2Storage",
              "printedName": "SIMD2Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD2Storage",
                  "printedName": "Swift.Int8.SIMD2Storage",
                  "usr": "s:s4Int8V12SIMD2StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD4Storage",
              "printedName": "SIMD4Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD4Storage",
                  "printedName": "Swift.Int8.SIMD4Storage",
                  "usr": "s:s4Int8V12SIMD4StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD8Storage",
              "printedName": "SIMD8Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD8Storage",
                  "printedName": "Swift.Int8.SIMD8Storage",
                  "usr": "s:s4Int8V12SIMD8StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD16Storage",
              "printedName": "SIMD16Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD16Storage",
                  "printedName": "Swift.Int8.SIMD16Storage",
                  "usr": "s:s4Int8V13SIMD16StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD32Storage",
              "printedName": "SIMD32Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD32Storage",
                  "printedName": "Swift.Int8.SIMD32Storage",
                  "usr": "s:s4Int8V13SIMD32StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD64Storage",
              "printedName": "SIMD64Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD64Storage",
                  "printedName": "Swift.Int8.SIMD64Storage",
                  "usr": "s:s4Int8V13SIMD64StorageV"
                }
              ]
            }
          ],
          "usr": "s:s10SIMDScalarP",
          "mangledName": "$ss10SIMDScalarP"
        },
        {
          "kind": "Conformance",
          "name": "_ObjectiveCBridgeable",
          "printedName": "_ObjectiveCBridgeable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "_ObjectiveCType",
              "printedName": "_ObjectiveCType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NSNumber",
                  "printedName": "Foundation.NSNumber",
                  "usr": "c:objc(cs)NSNumber"
                }
              ]
            }
          ],
          "usr": "s:s21_ObjectiveCBridgeableP",
          "mangledName": "$ss21_ObjectiveCBridgeableP"
        },
        {
          "kind": "Conformance",
          "name": "_FormatSpecifiable",
          "printedName": "_FormatSpecifiable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "_Arg",
              "printedName": "_Arg",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int32",
                  "printedName": "Swift.Int32",
                  "usr": "s:s5Int32V"
                }
              ]
            }
          ],
          "usr": "s:10Foundation18_FormatSpecifiableP",
          "mangledName": "$s10Foundation18_FormatSpecifiableP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "UInt8",
      "printedName": "UInt8",
      "children": [
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(booleanLiteral:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "UInt8",
              "printedName": "Swift.UInt8",
              "usr": "s:s5UInt8V"
            },
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:s5UInt8V6NimbleE14booleanLiteralABSb_tcfc",
          "mangledName": "$ss5UInt8V6NimbleE14booleanLiteralABSb_tcfc",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "init_kind": "Designated"
        }
      ],
      "declKind": "Struct",
      "usr": "s:s5UInt8V",
      "mangledName": "$ss5UInt8V",
      "moduleName": "Swift",
      "declAttributes": [
        "Frozen"
      ],
      "isExternal": true,
      "conformances": [
        {
          "kind": "Conformance",
          "name": "FixedWidthInteger",
          "printedName": "FixedWidthInteger",
          "usr": "s:s17FixedWidthIntegerP",
          "mangledName": "$ss17FixedWidthIntegerP"
        },
        {
          "kind": "Conformance",
          "name": "UnsignedInteger",
          "printedName": "UnsignedInteger",
          "usr": "s:SU",
          "mangledName": "$sSU"
        },
        {
          "kind": "Conformance",
          "name": "_ExpressibleByBuiltinIntegerLiteral",
          "printedName": "_ExpressibleByBuiltinIntegerLiteral",
          "usr": "s:s35_ExpressibleByBuiltinIntegerLiteralP",
          "mangledName": "$ss35_ExpressibleByBuiltinIntegerLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "BinaryInteger",
          "printedName": "BinaryInteger",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Words",
              "printedName": "Words",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Words",
                  "printedName": "Swift.UInt8.Words",
                  "usr": "s:s5UInt8V5WordsV"
                }
              ]
            }
          ],
          "usr": "s:Sz",
          "mangledName": "$sSz"
        },
        {
          "kind": "Conformance",
          "name": "LosslessStringConvertible",
          "printedName": "LosslessStringConvertible",
          "usr": "s:s25LosslessStringConvertibleP",
          "mangledName": "$ss25LosslessStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "Numeric",
          "printedName": "Numeric",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Magnitude",
              "printedName": "Magnitude",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt8",
                  "printedName": "Swift.UInt8",
                  "usr": "s:s5UInt8V"
                }
              ]
            }
          ],
          "usr": "s:Sj",
          "mangledName": "$sSj"
        },
        {
          "kind": "Conformance",
          "name": "Strideable",
          "printedName": "Strideable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Stride",
              "printedName": "Stride",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ]
            }
          ],
          "usr": "s:Sx",
          "mangledName": "$sSx"
        },
        {
          "kind": "Conformance",
          "name": "AdditiveArithmetic",
          "printedName": "AdditiveArithmetic",
          "usr": "s:s18AdditiveArithmeticP",
          "mangledName": "$ss18AdditiveArithmeticP"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByIntegerLiteral",
          "printedName": "ExpressibleByIntegerLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "IntegerLiteralType",
              "printedName": "IntegerLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt8",
                  "printedName": "Swift.UInt8",
                  "usr": "s:s5UInt8V"
                }
              ]
            }
          ],
          "usr": "s:s27ExpressibleByIntegerLiteralP",
          "mangledName": "$ss27ExpressibleByIntegerLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "Comparable",
          "printedName": "Comparable",
          "usr": "s:SL",
          "mangledName": "$sSL"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByBooleanLiteral",
          "printedName": "ExpressibleByBooleanLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "BooleanLiteralType",
              "printedName": "BooleanLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Bool",
                  "printedName": "Swift.Bool",
                  "usr": "s:Sb"
                }
              ]
            }
          ],
          "usr": "s:s27ExpressibleByBooleanLiteralP",
          "mangledName": "$ss27ExpressibleByBooleanLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "Decodable",
          "printedName": "Decodable",
          "usr": "s:Se",
          "mangledName": "$sSe"
        },
        {
          "kind": "Conformance",
          "name": "Encodable",
          "printedName": "Encodable",
          "usr": "s:SE",
          "mangledName": "$sSE"
        },
        {
          "kind": "Conformance",
          "name": "CustomReflectable",
          "printedName": "CustomReflectable",
          "usr": "s:s17CustomReflectableP",
          "mangledName": "$ss17CustomReflectableP"
        },
        {
          "kind": "Conformance",
          "name": "_CustomPlaygroundQuickLookable",
          "printedName": "_CustomPlaygroundQuickLookable",
          "usr": "s:s30_CustomPlaygroundQuickLookableP",
          "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
        },
        {
          "kind": "Conformance",
          "name": "_StringElement",
          "printedName": "_StringElement",
          "usr": "s:s14_StringElementP",
          "mangledName": "$ss14_StringElementP"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "_HasCustomAnyHashableRepresentation",
          "printedName": "_HasCustomAnyHashableRepresentation",
          "usr": "s:s35_HasCustomAnyHashableRepresentationP",
          "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
        },
        {
          "kind": "Conformance",
          "name": "Sendable",
          "printedName": "Sendable",
          "usr": "s:s8SendableP",
          "mangledName": "$ss8SendableP"
        },
        {
          "kind": "Conformance",
          "name": "SIMDScalar",
          "printedName": "SIMDScalar",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "SIMDMaskScalar",
              "printedName": "SIMDMaskScalar",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int8",
                  "printedName": "Swift.Int8",
                  "usr": "s:s4Int8V"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD2Storage",
              "printedName": "SIMD2Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD2Storage",
                  "printedName": "Swift.UInt8.SIMD2Storage",
                  "usr": "s:s5UInt8V12SIMD2StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD4Storage",
              "printedName": "SIMD4Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD4Storage",
                  "printedName": "Swift.UInt8.SIMD4Storage",
                  "usr": "s:s5UInt8V12SIMD4StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD8Storage",
              "printedName": "SIMD8Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD8Storage",
                  "printedName": "Swift.UInt8.SIMD8Storage",
                  "usr": "s:s5UInt8V12SIMD8StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD16Storage",
              "printedName": "SIMD16Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD16Storage",
                  "printedName": "Swift.UInt8.SIMD16Storage",
                  "usr": "s:s5UInt8V13SIMD16StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD32Storage",
              "printedName": "SIMD32Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD32Storage",
                  "printedName": "Swift.UInt8.SIMD32Storage",
                  "usr": "s:s5UInt8V13SIMD32StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD64Storage",
              "printedName": "SIMD64Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD64Storage",
                  "printedName": "Swift.UInt8.SIMD64Storage",
                  "usr": "s:s5UInt8V13SIMD64StorageV"
                }
              ]
            }
          ],
          "usr": "s:s10SIMDScalarP",
          "mangledName": "$ss10SIMDScalarP"
        },
        {
          "kind": "Conformance",
          "name": "_ObjectiveCBridgeable",
          "printedName": "_ObjectiveCBridgeable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "_ObjectiveCType",
              "printedName": "_ObjectiveCType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NSNumber",
                  "printedName": "Foundation.NSNumber",
                  "usr": "c:objc(cs)NSNumber"
                }
              ]
            }
          ],
          "usr": "s:s21_ObjectiveCBridgeableP",
          "mangledName": "$ss21_ObjectiveCBridgeableP"
        },
        {
          "kind": "Conformance",
          "name": "_FormatSpecifiable",
          "printedName": "_FormatSpecifiable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "_Arg",
              "printedName": "_Arg",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt32",
                  "printedName": "Swift.UInt32",
                  "usr": "s:s6UInt32V"
                }
              ]
            }
          ],
          "usr": "s:10Foundation18_FormatSpecifiableP",
          "mangledName": "$s10Foundation18_FormatSpecifiableP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "Int16",
      "printedName": "Int16",
      "children": [
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(booleanLiteral:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int16",
              "printedName": "Swift.Int16",
              "usr": "s:s5Int16V"
            },
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:s5Int16V6NimbleE14booleanLiteralABSb_tcfc",
          "mangledName": "$ss5Int16V6NimbleE14booleanLiteralABSb_tcfc",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "init_kind": "Designated"
        }
      ],
      "declKind": "Struct",
      "usr": "s:s5Int16V",
      "mangledName": "$ss5Int16V",
      "moduleName": "Swift",
      "declAttributes": [
        "Frozen"
      ],
      "isExternal": true,
      "conformances": [
        {
          "kind": "Conformance",
          "name": "FixedWidthInteger",
          "printedName": "FixedWidthInteger",
          "usr": "s:s17FixedWidthIntegerP",
          "mangledName": "$ss17FixedWidthIntegerP"
        },
        {
          "kind": "Conformance",
          "name": "SignedInteger",
          "printedName": "SignedInteger",
          "usr": "s:SZ",
          "mangledName": "$sSZ"
        },
        {
          "kind": "Conformance",
          "name": "_ExpressibleByBuiltinIntegerLiteral",
          "printedName": "_ExpressibleByBuiltinIntegerLiteral",
          "usr": "s:s35_ExpressibleByBuiltinIntegerLiteralP",
          "mangledName": "$ss35_ExpressibleByBuiltinIntegerLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "BinaryInteger",
          "printedName": "BinaryInteger",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Words",
              "printedName": "Words",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Words",
                  "printedName": "Swift.Int16.Words",
                  "usr": "s:s5Int16V5WordsV"
                }
              ]
            }
          ],
          "usr": "s:Sz",
          "mangledName": "$sSz"
        },
        {
          "kind": "Conformance",
          "name": "LosslessStringConvertible",
          "printedName": "LosslessStringConvertible",
          "usr": "s:s25LosslessStringConvertibleP",
          "mangledName": "$ss25LosslessStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "SignedNumeric",
          "printedName": "SignedNumeric",
          "usr": "s:s13SignedNumericP",
          "mangledName": "$ss13SignedNumericP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "Numeric",
          "printedName": "Numeric",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Magnitude",
              "printedName": "Magnitude",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt16",
                  "printedName": "Swift.UInt16",
                  "usr": "s:s6UInt16V"
                }
              ]
            }
          ],
          "usr": "s:Sj",
          "mangledName": "$sSj"
        },
        {
          "kind": "Conformance",
          "name": "Strideable",
          "printedName": "Strideable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Stride",
              "printedName": "Stride",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ]
            }
          ],
          "usr": "s:Sx",
          "mangledName": "$sSx"
        },
        {
          "kind": "Conformance",
          "name": "AdditiveArithmetic",
          "printedName": "AdditiveArithmetic",
          "usr": "s:s18AdditiveArithmeticP",
          "mangledName": "$ss18AdditiveArithmeticP"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByIntegerLiteral",
          "printedName": "ExpressibleByIntegerLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "IntegerLiteralType",
              "printedName": "IntegerLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int16",
                  "printedName": "Swift.Int16",
                  "usr": "s:s5Int16V"
                }
              ]
            }
          ],
          "usr": "s:s27ExpressibleByIntegerLiteralP",
          "mangledName": "$ss27ExpressibleByIntegerLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "Comparable",
          "printedName": "Comparable",
          "usr": "s:SL",
          "mangledName": "$sSL"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByBooleanLiteral",
          "printedName": "ExpressibleByBooleanLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "BooleanLiteralType",
              "printedName": "BooleanLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Bool",
                  "printedName": "Swift.Bool",
                  "usr": "s:Sb"
                }
              ]
            }
          ],
          "usr": "s:s27ExpressibleByBooleanLiteralP",
          "mangledName": "$ss27ExpressibleByBooleanLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "Decodable",
          "printedName": "Decodable",
          "usr": "s:Se",
          "mangledName": "$sSe"
        },
        {
          "kind": "Conformance",
          "name": "Encodable",
          "printedName": "Encodable",
          "usr": "s:SE",
          "mangledName": "$sSE"
        },
        {
          "kind": "Conformance",
          "name": "CustomReflectable",
          "printedName": "CustomReflectable",
          "usr": "s:s17CustomReflectableP",
          "mangledName": "$ss17CustomReflectableP"
        },
        {
          "kind": "Conformance",
          "name": "_CustomPlaygroundQuickLookable",
          "printedName": "_CustomPlaygroundQuickLookable",
          "usr": "s:s30_CustomPlaygroundQuickLookableP",
          "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "_HasCustomAnyHashableRepresentation",
          "printedName": "_HasCustomAnyHashableRepresentation",
          "usr": "s:s35_HasCustomAnyHashableRepresentationP",
          "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
        },
        {
          "kind": "Conformance",
          "name": "Sendable",
          "printedName": "Sendable",
          "usr": "s:s8SendableP",
          "mangledName": "$ss8SendableP"
        },
        {
          "kind": "Conformance",
          "name": "SIMDScalar",
          "printedName": "SIMDScalar",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "SIMDMaskScalar",
              "printedName": "SIMDMaskScalar",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int16",
                  "printedName": "Swift.Int16",
                  "usr": "s:s5Int16V"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD2Storage",
              "printedName": "SIMD2Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD2Storage",
                  "printedName": "Swift.Int16.SIMD2Storage",
                  "usr": "s:s5Int16V12SIMD2StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD4Storage",
              "printedName": "SIMD4Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD4Storage",
                  "printedName": "Swift.Int16.SIMD4Storage",
                  "usr": "s:s5Int16V12SIMD4StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD8Storage",
              "printedName": "SIMD8Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD8Storage",
                  "printedName": "Swift.Int16.SIMD8Storage",
                  "usr": "s:s5Int16V12SIMD8StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD16Storage",
              "printedName": "SIMD16Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD16Storage",
                  "printedName": "Swift.Int16.SIMD16Storage",
                  "usr": "s:s5Int16V13SIMD16StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD32Storage",
              "printedName": "SIMD32Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD32Storage",
                  "printedName": "Swift.Int16.SIMD32Storage",
                  "usr": "s:s5Int16V13SIMD32StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD64Storage",
              "printedName": "SIMD64Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD64Storage",
                  "printedName": "Swift.Int16.SIMD64Storage",
                  "usr": "s:s5Int16V13SIMD64StorageV"
                }
              ]
            }
          ],
          "usr": "s:s10SIMDScalarP",
          "mangledName": "$ss10SIMDScalarP"
        },
        {
          "kind": "Conformance",
          "name": "_ObjectiveCBridgeable",
          "printedName": "_ObjectiveCBridgeable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "_ObjectiveCType",
              "printedName": "_ObjectiveCType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NSNumber",
                  "printedName": "Foundation.NSNumber",
                  "usr": "c:objc(cs)NSNumber"
                }
              ]
            }
          ],
          "usr": "s:s21_ObjectiveCBridgeableP",
          "mangledName": "$ss21_ObjectiveCBridgeableP"
        },
        {
          "kind": "Conformance",
          "name": "_FormatSpecifiable",
          "printedName": "_FormatSpecifiable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "_Arg",
              "printedName": "_Arg",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int32",
                  "printedName": "Swift.Int32",
                  "usr": "s:s5Int32V"
                }
              ]
            }
          ],
          "usr": "s:10Foundation18_FormatSpecifiableP",
          "mangledName": "$s10Foundation18_FormatSpecifiableP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "UInt16",
      "printedName": "UInt16",
      "children": [
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(booleanLiteral:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "UInt16",
              "printedName": "Swift.UInt16",
              "usr": "s:s6UInt16V"
            },
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:s6UInt16V6NimbleE14booleanLiteralABSb_tcfc",
          "mangledName": "$ss6UInt16V6NimbleE14booleanLiteralABSb_tcfc",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "init_kind": "Designated"
        }
      ],
      "declKind": "Struct",
      "usr": "s:s6UInt16V",
      "mangledName": "$ss6UInt16V",
      "moduleName": "Swift",
      "declAttributes": [
        "Frozen"
      ],
      "isExternal": true,
      "conformances": [
        {
          "kind": "Conformance",
          "name": "FixedWidthInteger",
          "printedName": "FixedWidthInteger",
          "usr": "s:s17FixedWidthIntegerP",
          "mangledName": "$ss17FixedWidthIntegerP"
        },
        {
          "kind": "Conformance",
          "name": "UnsignedInteger",
          "printedName": "UnsignedInteger",
          "usr": "s:SU",
          "mangledName": "$sSU"
        },
        {
          "kind": "Conformance",
          "name": "_ExpressibleByBuiltinIntegerLiteral",
          "printedName": "_ExpressibleByBuiltinIntegerLiteral",
          "usr": "s:s35_ExpressibleByBuiltinIntegerLiteralP",
          "mangledName": "$ss35_ExpressibleByBuiltinIntegerLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "BinaryInteger",
          "printedName": "BinaryInteger",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Words",
              "printedName": "Words",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Words",
                  "printedName": "Swift.UInt16.Words",
                  "usr": "s:s6UInt16V5WordsV"
                }
              ]
            }
          ],
          "usr": "s:Sz",
          "mangledName": "$sSz"
        },
        {
          "kind": "Conformance",
          "name": "LosslessStringConvertible",
          "printedName": "LosslessStringConvertible",
          "usr": "s:s25LosslessStringConvertibleP",
          "mangledName": "$ss25LosslessStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "Numeric",
          "printedName": "Numeric",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Magnitude",
              "printedName": "Magnitude",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt16",
                  "printedName": "Swift.UInt16",
                  "usr": "s:s6UInt16V"
                }
              ]
            }
          ],
          "usr": "s:Sj",
          "mangledName": "$sSj"
        },
        {
          "kind": "Conformance",
          "name": "Strideable",
          "printedName": "Strideable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Stride",
              "printedName": "Stride",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ]
            }
          ],
          "usr": "s:Sx",
          "mangledName": "$sSx"
        },
        {
          "kind": "Conformance",
          "name": "AdditiveArithmetic",
          "printedName": "AdditiveArithmetic",
          "usr": "s:s18AdditiveArithmeticP",
          "mangledName": "$ss18AdditiveArithmeticP"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByIntegerLiteral",
          "printedName": "ExpressibleByIntegerLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "IntegerLiteralType",
              "printedName": "IntegerLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt16",
                  "printedName": "Swift.UInt16",
                  "usr": "s:s6UInt16V"
                }
              ]
            }
          ],
          "usr": "s:s27ExpressibleByIntegerLiteralP",
          "mangledName": "$ss27ExpressibleByIntegerLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "Comparable",
          "printedName": "Comparable",
          "usr": "s:SL",
          "mangledName": "$sSL"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByBooleanLiteral",
          "printedName": "ExpressibleByBooleanLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "BooleanLiteralType",
              "printedName": "BooleanLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Bool",
                  "printedName": "Swift.Bool",
                  "usr": "s:Sb"
                }
              ]
            }
          ],
          "usr": "s:s27ExpressibleByBooleanLiteralP",
          "mangledName": "$ss27ExpressibleByBooleanLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "Decodable",
          "printedName": "Decodable",
          "usr": "s:Se",
          "mangledName": "$sSe"
        },
        {
          "kind": "Conformance",
          "name": "Encodable",
          "printedName": "Encodable",
          "usr": "s:SE",
          "mangledName": "$sSE"
        },
        {
          "kind": "Conformance",
          "name": "CustomReflectable",
          "printedName": "CustomReflectable",
          "usr": "s:s17CustomReflectableP",
          "mangledName": "$ss17CustomReflectableP"
        },
        {
          "kind": "Conformance",
          "name": "_CustomPlaygroundQuickLookable",
          "printedName": "_CustomPlaygroundQuickLookable",
          "usr": "s:s30_CustomPlaygroundQuickLookableP",
          "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
        },
        {
          "kind": "Conformance",
          "name": "_StringElement",
          "printedName": "_StringElement",
          "usr": "s:s14_StringElementP",
          "mangledName": "$ss14_StringElementP"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "_HasCustomAnyHashableRepresentation",
          "printedName": "_HasCustomAnyHashableRepresentation",
          "usr": "s:s35_HasCustomAnyHashableRepresentationP",
          "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
        },
        {
          "kind": "Conformance",
          "name": "Sendable",
          "printedName": "Sendable",
          "usr": "s:s8SendableP",
          "mangledName": "$ss8SendableP"
        },
        {
          "kind": "Conformance",
          "name": "SIMDScalar",
          "printedName": "SIMDScalar",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "SIMDMaskScalar",
              "printedName": "SIMDMaskScalar",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int16",
                  "printedName": "Swift.Int16",
                  "usr": "s:s5Int16V"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD2Storage",
              "printedName": "SIMD2Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD2Storage",
                  "printedName": "Swift.UInt16.SIMD2Storage",
                  "usr": "s:s6UInt16V12SIMD2StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD4Storage",
              "printedName": "SIMD4Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD4Storage",
                  "printedName": "Swift.UInt16.SIMD4Storage",
                  "usr": "s:s6UInt16V12SIMD4StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD8Storage",
              "printedName": "SIMD8Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD8Storage",
                  "printedName": "Swift.UInt16.SIMD8Storage",
                  "usr": "s:s6UInt16V12SIMD8StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD16Storage",
              "printedName": "SIMD16Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD16Storage",
                  "printedName": "Swift.UInt16.SIMD16Storage",
                  "usr": "s:s6UInt16V13SIMD16StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD32Storage",
              "printedName": "SIMD32Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD32Storage",
                  "printedName": "Swift.UInt16.SIMD32Storage",
                  "usr": "s:s6UInt16V13SIMD32StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD64Storage",
              "printedName": "SIMD64Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD64Storage",
                  "printedName": "Swift.UInt16.SIMD64Storage",
                  "usr": "s:s6UInt16V13SIMD64StorageV"
                }
              ]
            }
          ],
          "usr": "s:s10SIMDScalarP",
          "mangledName": "$ss10SIMDScalarP"
        },
        {
          "kind": "Conformance",
          "name": "_ObjectiveCBridgeable",
          "printedName": "_ObjectiveCBridgeable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "_ObjectiveCType",
              "printedName": "_ObjectiveCType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NSNumber",
                  "printedName": "Foundation.NSNumber",
                  "usr": "c:objc(cs)NSNumber"
                }
              ]
            }
          ],
          "usr": "s:s21_ObjectiveCBridgeableP",
          "mangledName": "$ss21_ObjectiveCBridgeableP"
        },
        {
          "kind": "Conformance",
          "name": "_FormatSpecifiable",
          "printedName": "_FormatSpecifiable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "_Arg",
              "printedName": "_Arg",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt32",
                  "printedName": "Swift.UInt32",
                  "usr": "s:s6UInt32V"
                }
              ]
            }
          ],
          "usr": "s:10Foundation18_FormatSpecifiableP",
          "mangledName": "$s10Foundation18_FormatSpecifiableP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "Int32",
      "printedName": "Int32",
      "children": [
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(booleanLiteral:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int32",
              "printedName": "Swift.Int32",
              "usr": "s:s5Int32V"
            },
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:s5Int32V6NimbleE14booleanLiteralABSb_tcfc",
          "mangledName": "$ss5Int32V6NimbleE14booleanLiteralABSb_tcfc",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "init_kind": "Designated"
        }
      ],
      "declKind": "Struct",
      "usr": "s:s5Int32V",
      "mangledName": "$ss5Int32V",
      "moduleName": "Swift",
      "declAttributes": [
        "Frozen"
      ],
      "isExternal": true,
      "conformances": [
        {
          "kind": "Conformance",
          "name": "FixedWidthInteger",
          "printedName": "FixedWidthInteger",
          "usr": "s:s17FixedWidthIntegerP",
          "mangledName": "$ss17FixedWidthIntegerP"
        },
        {
          "kind": "Conformance",
          "name": "SignedInteger",
          "printedName": "SignedInteger",
          "usr": "s:SZ",
          "mangledName": "$sSZ"
        },
        {
          "kind": "Conformance",
          "name": "_ExpressibleByBuiltinIntegerLiteral",
          "printedName": "_ExpressibleByBuiltinIntegerLiteral",
          "usr": "s:s35_ExpressibleByBuiltinIntegerLiteralP",
          "mangledName": "$ss35_ExpressibleByBuiltinIntegerLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "BinaryInteger",
          "printedName": "BinaryInteger",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Words",
              "printedName": "Words",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Words",
                  "printedName": "Swift.Int32.Words",
                  "usr": "s:s5Int32V5WordsV"
                }
              ]
            }
          ],
          "usr": "s:Sz",
          "mangledName": "$sSz"
        },
        {
          "kind": "Conformance",
          "name": "LosslessStringConvertible",
          "printedName": "LosslessStringConvertible",
          "usr": "s:s25LosslessStringConvertibleP",
          "mangledName": "$ss25LosslessStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "SignedNumeric",
          "printedName": "SignedNumeric",
          "usr": "s:s13SignedNumericP",
          "mangledName": "$ss13SignedNumericP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "Numeric",
          "printedName": "Numeric",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Magnitude",
              "printedName": "Magnitude",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt32",
                  "printedName": "Swift.UInt32",
                  "usr": "s:s6UInt32V"
                }
              ]
            }
          ],
          "usr": "s:Sj",
          "mangledName": "$sSj"
        },
        {
          "kind": "Conformance",
          "name": "Strideable",
          "printedName": "Strideable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Stride",
              "printedName": "Stride",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ]
            }
          ],
          "usr": "s:Sx",
          "mangledName": "$sSx"
        },
        {
          "kind": "Conformance",
          "name": "AdditiveArithmetic",
          "printedName": "AdditiveArithmetic",
          "usr": "s:s18AdditiveArithmeticP",
          "mangledName": "$ss18AdditiveArithmeticP"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByIntegerLiteral",
          "printedName": "ExpressibleByIntegerLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "IntegerLiteralType",
              "printedName": "IntegerLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int32",
                  "printedName": "Swift.Int32",
                  "usr": "s:s5Int32V"
                }
              ]
            }
          ],
          "usr": "s:s27ExpressibleByIntegerLiteralP",
          "mangledName": "$ss27ExpressibleByIntegerLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "Comparable",
          "printedName": "Comparable",
          "usr": "s:SL",
          "mangledName": "$sSL"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByBooleanLiteral",
          "printedName": "ExpressibleByBooleanLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "BooleanLiteralType",
              "printedName": "BooleanLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Bool",
                  "printedName": "Swift.Bool",
                  "usr": "s:Sb"
                }
              ]
            }
          ],
          "usr": "s:s27ExpressibleByBooleanLiteralP",
          "mangledName": "$ss27ExpressibleByBooleanLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "Decodable",
          "printedName": "Decodable",
          "usr": "s:Se",
          "mangledName": "$sSe"
        },
        {
          "kind": "Conformance",
          "name": "Encodable",
          "printedName": "Encodable",
          "usr": "s:SE",
          "mangledName": "$sSE"
        },
        {
          "kind": "Conformance",
          "name": "CustomReflectable",
          "printedName": "CustomReflectable",
          "usr": "s:s17CustomReflectableP",
          "mangledName": "$ss17CustomReflectableP"
        },
        {
          "kind": "Conformance",
          "name": "_CustomPlaygroundQuickLookable",
          "printedName": "_CustomPlaygroundQuickLookable",
          "usr": "s:s30_CustomPlaygroundQuickLookableP",
          "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "_HasCustomAnyHashableRepresentation",
          "printedName": "_HasCustomAnyHashableRepresentation",
          "usr": "s:s35_HasCustomAnyHashableRepresentationP",
          "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
        },
        {
          "kind": "Conformance",
          "name": "Sendable",
          "printedName": "Sendable",
          "usr": "s:s8SendableP",
          "mangledName": "$ss8SendableP"
        },
        {
          "kind": "Conformance",
          "name": "SIMDScalar",
          "printedName": "SIMDScalar",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "SIMDMaskScalar",
              "printedName": "SIMDMaskScalar",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int32",
                  "printedName": "Swift.Int32",
                  "usr": "s:s5Int32V"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD2Storage",
              "printedName": "SIMD2Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD2Storage",
                  "printedName": "Swift.Int32.SIMD2Storage",
                  "usr": "s:s5Int32V12SIMD2StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD4Storage",
              "printedName": "SIMD4Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD4Storage",
                  "printedName": "Swift.Int32.SIMD4Storage",
                  "usr": "s:s5Int32V12SIMD4StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD8Storage",
              "printedName": "SIMD8Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD8Storage",
                  "printedName": "Swift.Int32.SIMD8Storage",
                  "usr": "s:s5Int32V12SIMD8StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD16Storage",
              "printedName": "SIMD16Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD16Storage",
                  "printedName": "Swift.Int32.SIMD16Storage",
                  "usr": "s:s5Int32V13SIMD16StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD32Storage",
              "printedName": "SIMD32Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD32Storage",
                  "printedName": "Swift.Int32.SIMD32Storage",
                  "usr": "s:s5Int32V13SIMD32StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD64Storage",
              "printedName": "SIMD64Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD64Storage",
                  "printedName": "Swift.Int32.SIMD64Storage",
                  "usr": "s:s5Int32V13SIMD64StorageV"
                }
              ]
            }
          ],
          "usr": "s:s10SIMDScalarP",
          "mangledName": "$ss10SIMDScalarP"
        },
        {
          "kind": "Conformance",
          "name": "_ObjectiveCBridgeable",
          "printedName": "_ObjectiveCBridgeable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "_ObjectiveCType",
              "printedName": "_ObjectiveCType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NSNumber",
                  "printedName": "Foundation.NSNumber",
                  "usr": "c:objc(cs)NSNumber"
                }
              ]
            }
          ],
          "usr": "s:s21_ObjectiveCBridgeableP",
          "mangledName": "$ss21_ObjectiveCBridgeableP"
        },
        {
          "kind": "Conformance",
          "name": "_FormatSpecifiable",
          "printedName": "_FormatSpecifiable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "_Arg",
              "printedName": "_Arg",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int32",
                  "printedName": "Swift.Int32",
                  "usr": "s:s5Int32V"
                }
              ]
            }
          ],
          "usr": "s:10Foundation18_FormatSpecifiableP",
          "mangledName": "$s10Foundation18_FormatSpecifiableP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "UInt32",
      "printedName": "UInt32",
      "children": [
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(booleanLiteral:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "UInt32",
              "printedName": "Swift.UInt32",
              "usr": "s:s6UInt32V"
            },
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:s6UInt32V6NimbleE14booleanLiteralABSb_tcfc",
          "mangledName": "$ss6UInt32V6NimbleE14booleanLiteralABSb_tcfc",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "init_kind": "Designated"
        }
      ],
      "declKind": "Struct",
      "usr": "s:s6UInt32V",
      "mangledName": "$ss6UInt32V",
      "moduleName": "Swift",
      "declAttributes": [
        "Frozen"
      ],
      "isExternal": true,
      "conformances": [
        {
          "kind": "Conformance",
          "name": "FixedWidthInteger",
          "printedName": "FixedWidthInteger",
          "usr": "s:s17FixedWidthIntegerP",
          "mangledName": "$ss17FixedWidthIntegerP"
        },
        {
          "kind": "Conformance",
          "name": "UnsignedInteger",
          "printedName": "UnsignedInteger",
          "usr": "s:SU",
          "mangledName": "$sSU"
        },
        {
          "kind": "Conformance",
          "name": "_ExpressibleByBuiltinIntegerLiteral",
          "printedName": "_ExpressibleByBuiltinIntegerLiteral",
          "usr": "s:s35_ExpressibleByBuiltinIntegerLiteralP",
          "mangledName": "$ss35_ExpressibleByBuiltinIntegerLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "BinaryInteger",
          "printedName": "BinaryInteger",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Words",
              "printedName": "Words",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Words",
                  "printedName": "Swift.UInt32.Words",
                  "usr": "s:s6UInt32V5WordsV"
                }
              ]
            }
          ],
          "usr": "s:Sz",
          "mangledName": "$sSz"
        },
        {
          "kind": "Conformance",
          "name": "LosslessStringConvertible",
          "printedName": "LosslessStringConvertible",
          "usr": "s:s25LosslessStringConvertibleP",
          "mangledName": "$ss25LosslessStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "Numeric",
          "printedName": "Numeric",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Magnitude",
              "printedName": "Magnitude",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt32",
                  "printedName": "Swift.UInt32",
                  "usr": "s:s6UInt32V"
                }
              ]
            }
          ],
          "usr": "s:Sj",
          "mangledName": "$sSj"
        },
        {
          "kind": "Conformance",
          "name": "Strideable",
          "printedName": "Strideable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Stride",
              "printedName": "Stride",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ]
            }
          ],
          "usr": "s:Sx",
          "mangledName": "$sSx"
        },
        {
          "kind": "Conformance",
          "name": "AdditiveArithmetic",
          "printedName": "AdditiveArithmetic",
          "usr": "s:s18AdditiveArithmeticP",
          "mangledName": "$ss18AdditiveArithmeticP"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByIntegerLiteral",
          "printedName": "ExpressibleByIntegerLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "IntegerLiteralType",
              "printedName": "IntegerLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt32",
                  "printedName": "Swift.UInt32",
                  "usr": "s:s6UInt32V"
                }
              ]
            }
          ],
          "usr": "s:s27ExpressibleByIntegerLiteralP",
          "mangledName": "$ss27ExpressibleByIntegerLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "Comparable",
          "printedName": "Comparable",
          "usr": "s:SL",
          "mangledName": "$sSL"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByBooleanLiteral",
          "printedName": "ExpressibleByBooleanLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "BooleanLiteralType",
              "printedName": "BooleanLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Bool",
                  "printedName": "Swift.Bool",
                  "usr": "s:Sb"
                }
              ]
            }
          ],
          "usr": "s:s27ExpressibleByBooleanLiteralP",
          "mangledName": "$ss27ExpressibleByBooleanLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "Decodable",
          "printedName": "Decodable",
          "usr": "s:Se",
          "mangledName": "$sSe"
        },
        {
          "kind": "Conformance",
          "name": "Encodable",
          "printedName": "Encodable",
          "usr": "s:SE",
          "mangledName": "$sSE"
        },
        {
          "kind": "Conformance",
          "name": "CustomReflectable",
          "printedName": "CustomReflectable",
          "usr": "s:s17CustomReflectableP",
          "mangledName": "$ss17CustomReflectableP"
        },
        {
          "kind": "Conformance",
          "name": "_CustomPlaygroundQuickLookable",
          "printedName": "_CustomPlaygroundQuickLookable",
          "usr": "s:s30_CustomPlaygroundQuickLookableP",
          "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "_HasCustomAnyHashableRepresentation",
          "printedName": "_HasCustomAnyHashableRepresentation",
          "usr": "s:s35_HasCustomAnyHashableRepresentationP",
          "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
        },
        {
          "kind": "Conformance",
          "name": "Sendable",
          "printedName": "Sendable",
          "usr": "s:s8SendableP",
          "mangledName": "$ss8SendableP"
        },
        {
          "kind": "Conformance",
          "name": "SIMDScalar",
          "printedName": "SIMDScalar",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "SIMDMaskScalar",
              "printedName": "SIMDMaskScalar",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int32",
                  "printedName": "Swift.Int32",
                  "usr": "s:s5Int32V"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD2Storage",
              "printedName": "SIMD2Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD2Storage",
                  "printedName": "Swift.UInt32.SIMD2Storage",
                  "usr": "s:s6UInt32V12SIMD2StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD4Storage",
              "printedName": "SIMD4Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD4Storage",
                  "printedName": "Swift.UInt32.SIMD4Storage",
                  "usr": "s:s6UInt32V12SIMD4StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD8Storage",
              "printedName": "SIMD8Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD8Storage",
                  "printedName": "Swift.UInt32.SIMD8Storage",
                  "usr": "s:s6UInt32V12SIMD8StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD16Storage",
              "printedName": "SIMD16Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD16Storage",
                  "printedName": "Swift.UInt32.SIMD16Storage",
                  "usr": "s:s6UInt32V13SIMD16StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD32Storage",
              "printedName": "SIMD32Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD32Storage",
                  "printedName": "Swift.UInt32.SIMD32Storage",
                  "usr": "s:s6UInt32V13SIMD32StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD64Storage",
              "printedName": "SIMD64Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD64Storage",
                  "printedName": "Swift.UInt32.SIMD64Storage",
                  "usr": "s:s6UInt32V13SIMD64StorageV"
                }
              ]
            }
          ],
          "usr": "s:s10SIMDScalarP",
          "mangledName": "$ss10SIMDScalarP"
        },
        {
          "kind": "Conformance",
          "name": "_ObjectiveCBridgeable",
          "printedName": "_ObjectiveCBridgeable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "_ObjectiveCType",
              "printedName": "_ObjectiveCType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NSNumber",
                  "printedName": "Foundation.NSNumber",
                  "usr": "c:objc(cs)NSNumber"
                }
              ]
            }
          ],
          "usr": "s:s21_ObjectiveCBridgeableP",
          "mangledName": "$ss21_ObjectiveCBridgeableP"
        },
        {
          "kind": "Conformance",
          "name": "_FormatSpecifiable",
          "printedName": "_FormatSpecifiable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "_Arg",
              "printedName": "_Arg",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt32",
                  "printedName": "Swift.UInt32",
                  "usr": "s:s6UInt32V"
                }
              ]
            }
          ],
          "usr": "s:10Foundation18_FormatSpecifiableP",
          "mangledName": "$s10Foundation18_FormatSpecifiableP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "Int64",
      "printedName": "Int64",
      "children": [
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(booleanLiteral:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int64",
              "printedName": "Swift.Int64",
              "usr": "s:s5Int64V"
            },
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:s5Int64V6NimbleE14booleanLiteralABSb_tcfc",
          "mangledName": "$ss5Int64V6NimbleE14booleanLiteralABSb_tcfc",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "init_kind": "Designated"
        }
      ],
      "declKind": "Struct",
      "usr": "s:s5Int64V",
      "mangledName": "$ss5Int64V",
      "moduleName": "Swift",
      "declAttributes": [
        "Frozen"
      ],
      "isExternal": true,
      "conformances": [
        {
          "kind": "Conformance",
          "name": "FixedWidthInteger",
          "printedName": "FixedWidthInteger",
          "usr": "s:s17FixedWidthIntegerP",
          "mangledName": "$ss17FixedWidthIntegerP"
        },
        {
          "kind": "Conformance",
          "name": "SignedInteger",
          "printedName": "SignedInteger",
          "usr": "s:SZ",
          "mangledName": "$sSZ"
        },
        {
          "kind": "Conformance",
          "name": "_ExpressibleByBuiltinIntegerLiteral",
          "printedName": "_ExpressibleByBuiltinIntegerLiteral",
          "usr": "s:s35_ExpressibleByBuiltinIntegerLiteralP",
          "mangledName": "$ss35_ExpressibleByBuiltinIntegerLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "BinaryInteger",
          "printedName": "BinaryInteger",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Words",
              "printedName": "Words",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Words",
                  "printedName": "Swift.Int64.Words",
                  "usr": "s:s5Int64V5WordsV"
                }
              ]
            }
          ],
          "usr": "s:Sz",
          "mangledName": "$sSz"
        },
        {
          "kind": "Conformance",
          "name": "LosslessStringConvertible",
          "printedName": "LosslessStringConvertible",
          "usr": "s:s25LosslessStringConvertibleP",
          "mangledName": "$ss25LosslessStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "SignedNumeric",
          "printedName": "SignedNumeric",
          "usr": "s:s13SignedNumericP",
          "mangledName": "$ss13SignedNumericP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "Numeric",
          "printedName": "Numeric",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Magnitude",
              "printedName": "Magnitude",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt64",
                  "printedName": "Swift.UInt64",
                  "usr": "s:s6UInt64V"
                }
              ]
            }
          ],
          "usr": "s:Sj",
          "mangledName": "$sSj"
        },
        {
          "kind": "Conformance",
          "name": "Strideable",
          "printedName": "Strideable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Stride",
              "printedName": "Stride",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ]
            }
          ],
          "usr": "s:Sx",
          "mangledName": "$sSx"
        },
        {
          "kind": "Conformance",
          "name": "AdditiveArithmetic",
          "printedName": "AdditiveArithmetic",
          "usr": "s:s18AdditiveArithmeticP",
          "mangledName": "$ss18AdditiveArithmeticP"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByIntegerLiteral",
          "printedName": "ExpressibleByIntegerLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "IntegerLiteralType",
              "printedName": "IntegerLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int64",
                  "printedName": "Swift.Int64",
                  "usr": "s:s5Int64V"
                }
              ]
            }
          ],
          "usr": "s:s27ExpressibleByIntegerLiteralP",
          "mangledName": "$ss27ExpressibleByIntegerLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "Comparable",
          "printedName": "Comparable",
          "usr": "s:SL",
          "mangledName": "$sSL"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByBooleanLiteral",
          "printedName": "ExpressibleByBooleanLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "BooleanLiteralType",
              "printedName": "BooleanLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Bool",
                  "printedName": "Swift.Bool",
                  "usr": "s:Sb"
                }
              ]
            }
          ],
          "usr": "s:s27ExpressibleByBooleanLiteralP",
          "mangledName": "$ss27ExpressibleByBooleanLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "Decodable",
          "printedName": "Decodable",
          "usr": "s:Se",
          "mangledName": "$sSe"
        },
        {
          "kind": "Conformance",
          "name": "Encodable",
          "printedName": "Encodable",
          "usr": "s:SE",
          "mangledName": "$sSE"
        },
        {
          "kind": "Conformance",
          "name": "CustomReflectable",
          "printedName": "CustomReflectable",
          "usr": "s:s17CustomReflectableP",
          "mangledName": "$ss17CustomReflectableP"
        },
        {
          "kind": "Conformance",
          "name": "_CustomPlaygroundQuickLookable",
          "printedName": "_CustomPlaygroundQuickLookable",
          "usr": "s:s30_CustomPlaygroundQuickLookableP",
          "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "_CVarArgAligned",
          "printedName": "_CVarArgAligned",
          "usr": "s:s15_CVarArgAlignedP",
          "mangledName": "$ss15_CVarArgAlignedP"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "_HasCustomAnyHashableRepresentation",
          "printedName": "_HasCustomAnyHashableRepresentation",
          "usr": "s:s35_HasCustomAnyHashableRepresentationP",
          "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
        },
        {
          "kind": "Conformance",
          "name": "Sendable",
          "printedName": "Sendable",
          "usr": "s:s8SendableP",
          "mangledName": "$ss8SendableP"
        },
        {
          "kind": "Conformance",
          "name": "SIMDScalar",
          "printedName": "SIMDScalar",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "SIMDMaskScalar",
              "printedName": "SIMDMaskScalar",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int64",
                  "printedName": "Swift.Int64",
                  "usr": "s:s5Int64V"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD2Storage",
              "printedName": "SIMD2Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD2Storage",
                  "printedName": "Swift.Int64.SIMD2Storage",
                  "usr": "s:s5Int64V12SIMD2StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD4Storage",
              "printedName": "SIMD4Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD4Storage",
                  "printedName": "Swift.Int64.SIMD4Storage",
                  "usr": "s:s5Int64V12SIMD4StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD8Storage",
              "printedName": "SIMD8Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD8Storage",
                  "printedName": "Swift.Int64.SIMD8Storage",
                  "usr": "s:s5Int64V12SIMD8StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD16Storage",
              "printedName": "SIMD16Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD16Storage",
                  "printedName": "Swift.Int64.SIMD16Storage",
                  "usr": "s:s5Int64V13SIMD16StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD32Storage",
              "printedName": "SIMD32Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD32Storage",
                  "printedName": "Swift.Int64.SIMD32Storage",
                  "usr": "s:s5Int64V13SIMD32StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD64Storage",
              "printedName": "SIMD64Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD64Storage",
                  "printedName": "Swift.Int64.SIMD64Storage",
                  "usr": "s:s5Int64V13SIMD64StorageV"
                }
              ]
            }
          ],
          "usr": "s:s10SIMDScalarP",
          "mangledName": "$ss10SIMDScalarP"
        },
        {
          "kind": "Conformance",
          "name": "_ObjectiveCBridgeable",
          "printedName": "_ObjectiveCBridgeable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "_ObjectiveCType",
              "printedName": "_ObjectiveCType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NSNumber",
                  "printedName": "Foundation.NSNumber",
                  "usr": "c:objc(cs)NSNumber"
                }
              ]
            }
          ],
          "usr": "s:s21_ObjectiveCBridgeableP",
          "mangledName": "$ss21_ObjectiveCBridgeableP"
        },
        {
          "kind": "Conformance",
          "name": "_FormatSpecifiable",
          "printedName": "_FormatSpecifiable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "_Arg",
              "printedName": "_Arg",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int64",
                  "printedName": "Swift.Int64",
                  "usr": "s:s5Int64V"
                }
              ]
            }
          ],
          "usr": "s:10Foundation18_FormatSpecifiableP",
          "mangledName": "$s10Foundation18_FormatSpecifiableP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "UInt64",
      "printedName": "UInt64",
      "children": [
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(booleanLiteral:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "UInt64",
              "printedName": "Swift.UInt64",
              "usr": "s:s6UInt64V"
            },
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:s6UInt64V6NimbleE14booleanLiteralABSb_tcfc",
          "mangledName": "$ss6UInt64V6NimbleE14booleanLiteralABSb_tcfc",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "init_kind": "Designated"
        }
      ],
      "declKind": "Struct",
      "usr": "s:s6UInt64V",
      "mangledName": "$ss6UInt64V",
      "moduleName": "Swift",
      "declAttributes": [
        "Frozen"
      ],
      "isExternal": true,
      "conformances": [
        {
          "kind": "Conformance",
          "name": "FixedWidthInteger",
          "printedName": "FixedWidthInteger",
          "usr": "s:s17FixedWidthIntegerP",
          "mangledName": "$ss17FixedWidthIntegerP"
        },
        {
          "kind": "Conformance",
          "name": "UnsignedInteger",
          "printedName": "UnsignedInteger",
          "usr": "s:SU",
          "mangledName": "$sSU"
        },
        {
          "kind": "Conformance",
          "name": "_ExpressibleByBuiltinIntegerLiteral",
          "printedName": "_ExpressibleByBuiltinIntegerLiteral",
          "usr": "s:s35_ExpressibleByBuiltinIntegerLiteralP",
          "mangledName": "$ss35_ExpressibleByBuiltinIntegerLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "BinaryInteger",
          "printedName": "BinaryInteger",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Words",
              "printedName": "Words",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Words",
                  "printedName": "Swift.UInt64.Words",
                  "usr": "s:s6UInt64V5WordsV"
                }
              ]
            }
          ],
          "usr": "s:Sz",
          "mangledName": "$sSz"
        },
        {
          "kind": "Conformance",
          "name": "LosslessStringConvertible",
          "printedName": "LosslessStringConvertible",
          "usr": "s:s25LosslessStringConvertibleP",
          "mangledName": "$ss25LosslessStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "Numeric",
          "printedName": "Numeric",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Magnitude",
              "printedName": "Magnitude",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt64",
                  "printedName": "Swift.UInt64",
                  "usr": "s:s6UInt64V"
                }
              ]
            }
          ],
          "usr": "s:Sj",
          "mangledName": "$sSj"
        },
        {
          "kind": "Conformance",
          "name": "Strideable",
          "printedName": "Strideable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Stride",
              "printedName": "Stride",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ]
            }
          ],
          "usr": "s:Sx",
          "mangledName": "$sSx"
        },
        {
          "kind": "Conformance",
          "name": "AdditiveArithmetic",
          "printedName": "AdditiveArithmetic",
          "usr": "s:s18AdditiveArithmeticP",
          "mangledName": "$ss18AdditiveArithmeticP"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByIntegerLiteral",
          "printedName": "ExpressibleByIntegerLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "IntegerLiteralType",
              "printedName": "IntegerLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt64",
                  "printedName": "Swift.UInt64",
                  "usr": "s:s6UInt64V"
                }
              ]
            }
          ],
          "usr": "s:s27ExpressibleByIntegerLiteralP",
          "mangledName": "$ss27ExpressibleByIntegerLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "Comparable",
          "printedName": "Comparable",
          "usr": "s:SL",
          "mangledName": "$sSL"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByBooleanLiteral",
          "printedName": "ExpressibleByBooleanLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "BooleanLiteralType",
              "printedName": "BooleanLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Bool",
                  "printedName": "Swift.Bool",
                  "usr": "s:Sb"
                }
              ]
            }
          ],
          "usr": "s:s27ExpressibleByBooleanLiteralP",
          "mangledName": "$ss27ExpressibleByBooleanLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "Decodable",
          "printedName": "Decodable",
          "usr": "s:Se",
          "mangledName": "$sSe"
        },
        {
          "kind": "Conformance",
          "name": "Encodable",
          "printedName": "Encodable",
          "usr": "s:SE",
          "mangledName": "$sSE"
        },
        {
          "kind": "Conformance",
          "name": "CustomReflectable",
          "printedName": "CustomReflectable",
          "usr": "s:s17CustomReflectableP",
          "mangledName": "$ss17CustomReflectableP"
        },
        {
          "kind": "Conformance",
          "name": "_CustomPlaygroundQuickLookable",
          "printedName": "_CustomPlaygroundQuickLookable",
          "usr": "s:s30_CustomPlaygroundQuickLookableP",
          "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "_CVarArgAligned",
          "printedName": "_CVarArgAligned",
          "usr": "s:s15_CVarArgAlignedP",
          "mangledName": "$ss15_CVarArgAlignedP"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "_HasCustomAnyHashableRepresentation",
          "printedName": "_HasCustomAnyHashableRepresentation",
          "usr": "s:s35_HasCustomAnyHashableRepresentationP",
          "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
        },
        {
          "kind": "Conformance",
          "name": "Sendable",
          "printedName": "Sendable",
          "usr": "s:s8SendableP",
          "mangledName": "$ss8SendableP"
        },
        {
          "kind": "Conformance",
          "name": "SIMDScalar",
          "printedName": "SIMDScalar",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "SIMDMaskScalar",
              "printedName": "SIMDMaskScalar",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int64",
                  "printedName": "Swift.Int64",
                  "usr": "s:s5Int64V"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD2Storage",
              "printedName": "SIMD2Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD2Storage",
                  "printedName": "Swift.UInt64.SIMD2Storage",
                  "usr": "s:s6UInt64V12SIMD2StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD4Storage",
              "printedName": "SIMD4Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD4Storage",
                  "printedName": "Swift.UInt64.SIMD4Storage",
                  "usr": "s:s6UInt64V12SIMD4StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD8Storage",
              "printedName": "SIMD8Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD8Storage",
                  "printedName": "Swift.UInt64.SIMD8Storage",
                  "usr": "s:s6UInt64V12SIMD8StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD16Storage",
              "printedName": "SIMD16Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD16Storage",
                  "printedName": "Swift.UInt64.SIMD16Storage",
                  "usr": "s:s6UInt64V13SIMD16StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD32Storage",
              "printedName": "SIMD32Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD32Storage",
                  "printedName": "Swift.UInt64.SIMD32Storage",
                  "usr": "s:s6UInt64V13SIMD32StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD64Storage",
              "printedName": "SIMD64Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD64Storage",
                  "printedName": "Swift.UInt64.SIMD64Storage",
                  "usr": "s:s6UInt64V13SIMD64StorageV"
                }
              ]
            }
          ],
          "usr": "s:s10SIMDScalarP",
          "mangledName": "$ss10SIMDScalarP"
        },
        {
          "kind": "Conformance",
          "name": "_ObjectiveCBridgeable",
          "printedName": "_ObjectiveCBridgeable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "_ObjectiveCType",
              "printedName": "_ObjectiveCType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NSNumber",
                  "printedName": "Foundation.NSNumber",
                  "usr": "c:objc(cs)NSNumber"
                }
              ]
            }
          ],
          "usr": "s:s21_ObjectiveCBridgeableP",
          "mangledName": "$ss21_ObjectiveCBridgeableP"
        },
        {
          "kind": "Conformance",
          "name": "_FormatSpecifiable",
          "printedName": "_FormatSpecifiable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "_Arg",
              "printedName": "_Arg",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt64",
                  "printedName": "Swift.UInt64",
                  "usr": "s:s6UInt64V"
                }
              ]
            }
          ],
          "usr": "s:10Foundation18_FormatSpecifiableP",
          "mangledName": "$s10Foundation18_FormatSpecifiableP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "Float",
      "printedName": "Float",
      "children": [
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(booleanLiteral:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Float",
              "printedName": "Swift.Float",
              "usr": "s:Sf"
            },
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:Sf6NimbleE14booleanLiteralSfSb_tcfc",
          "mangledName": "$sSf6NimbleE14booleanLiteralSfSb_tcfc",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Var",
          "name": "testDescription",
          "printedName": "testDescription",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Var",
          "usr": "s:Sf6NimbleE15testDescriptionSSvp",
          "mangledName": "$sSf6NimbleE15testDescriptionSSvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:Sf6NimbleE15testDescriptionSSvg",
              "mangledName": "$sSf6NimbleE15testDescriptionSSvg",
              "moduleName": "Nimble",
              "accessorKind": "get"
            }
          ]
        }
      ],
      "declKind": "Struct",
      "usr": "s:Sf",
      "mangledName": "$sSf",
      "moduleName": "Swift",
      "declAttributes": [
        "Frozen"
      ],
      "isExternal": true,
      "conformances": [
        {
          "kind": "Conformance",
          "name": "ExpressibleByBooleanLiteral",
          "printedName": "ExpressibleByBooleanLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "BooleanLiteralType",
              "printedName": "BooleanLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Bool",
                  "printedName": "Swift.Bool",
                  "usr": "s:Sb"
                }
              ]
            }
          ],
          "usr": "s:s27ExpressibleByBooleanLiteralP",
          "mangledName": "$ss27ExpressibleByBooleanLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "TestOutputStringConvertible",
          "printedName": "TestOutputStringConvertible",
          "usr": "s:6Nimble27TestOutputStringConvertibleP",
          "mangledName": "$s6Nimble27TestOutputStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "Decodable",
          "printedName": "Decodable",
          "usr": "s:Se",
          "mangledName": "$sSe"
        },
        {
          "kind": "Conformance",
          "name": "Encodable",
          "printedName": "Encodable",
          "usr": "s:SE",
          "mangledName": "$sSE"
        },
        {
          "kind": "Conformance",
          "name": "CustomReflectable",
          "printedName": "CustomReflectable",
          "usr": "s:s17CustomReflectableP",
          "mangledName": "$ss17CustomReflectableP"
        },
        {
          "kind": "Conformance",
          "name": "_CustomPlaygroundQuickLookable",
          "printedName": "_CustomPlaygroundQuickLookable",
          "usr": "s:s30_CustomPlaygroundQuickLookableP",
          "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
        },
        {
          "kind": "Conformance",
          "name": "_CVarArgPassedAsDouble",
          "printedName": "_CVarArgPassedAsDouble",
          "usr": "s:s22_CVarArgPassedAsDoubleP",
          "mangledName": "$ss22_CVarArgPassedAsDoubleP"
        },
        {
          "kind": "Conformance",
          "name": "_CVarArgAligned",
          "printedName": "_CVarArgAligned",
          "usr": "s:s15_CVarArgAlignedP",
          "mangledName": "$ss15_CVarArgAlignedP"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "LosslessStringConvertible",
          "printedName": "LosslessStringConvertible",
          "usr": "s:s25LosslessStringConvertibleP",
          "mangledName": "$ss25LosslessStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "TextOutputStreamable",
          "printedName": "TextOutputStreamable",
          "usr": "s:s20TextOutputStreamableP",
          "mangledName": "$ss20TextOutputStreamableP"
        },
        {
          "kind": "Conformance",
          "name": "BinaryFloatingPoint",
          "printedName": "BinaryFloatingPoint",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "RawSignificand",
              "printedName": "RawSignificand",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt32",
                  "printedName": "Swift.UInt32",
                  "usr": "s:s6UInt32V"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "RawExponent",
              "printedName": "RawExponent",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt",
                  "printedName": "Swift.UInt",
                  "usr": "s:Su"
                }
              ]
            }
          ],
          "usr": "s:SB",
          "mangledName": "$sSB"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByFloatLiteral",
          "printedName": "ExpressibleByFloatLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "FloatLiteralType",
              "printedName": "FloatLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Float",
                  "printedName": "Swift.Float",
                  "usr": "s:Sf"
                }
              ]
            }
          ],
          "usr": "s:s25ExpressibleByFloatLiteralP",
          "mangledName": "$ss25ExpressibleByFloatLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "FloatingPoint",
          "printedName": "FloatingPoint",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Exponent",
              "printedName": "Exponent",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ]
            }
          ],
          "usr": "s:SF",
          "mangledName": "$sSF"
        },
        {
          "kind": "Conformance",
          "name": "SignedNumeric",
          "printedName": "SignedNumeric",
          "usr": "s:s13SignedNumericP",
          "mangledName": "$ss13SignedNumericP"
        },
        {
          "kind": "Conformance",
          "name": "Numeric",
          "printedName": "Numeric",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Magnitude",
              "printedName": "Magnitude",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Float",
                  "printedName": "Swift.Float",
                  "usr": "s:Sf"
                }
              ]
            }
          ],
          "usr": "s:Sj",
          "mangledName": "$sSj"
        },
        {
          "kind": "Conformance",
          "name": "AdditiveArithmetic",
          "printedName": "AdditiveArithmetic",
          "usr": "s:s18AdditiveArithmeticP",
          "mangledName": "$ss18AdditiveArithmeticP"
        },
        {
          "kind": "Conformance",
          "name": "_ExpressibleByBuiltinIntegerLiteral",
          "printedName": "_ExpressibleByBuiltinIntegerLiteral",
          "usr": "s:s35_ExpressibleByBuiltinIntegerLiteralP",
          "mangledName": "$ss35_ExpressibleByBuiltinIntegerLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByIntegerLiteral",
          "printedName": "ExpressibleByIntegerLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "IntegerLiteralType",
              "printedName": "IntegerLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int64",
                  "printedName": "Swift.Int64",
                  "usr": "s:s5Int64V"
                }
              ]
            }
          ],
          "usr": "s:s27ExpressibleByIntegerLiteralP",
          "mangledName": "$ss27ExpressibleByIntegerLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "_ExpressibleByBuiltinFloatLiteral",
          "printedName": "_ExpressibleByBuiltinFloatLiteral",
          "usr": "s:s33_ExpressibleByBuiltinFloatLiteralP",
          "mangledName": "$ss33_ExpressibleByBuiltinFloatLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "_HasCustomAnyHashableRepresentation",
          "printedName": "_HasCustomAnyHashableRepresentation",
          "usr": "s:s35_HasCustomAnyHashableRepresentationP",
          "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
        },
        {
          "kind": "Conformance",
          "name": "Sendable",
          "printedName": "Sendable",
          "usr": "s:s8SendableP",
          "mangledName": "$ss8SendableP"
        },
        {
          "kind": "Conformance",
          "name": "Strideable",
          "printedName": "Strideable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Stride",
              "printedName": "Stride",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Float",
                  "printedName": "Swift.Float",
                  "usr": "s:Sf"
                }
              ]
            }
          ],
          "usr": "s:Sx",
          "mangledName": "$sSx"
        },
        {
          "kind": "Conformance",
          "name": "Comparable",
          "printedName": "Comparable",
          "usr": "s:SL",
          "mangledName": "$sSL"
        },
        {
          "kind": "Conformance",
          "name": "SIMDScalar",
          "printedName": "SIMDScalar",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "SIMDMaskScalar",
              "printedName": "SIMDMaskScalar",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int32",
                  "printedName": "Swift.Int32",
                  "usr": "s:s5Int32V"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD2Storage",
              "printedName": "SIMD2Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD2Storage",
                  "printedName": "Swift.Float.SIMD2Storage",
                  "usr": "s:Sf12SIMD2StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD4Storage",
              "printedName": "SIMD4Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD4Storage",
                  "printedName": "Swift.Float.SIMD4Storage",
                  "usr": "s:Sf12SIMD4StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD8Storage",
              "printedName": "SIMD8Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD8Storage",
                  "printedName": "Swift.Float.SIMD8Storage",
                  "usr": "s:Sf12SIMD8StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD16Storage",
              "printedName": "SIMD16Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD16Storage",
                  "printedName": "Swift.Float.SIMD16Storage",
                  "usr": "s:Sf13SIMD16StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD32Storage",
              "printedName": "SIMD32Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD32Storage",
                  "printedName": "Swift.Float.SIMD32Storage",
                  "usr": "s:Sf13SIMD32StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD64Storage",
              "printedName": "SIMD64Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD64Storage",
                  "printedName": "Swift.Float.SIMD64Storage",
                  "usr": "s:Sf13SIMD64StorageV"
                }
              ]
            }
          ],
          "usr": "s:s10SIMDScalarP",
          "mangledName": "$ss10SIMDScalarP"
        },
        {
          "kind": "Conformance",
          "name": "_ObjectiveCBridgeable",
          "printedName": "_ObjectiveCBridgeable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "_ObjectiveCType",
              "printedName": "_ObjectiveCType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NSNumber",
                  "printedName": "Foundation.NSNumber",
                  "usr": "c:objc(cs)NSNumber"
                }
              ]
            }
          ],
          "usr": "s:s21_ObjectiveCBridgeableP",
          "mangledName": "$ss21_ObjectiveCBridgeableP"
        },
        {
          "kind": "Conformance",
          "name": "_FormatSpecifiable",
          "printedName": "_FormatSpecifiable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "_Arg",
              "printedName": "_Arg",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Float",
                  "printedName": "Swift.Float",
                  "usr": "s:Sf"
                }
              ]
            }
          ],
          "usr": "s:10Foundation18_FormatSpecifiableP",
          "mangledName": "$s10Foundation18_FormatSpecifiableP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "Double",
      "printedName": "Double",
      "children": [
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(booleanLiteral:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Double",
              "printedName": "Swift.Double",
              "usr": "s:Sd"
            },
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:Sd6NimbleE14booleanLiteralSdSb_tcfc",
          "mangledName": "$sSd6NimbleE14booleanLiteralSdSb_tcfc",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "init_kind": "Designated"
        },
        {
          "kind": "Var",
          "name": "dispatchInterval",
          "printedName": "dispatchInterval",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "DispatchTimeInterval",
              "printedName": "Dispatch.DispatchTimeInterval",
              "usr": "s:8Dispatch0A12TimeIntervalO"
            }
          ],
          "declKind": "Var",
          "usr": "s:Sd6NimbleE16dispatchInterval8Dispatch0d4TimeC0Ovp",
          "mangledName": "$sSd6NimbleE16dispatchInterval8Dispatch0d4TimeC0Ovp",
          "moduleName": "Nimble",
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "DispatchTimeInterval",
                  "printedName": "Dispatch.DispatchTimeInterval",
                  "usr": "s:8Dispatch0A12TimeIntervalO"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:Sd6NimbleE16dispatchInterval8Dispatch0d4TimeC0Ovg",
              "mangledName": "$sSd6NimbleE16dispatchInterval8Dispatch0d4TimeC0Ovg",
              "moduleName": "Nimble",
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "testDescription",
          "printedName": "testDescription",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Var",
          "usr": "s:Sd6NimbleE15testDescriptionSSvp",
          "mangledName": "$sSd6NimbleE15testDescriptionSSvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:Sd6NimbleE15testDescriptionSSvg",
              "mangledName": "$sSd6NimbleE15testDescriptionSSvg",
              "moduleName": "Nimble",
              "accessorKind": "get"
            }
          ]
        }
      ],
      "declKind": "Struct",
      "usr": "s:Sd",
      "mangledName": "$sSd",
      "moduleName": "Swift",
      "declAttributes": [
        "Frozen"
      ],
      "isExternal": true,
      "conformances": [
        {
          "kind": "Conformance",
          "name": "ExpressibleByBooleanLiteral",
          "printedName": "ExpressibleByBooleanLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "BooleanLiteralType",
              "printedName": "BooleanLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Bool",
                  "printedName": "Swift.Bool",
                  "usr": "s:Sb"
                }
              ]
            }
          ],
          "usr": "s:s27ExpressibleByBooleanLiteralP",
          "mangledName": "$ss27ExpressibleByBooleanLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "TestOutputStringConvertible",
          "printedName": "TestOutputStringConvertible",
          "usr": "s:6Nimble27TestOutputStringConvertibleP",
          "mangledName": "$s6Nimble27TestOutputStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "Decodable",
          "printedName": "Decodable",
          "usr": "s:Se",
          "mangledName": "$sSe"
        },
        {
          "kind": "Conformance",
          "name": "Encodable",
          "printedName": "Encodable",
          "usr": "s:SE",
          "mangledName": "$sSE"
        },
        {
          "kind": "Conformance",
          "name": "CustomReflectable",
          "printedName": "CustomReflectable",
          "usr": "s:s17CustomReflectableP",
          "mangledName": "$ss17CustomReflectableP"
        },
        {
          "kind": "Conformance",
          "name": "_CustomPlaygroundQuickLookable",
          "printedName": "_CustomPlaygroundQuickLookable",
          "usr": "s:s30_CustomPlaygroundQuickLookableP",
          "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
        },
        {
          "kind": "Conformance",
          "name": "_CVarArgPassedAsDouble",
          "printedName": "_CVarArgPassedAsDouble",
          "usr": "s:s22_CVarArgPassedAsDoubleP",
          "mangledName": "$ss22_CVarArgPassedAsDoubleP"
        },
        {
          "kind": "Conformance",
          "name": "_CVarArgAligned",
          "printedName": "_CVarArgAligned",
          "usr": "s:s15_CVarArgAlignedP",
          "mangledName": "$ss15_CVarArgAlignedP"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "LosslessStringConvertible",
          "printedName": "LosslessStringConvertible",
          "usr": "s:s25LosslessStringConvertibleP",
          "mangledName": "$ss25LosslessStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "TextOutputStreamable",
          "printedName": "TextOutputStreamable",
          "usr": "s:s20TextOutputStreamableP",
          "mangledName": "$ss20TextOutputStreamableP"
        },
        {
          "kind": "Conformance",
          "name": "BinaryFloatingPoint",
          "printedName": "BinaryFloatingPoint",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "RawSignificand",
              "printedName": "RawSignificand",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt64",
                  "printedName": "Swift.UInt64",
                  "usr": "s:s6UInt64V"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "RawExponent",
              "printedName": "RawExponent",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt",
                  "printedName": "Swift.UInt",
                  "usr": "s:Su"
                }
              ]
            }
          ],
          "usr": "s:SB",
          "mangledName": "$sSB"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByFloatLiteral",
          "printedName": "ExpressibleByFloatLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "FloatLiteralType",
              "printedName": "FloatLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Double",
                  "printedName": "Swift.Double",
                  "usr": "s:Sd"
                }
              ]
            }
          ],
          "usr": "s:s25ExpressibleByFloatLiteralP",
          "mangledName": "$ss25ExpressibleByFloatLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "FloatingPoint",
          "printedName": "FloatingPoint",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Exponent",
              "printedName": "Exponent",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ]
            }
          ],
          "usr": "s:SF",
          "mangledName": "$sSF"
        },
        {
          "kind": "Conformance",
          "name": "SignedNumeric",
          "printedName": "SignedNumeric",
          "usr": "s:s13SignedNumericP",
          "mangledName": "$ss13SignedNumericP"
        },
        {
          "kind": "Conformance",
          "name": "Numeric",
          "printedName": "Numeric",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Magnitude",
              "printedName": "Magnitude",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Double",
                  "printedName": "Swift.Double",
                  "usr": "s:Sd"
                }
              ]
            }
          ],
          "usr": "s:Sj",
          "mangledName": "$sSj"
        },
        {
          "kind": "Conformance",
          "name": "AdditiveArithmetic",
          "printedName": "AdditiveArithmetic",
          "usr": "s:s18AdditiveArithmeticP",
          "mangledName": "$ss18AdditiveArithmeticP"
        },
        {
          "kind": "Conformance",
          "name": "_ExpressibleByBuiltinIntegerLiteral",
          "printedName": "_ExpressibleByBuiltinIntegerLiteral",
          "usr": "s:s35_ExpressibleByBuiltinIntegerLiteralP",
          "mangledName": "$ss35_ExpressibleByBuiltinIntegerLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByIntegerLiteral",
          "printedName": "ExpressibleByIntegerLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "IntegerLiteralType",
              "printedName": "IntegerLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int64",
                  "printedName": "Swift.Int64",
                  "usr": "s:s5Int64V"
                }
              ]
            }
          ],
          "usr": "s:s27ExpressibleByIntegerLiteralP",
          "mangledName": "$ss27ExpressibleByIntegerLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "_ExpressibleByBuiltinFloatLiteral",
          "printedName": "_ExpressibleByBuiltinFloatLiteral",
          "usr": "s:s33_ExpressibleByBuiltinFloatLiteralP",
          "mangledName": "$ss33_ExpressibleByBuiltinFloatLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "_HasCustomAnyHashableRepresentation",
          "printedName": "_HasCustomAnyHashableRepresentation",
          "usr": "s:s35_HasCustomAnyHashableRepresentationP",
          "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
        },
        {
          "kind": "Conformance",
          "name": "Sendable",
          "printedName": "Sendable",
          "usr": "s:s8SendableP",
          "mangledName": "$ss8SendableP"
        },
        {
          "kind": "Conformance",
          "name": "Strideable",
          "printedName": "Strideable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Stride",
              "printedName": "Stride",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Double",
                  "printedName": "Swift.Double",
                  "usr": "s:Sd"
                }
              ]
            }
          ],
          "usr": "s:Sx",
          "mangledName": "$sSx"
        },
        {
          "kind": "Conformance",
          "name": "Comparable",
          "printedName": "Comparable",
          "usr": "s:SL",
          "mangledName": "$sSL"
        },
        {
          "kind": "Conformance",
          "name": "SIMDScalar",
          "printedName": "SIMDScalar",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "SIMDMaskScalar",
              "printedName": "SIMDMaskScalar",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int64",
                  "printedName": "Swift.Int64",
                  "usr": "s:s5Int64V"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD2Storage",
              "printedName": "SIMD2Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD2Storage",
                  "printedName": "Swift.Double.SIMD2Storage",
                  "usr": "s:Sd12SIMD2StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD4Storage",
              "printedName": "SIMD4Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD4Storage",
                  "printedName": "Swift.Double.SIMD4Storage",
                  "usr": "s:Sd12SIMD4StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD8Storage",
              "printedName": "SIMD8Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD8Storage",
                  "printedName": "Swift.Double.SIMD8Storage",
                  "usr": "s:Sd12SIMD8StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD16Storage",
              "printedName": "SIMD16Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD16Storage",
                  "printedName": "Swift.Double.SIMD16Storage",
                  "usr": "s:Sd13SIMD16StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD32Storage",
              "printedName": "SIMD32Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD32Storage",
                  "printedName": "Swift.Double.SIMD32Storage",
                  "usr": "s:Sd13SIMD32StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD64Storage",
              "printedName": "SIMD64Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD64Storage",
                  "printedName": "Swift.Double.SIMD64Storage",
                  "usr": "s:Sd13SIMD64StorageV"
                }
              ]
            }
          ],
          "usr": "s:s10SIMDScalarP",
          "mangledName": "$ss10SIMDScalarP"
        },
        {
          "kind": "Conformance",
          "name": "_ObjectiveCBridgeable",
          "printedName": "_ObjectiveCBridgeable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "_ObjectiveCType",
              "printedName": "_ObjectiveCType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NSNumber",
                  "printedName": "Foundation.NSNumber",
                  "usr": "c:objc(cs)NSNumber"
                }
              ]
            }
          ],
          "usr": "s:s21_ObjectiveCBridgeableP",
          "mangledName": "$ss21_ObjectiveCBridgeableP"
        },
        {
          "kind": "Conformance",
          "name": "_FormatSpecifiable",
          "printedName": "_FormatSpecifiable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "_Arg",
              "printedName": "_Arg",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Double",
                  "printedName": "Swift.Double",
                  "usr": "s:Sd"
                }
              ]
            }
          ],
          "usr": "s:10Foundation18_FormatSpecifiableP",
          "mangledName": "$s10Foundation18_FormatSpecifiableP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "Int",
      "printedName": "Int",
      "children": [
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(booleanLiteral:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:Si6NimbleE14booleanLiteralSiSb_tcfc",
          "mangledName": "$sSi6NimbleE14booleanLiteralSiSb_tcfc",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "init_kind": "Designated"
        }
      ],
      "declKind": "Struct",
      "usr": "s:Si",
      "mangledName": "$sSi",
      "moduleName": "Swift",
      "declAttributes": [
        "Frozen"
      ],
      "isExternal": true,
      "conformances": [
        {
          "kind": "Conformance",
          "name": "FixedWidthInteger",
          "printedName": "FixedWidthInteger",
          "usr": "s:s17FixedWidthIntegerP",
          "mangledName": "$ss17FixedWidthIntegerP"
        },
        {
          "kind": "Conformance",
          "name": "SignedInteger",
          "printedName": "SignedInteger",
          "usr": "s:SZ",
          "mangledName": "$sSZ"
        },
        {
          "kind": "Conformance",
          "name": "_ExpressibleByBuiltinIntegerLiteral",
          "printedName": "_ExpressibleByBuiltinIntegerLiteral",
          "usr": "s:s35_ExpressibleByBuiltinIntegerLiteralP",
          "mangledName": "$ss35_ExpressibleByBuiltinIntegerLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "BinaryInteger",
          "printedName": "BinaryInteger",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Words",
              "printedName": "Words",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Words",
                  "printedName": "Swift.Int.Words",
                  "usr": "s:Si5WordsV"
                }
              ]
            }
          ],
          "usr": "s:Sz",
          "mangledName": "$sSz"
        },
        {
          "kind": "Conformance",
          "name": "LosslessStringConvertible",
          "printedName": "LosslessStringConvertible",
          "usr": "s:s25LosslessStringConvertibleP",
          "mangledName": "$ss25LosslessStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "SignedNumeric",
          "printedName": "SignedNumeric",
          "usr": "s:s13SignedNumericP",
          "mangledName": "$ss13SignedNumericP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "Numeric",
          "printedName": "Numeric",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Magnitude",
              "printedName": "Magnitude",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt",
                  "printedName": "Swift.UInt",
                  "usr": "s:Su"
                }
              ]
            }
          ],
          "usr": "s:Sj",
          "mangledName": "$sSj"
        },
        {
          "kind": "Conformance",
          "name": "Strideable",
          "printedName": "Strideable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Stride",
              "printedName": "Stride",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ]
            }
          ],
          "usr": "s:Sx",
          "mangledName": "$sSx"
        },
        {
          "kind": "Conformance",
          "name": "AdditiveArithmetic",
          "printedName": "AdditiveArithmetic",
          "usr": "s:s18AdditiveArithmeticP",
          "mangledName": "$ss18AdditiveArithmeticP"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByIntegerLiteral",
          "printedName": "ExpressibleByIntegerLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "IntegerLiteralType",
              "printedName": "IntegerLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ]
            }
          ],
          "usr": "s:s27ExpressibleByIntegerLiteralP",
          "mangledName": "$ss27ExpressibleByIntegerLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "Comparable",
          "printedName": "Comparable",
          "usr": "s:SL",
          "mangledName": "$sSL"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByBooleanLiteral",
          "printedName": "ExpressibleByBooleanLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "BooleanLiteralType",
              "printedName": "BooleanLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Bool",
                  "printedName": "Swift.Bool",
                  "usr": "s:Sb"
                }
              ]
            }
          ],
          "usr": "s:s27ExpressibleByBooleanLiteralP",
          "mangledName": "$ss27ExpressibleByBooleanLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "Decodable",
          "printedName": "Decodable",
          "usr": "s:Se",
          "mangledName": "$sSe"
        },
        {
          "kind": "Conformance",
          "name": "Encodable",
          "printedName": "Encodable",
          "usr": "s:SE",
          "mangledName": "$sSE"
        },
        {
          "kind": "Conformance",
          "name": "CodingKeyRepresentable",
          "printedName": "CodingKeyRepresentable",
          "usr": "s:s22CodingKeyRepresentableP",
          "mangledName": "$ss22CodingKeyRepresentableP"
        },
        {
          "kind": "Conformance",
          "name": "CustomReflectable",
          "printedName": "CustomReflectable",
          "usr": "s:s17CustomReflectableP",
          "mangledName": "$ss17CustomReflectableP"
        },
        {
          "kind": "Conformance",
          "name": "_CustomPlaygroundQuickLookable",
          "printedName": "_CustomPlaygroundQuickLookable",
          "usr": "s:s30_CustomPlaygroundQuickLookableP",
          "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
        },
        {
          "kind": "Conformance",
          "name": "MirrorPath",
          "printedName": "MirrorPath",
          "usr": "s:s10MirrorPathP",
          "mangledName": "$ss10MirrorPathP"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "_HasCustomAnyHashableRepresentation",
          "printedName": "_HasCustomAnyHashableRepresentation",
          "usr": "s:s35_HasCustomAnyHashableRepresentationP",
          "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
        },
        {
          "kind": "Conformance",
          "name": "Sendable",
          "printedName": "Sendable",
          "usr": "s:s8SendableP",
          "mangledName": "$ss8SendableP"
        },
        {
          "kind": "Conformance",
          "name": "SIMDScalar",
          "printedName": "SIMDScalar",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "SIMDMaskScalar",
              "printedName": "SIMDMaskScalar",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD2Storage",
              "printedName": "SIMD2Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD2Storage",
                  "printedName": "Swift.Int.SIMD2Storage",
                  "usr": "s:Si12SIMD2StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD4Storage",
              "printedName": "SIMD4Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD4Storage",
                  "printedName": "Swift.Int.SIMD4Storage",
                  "usr": "s:Si12SIMD4StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD8Storage",
              "printedName": "SIMD8Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD8Storage",
                  "printedName": "Swift.Int.SIMD8Storage",
                  "usr": "s:Si12SIMD8StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD16Storage",
              "printedName": "SIMD16Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD16Storage",
                  "printedName": "Swift.Int.SIMD16Storage",
                  "usr": "s:Si13SIMD16StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD32Storage",
              "printedName": "SIMD32Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD32Storage",
                  "printedName": "Swift.Int.SIMD32Storage",
                  "usr": "s:Si13SIMD32StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD64Storage",
              "printedName": "SIMD64Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD64Storage",
                  "printedName": "Swift.Int.SIMD64Storage",
                  "usr": "s:Si13SIMD64StorageV"
                }
              ]
            }
          ],
          "usr": "s:s10SIMDScalarP",
          "mangledName": "$ss10SIMDScalarP"
        },
        {
          "kind": "Conformance",
          "name": "_ObjectiveCBridgeable",
          "printedName": "_ObjectiveCBridgeable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "_ObjectiveCType",
              "printedName": "_ObjectiveCType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NSNumber",
                  "printedName": "Foundation.NSNumber",
                  "usr": "c:objc(cs)NSNumber"
                }
              ]
            }
          ],
          "usr": "s:s21_ObjectiveCBridgeableP",
          "mangledName": "$ss21_ObjectiveCBridgeableP"
        },
        {
          "kind": "Conformance",
          "name": "_FormatSpecifiable",
          "printedName": "_FormatSpecifiable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "_Arg",
              "printedName": "_Arg",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int64",
                  "printedName": "Swift.Int64",
                  "usr": "s:s5Int64V"
                }
              ]
            }
          ],
          "usr": "s:10Foundation18_FormatSpecifiableP",
          "mangledName": "$s10Foundation18_FormatSpecifiableP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "UInt",
      "printedName": "UInt",
      "children": [
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(booleanLiteral:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "UInt",
              "printedName": "Swift.UInt",
              "usr": "s:Su"
            },
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:Su6NimbleE14booleanLiteralSuSb_tcfc",
          "mangledName": "$sSu6NimbleE14booleanLiteralSuSb_tcfc",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "init_kind": "Designated"
        }
      ],
      "declKind": "Struct",
      "usr": "s:Su",
      "mangledName": "$sSu",
      "moduleName": "Swift",
      "declAttributes": [
        "Frozen"
      ],
      "isExternal": true,
      "conformances": [
        {
          "kind": "Conformance",
          "name": "FixedWidthInteger",
          "printedName": "FixedWidthInteger",
          "usr": "s:s17FixedWidthIntegerP",
          "mangledName": "$ss17FixedWidthIntegerP"
        },
        {
          "kind": "Conformance",
          "name": "UnsignedInteger",
          "printedName": "UnsignedInteger",
          "usr": "s:SU",
          "mangledName": "$sSU"
        },
        {
          "kind": "Conformance",
          "name": "_ExpressibleByBuiltinIntegerLiteral",
          "printedName": "_ExpressibleByBuiltinIntegerLiteral",
          "usr": "s:s35_ExpressibleByBuiltinIntegerLiteralP",
          "mangledName": "$ss35_ExpressibleByBuiltinIntegerLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "BinaryInteger",
          "printedName": "BinaryInteger",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Words",
              "printedName": "Words",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Words",
                  "printedName": "Swift.UInt.Words",
                  "usr": "s:Su5WordsV"
                }
              ]
            }
          ],
          "usr": "s:Sz",
          "mangledName": "$sSz"
        },
        {
          "kind": "Conformance",
          "name": "LosslessStringConvertible",
          "printedName": "LosslessStringConvertible",
          "usr": "s:s25LosslessStringConvertibleP",
          "mangledName": "$ss25LosslessStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "Numeric",
          "printedName": "Numeric",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Magnitude",
              "printedName": "Magnitude",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt",
                  "printedName": "Swift.UInt",
                  "usr": "s:Su"
                }
              ]
            }
          ],
          "usr": "s:Sj",
          "mangledName": "$sSj"
        },
        {
          "kind": "Conformance",
          "name": "Strideable",
          "printedName": "Strideable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Stride",
              "printedName": "Stride",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ]
            }
          ],
          "usr": "s:Sx",
          "mangledName": "$sSx"
        },
        {
          "kind": "Conformance",
          "name": "AdditiveArithmetic",
          "printedName": "AdditiveArithmetic",
          "usr": "s:s18AdditiveArithmeticP",
          "mangledName": "$ss18AdditiveArithmeticP"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByIntegerLiteral",
          "printedName": "ExpressibleByIntegerLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "IntegerLiteralType",
              "printedName": "IntegerLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt",
                  "printedName": "Swift.UInt",
                  "usr": "s:Su"
                }
              ]
            }
          ],
          "usr": "s:s27ExpressibleByIntegerLiteralP",
          "mangledName": "$ss27ExpressibleByIntegerLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "Comparable",
          "printedName": "Comparable",
          "usr": "s:SL",
          "mangledName": "$sSL"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByBooleanLiteral",
          "printedName": "ExpressibleByBooleanLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "BooleanLiteralType",
              "printedName": "BooleanLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Bool",
                  "printedName": "Swift.Bool",
                  "usr": "s:Sb"
                }
              ]
            }
          ],
          "usr": "s:s27ExpressibleByBooleanLiteralP",
          "mangledName": "$ss27ExpressibleByBooleanLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "Decodable",
          "printedName": "Decodable",
          "usr": "s:Se",
          "mangledName": "$sSe"
        },
        {
          "kind": "Conformance",
          "name": "Encodable",
          "printedName": "Encodable",
          "usr": "s:SE",
          "mangledName": "$sSE"
        },
        {
          "kind": "Conformance",
          "name": "CustomReflectable",
          "printedName": "CustomReflectable",
          "usr": "s:s17CustomReflectableP",
          "mangledName": "$ss17CustomReflectableP"
        },
        {
          "kind": "Conformance",
          "name": "_CustomPlaygroundQuickLookable",
          "printedName": "_CustomPlaygroundQuickLookable",
          "usr": "s:s30_CustomPlaygroundQuickLookableP",
          "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "_HasCustomAnyHashableRepresentation",
          "printedName": "_HasCustomAnyHashableRepresentation",
          "usr": "s:s35_HasCustomAnyHashableRepresentationP",
          "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
        },
        {
          "kind": "Conformance",
          "name": "Sendable",
          "printedName": "Sendable",
          "usr": "s:s8SendableP",
          "mangledName": "$ss8SendableP"
        },
        {
          "kind": "Conformance",
          "name": "SIMDScalar",
          "printedName": "SIMDScalar",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "SIMDMaskScalar",
              "printedName": "SIMDMaskScalar",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD2Storage",
              "printedName": "SIMD2Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD2Storage",
                  "printedName": "Swift.UInt.SIMD2Storage",
                  "usr": "s:Su12SIMD2StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD4Storage",
              "printedName": "SIMD4Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD4Storage",
                  "printedName": "Swift.UInt.SIMD4Storage",
                  "usr": "s:Su12SIMD4StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD8Storage",
              "printedName": "SIMD8Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD8Storage",
                  "printedName": "Swift.UInt.SIMD8Storage",
                  "usr": "s:Su12SIMD8StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD16Storage",
              "printedName": "SIMD16Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD16Storage",
                  "printedName": "Swift.UInt.SIMD16Storage",
                  "usr": "s:Su13SIMD16StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD32Storage",
              "printedName": "SIMD32Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD32Storage",
                  "printedName": "Swift.UInt.SIMD32Storage",
                  "usr": "s:Su13SIMD32StorageV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SIMD64Storage",
              "printedName": "SIMD64Storage",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "SIMD64Storage",
                  "printedName": "Swift.UInt.SIMD64Storage",
                  "usr": "s:Su13SIMD64StorageV"
                }
              ]
            }
          ],
          "usr": "s:s10SIMDScalarP",
          "mangledName": "$ss10SIMDScalarP"
        },
        {
          "kind": "Conformance",
          "name": "_ObjectiveCBridgeable",
          "printedName": "_ObjectiveCBridgeable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "_ObjectiveCType",
              "printedName": "_ObjectiveCType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NSNumber",
                  "printedName": "Foundation.NSNumber",
                  "usr": "c:objc(cs)NSNumber"
                }
              ]
            }
          ],
          "usr": "s:s21_ObjectiveCBridgeableP",
          "mangledName": "$ss21_ObjectiveCBridgeableP"
        },
        {
          "kind": "Conformance",
          "name": "_FormatSpecifiable",
          "printedName": "_FormatSpecifiable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "_Arg",
              "printedName": "_Arg",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt64",
                  "printedName": "Swift.UInt64",
                  "usr": "s:s6UInt64V"
                }
              ]
            }
          ],
          "usr": "s:10Foundation18_FormatSpecifiableP",
          "mangledName": "$s10Foundation18_FormatSpecifiableP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "Optional",
      "printedName": "Optional",
      "children": [
        {
          "kind": "Var",
          "name": "isNil",
          "printedName": "isNil",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            }
          ],
          "declKind": "Var",
          "usr": "s:Sq6NimbleE5isNilSbvp",
          "mangledName": "$sSq6NimbleE5isNilSbvp",
          "moduleName": "Nimble",
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Bool",
                  "printedName": "Swift.Bool",
                  "usr": "s:Sb"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:Sq6NimbleE5isNilSbvg",
              "mangledName": "$sSq6NimbleE5isNilSbvg",
              "moduleName": "Nimble",
              "genericSig": "<τ_0_0>",
              "sugared_genericSig": "<Wrapped>",
              "accessorKind": "get"
            }
          ]
        }
      ],
      "declKind": "Enum",
      "usr": "s:Sq",
      "mangledName": "$sSq",
      "moduleName": "Swift",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<Wrapped>",
      "declAttributes": [
        "Frozen"
      ],
      "isExternal": true,
      "isEnumExhaustive": true,
      "conformances": [
        {
          "kind": "Conformance",
          "name": "ExpressibleByNilLiteral",
          "printedName": "ExpressibleByNilLiteral",
          "usr": "s:s23ExpressibleByNilLiteralP",
          "mangledName": "$ss23ExpressibleByNilLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Encodable",
          "printedName": "Encodable",
          "usr": "s:SE",
          "mangledName": "$sSE"
        },
        {
          "kind": "Conformance",
          "name": "Decodable",
          "printedName": "Decodable",
          "usr": "s:Se",
          "mangledName": "$sSe"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomReflectable",
          "printedName": "CustomReflectable",
          "usr": "s:s17CustomReflectableP",
          "mangledName": "$ss17CustomReflectableP"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "_ObjectiveCBridgeable",
          "printedName": "_ObjectiveCBridgeable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "_ObjectiveCType",
              "printedName": "_ObjectiveCType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ProtocolComposition",
                  "printedName": "AnyObject"
                }
              ]
            }
          ],
          "usr": "s:s21_ObjectiveCBridgeableP",
          "mangledName": "$ss21_ObjectiveCBridgeableP"
        },
        {
          "kind": "Conformance",
          "name": "Sendable",
          "printedName": "Sendable",
          "usr": "s:s8SendableP",
          "mangledName": "$ss8SendableP"
        },
        {
          "kind": "Conformance",
          "name": "EncodableWithConfiguration",
          "printedName": "EncodableWithConfiguration",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "EncodingConfiguration",
              "printedName": "EncodingConfiguration",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "DependentMember",
                  "printedName": "τ_0_0.EncodingConfiguration"
                }
              ]
            }
          ],
          "usr": "s:10Foundation26EncodableWithConfigurationP",
          "mangledName": "$s10Foundation26EncodableWithConfigurationP"
        },
        {
          "kind": "Conformance",
          "name": "DecodableWithConfiguration",
          "printedName": "DecodableWithConfiguration",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "DecodingConfiguration",
              "printedName": "DecodingConfiguration",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "DependentMember",
                  "printedName": "τ_0_0.DecodingConfiguration"
                }
              ]
            }
          ],
          "usr": "s:10Foundation26DecodableWithConfigurationP",
          "mangledName": "$s10Foundation26DecodableWithConfigurationP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "request_mach_exception_raise_t",
      "printedName": "request_mach_exception_raise_t",
      "children": [
        {
          "kind": "Function",
          "name": "withMsgHeaderPointer",
          "printedName": "withMsgHeaderPointer(in:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            },
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Swift.UnsafeMutablePointer<Darwin.mach_msg_header_t>) -> τ_0_0",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "UnsafeMutablePointer",
                  "printedName": "Swift.UnsafeMutablePointer<Darwin.mach_msg_header_t>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "mach_msg_header_t",
                      "printedName": "Darwin.mach_msg_header_t",
                      "usr": "c:@SA@mach_msg_header_t"
                    }
                  ],
                  "usr": "s:Sp"
                }
              ],
              "typeAttributes": [
                "noescape"
              ]
            }
          ],
          "declKind": "Func",
          "usr": "s:So30request_mach_exception_raise_ta6NimbleE20withMsgHeaderPointer2inxxSpySo0B13_msg_header_taGXE_tlF",
          "mangledName": "$sSo30request_mach_exception_raise_ta6NimbleE20withMsgHeaderPointer2inxxSpySo0B13_msg_header_taGXE_tlF",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<R>",
          "declAttributes": [
            "Mutating"
          ],
          "funcSelfKind": "Mutating"
        }
      ],
      "declKind": "Struct",
      "usr": "c:@SA@request_mach_exception_raise_t",
      "moduleName": "Nimble",
      "isExternal": true
    },
    {
      "kind": "TypeDecl",
      "name": "reply_mach_exception_raise_state_t",
      "printedName": "reply_mach_exception_raise_state_t",
      "children": [
        {
          "kind": "Function",
          "name": "withMsgHeaderPointer",
          "printedName": "withMsgHeaderPointer(in:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "GenericTypeParam",
              "printedName": "τ_0_0"
            },
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Swift.UnsafeMutablePointer<Darwin.mach_msg_header_t>) -> τ_0_0",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                },
                {
                  "kind": "TypeNominal",
                  "name": "UnsafeMutablePointer",
                  "printedName": "Swift.UnsafeMutablePointer<Darwin.mach_msg_header_t>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "mach_msg_header_t",
                      "printedName": "Darwin.mach_msg_header_t",
                      "usr": "c:@SA@mach_msg_header_t"
                    }
                  ],
                  "usr": "s:Sp"
                }
              ],
              "typeAttributes": [
                "noescape"
              ]
            }
          ],
          "declKind": "Func",
          "usr": "s:So34reply_mach_exception_raise_state_ta6NimbleE20withMsgHeaderPointer2inxxSpySo0B13_msg_header_taGXE_tlF",
          "mangledName": "$sSo34reply_mach_exception_raise_state_ta6NimbleE20withMsgHeaderPointer2inxxSpySo0B13_msg_header_taGXE_tlF",
          "moduleName": "Nimble",
          "genericSig": "<τ_0_0>",
          "sugared_genericSig": "<R>",
          "declAttributes": [
            "Mutating"
          ],
          "funcSelfKind": "Mutating"
        }
      ],
      "declKind": "Struct",
      "usr": "c:@SA@reply_mach_exception_raise_state_t",
      "moduleName": "Nimble",
      "isExternal": true
    },
    {
      "kind": "TypeDecl",
      "name": "NSException",
      "printedName": "NSException",
      "children": [
        {
          "kind": "Function",
          "name": "catchException",
          "printedName": "catchException(in:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "Self?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "DynamicSelf",
                  "printedName": "Self"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "() -> ()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ]
            }
          ],
          "declKind": "Func",
          "usr": "s:So11NSExceptionC6NimbleE14catchException2inABXDSgyyc_tFZ",
          "mangledName": "$sSo11NSExceptionC6NimbleE14catchException2inABXDSgyyc_tFZ",
          "moduleName": "Nimble",
          "static": true,
          "declAttributes": [
            "Final",
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        }
      ],
      "declKind": "Class",
      "usr": "c:objc(cs)NSException",
      "moduleName": "Foundation",
      "isOpen": true,
      "objc_name": "NSException",
      "declAttributes": [
        "ObjC",
        "Dynamic"
      ],
      "superclassUsr": "c:objc(cs)NSObject",
      "isExternal": true,
      "inheritsConvenienceInitializers": true,
      "superclassNames": [
        "ObjectiveC.NSObject"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObservingPublishing",
          "printedName": "_KeyValueCodingAndObservingPublishing",
          "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
          "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObserving",
          "printedName": "_KeyValueCodingAndObserving",
          "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
          "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "DispatchTimeInterval",
      "printedName": "DispatchTimeInterval",
      "children": [
        {
          "kind": "Var",
          "name": "divided",
          "printedName": "divided",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "DispatchTimeInterval",
              "printedName": "Dispatch.DispatchTimeInterval",
              "usr": "s:8Dispatch0A12TimeIntervalO"
            }
          ],
          "declKind": "Var",
          "usr": "s:8Dispatch0A12TimeIntervalO6NimbleE7dividedACvp",
          "mangledName": "$s8Dispatch0A12TimeIntervalO6NimbleE7dividedACvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "RawDocComment"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "DispatchTimeInterval",
                  "printedName": "Dispatch.DispatchTimeInterval",
                  "usr": "s:8Dispatch0A12TimeIntervalO"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:8Dispatch0A12TimeIntervalO6NimbleE7dividedACvg",
              "mangledName": "$s8Dispatch0A12TimeIntervalO6NimbleE7dividedACvg",
              "moduleName": "Nimble",
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "description",
          "printedName": "description",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Var",
          "usr": "s:8Dispatch0A12TimeIntervalO6NimbleE11descriptionSSvp",
          "mangledName": "$s8Dispatch0A12TimeIntervalO6NimbleE11descriptionSSvp",
          "moduleName": "Nimble",
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:8Dispatch0A12TimeIntervalO6NimbleE11descriptionSSvg",
              "mangledName": "$s8Dispatch0A12TimeIntervalO6NimbleE11descriptionSSvg",
              "moduleName": "Nimble",
              "accessorKind": "get"
            }
          ]
        }
      ],
      "declKind": "Enum",
      "usr": "s:8Dispatch0A12TimeIntervalO",
      "mangledName": "$s8Dispatch0A12TimeIntervalO",
      "moduleName": "Dispatch",
      "isExternal": true,
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "NSArray",
      "printedName": "NSArray",
      "children": [
        {
          "kind": "Var",
          "name": "testDescription",
          "printedName": "testDescription",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Var",
          "usr": "s:So7NSArrayC6NimbleE15testDescriptionSSvp",
          "mangledName": "$sSo7NSArrayC6NimbleE15testDescriptionSSvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:So7NSArrayC6NimbleE15testDescriptionSSvg",
              "mangledName": "$sSo7NSArrayC6NimbleE15testDescriptionSSvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "accessorKind": "get"
            }
          ]
        }
      ],
      "declKind": "Class",
      "usr": "c:objc(cs)NSArray",
      "moduleName": "Foundation",
      "isOpen": true,
      "objc_name": "NSArray",
      "declAttributes": [
        "ObjC",
        "Dynamic"
      ],
      "superclassUsr": "c:objc(cs)NSObject",
      "isExternal": true,
      "inheritsConvenienceInitializers": true,
      "superclassNames": [
        "ObjectiveC.NSObject"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObservingPublishing",
          "printedName": "_KeyValueCodingAndObservingPublishing",
          "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
          "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObserving",
          "printedName": "_KeyValueCodingAndObserving",
          "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
          "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "NMBContainer",
          "printedName": "NMBContainer",
          "usr": "s:6Nimble12NMBContainerP",
          "mangledName": "$s6Nimble12NMBContainerP"
        },
        {
          "kind": "Conformance",
          "name": "NMBOrderedCollection",
          "printedName": "NMBOrderedCollection",
          "usr": "s:6Nimble20NMBOrderedCollectionP",
          "mangledName": "$s6Nimble20NMBOrderedCollectionP"
        },
        {
          "kind": "Conformance",
          "name": "NMBCollection",
          "printedName": "NMBCollection",
          "usr": "s:6Nimble13NMBCollectionP",
          "mangledName": "$s6Nimble13NMBCollectionP"
        },
        {
          "kind": "Conformance",
          "name": "TestOutputStringConvertible",
          "printedName": "TestOutputStringConvertible",
          "usr": "s:6Nimble27TestOutputStringConvertibleP",
          "mangledName": "$s6Nimble27TestOutputStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByArrayLiteral",
          "printedName": "ExpressibleByArrayLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "ArrayLiteralElement",
              "printedName": "ArrayLiteralElement",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ProtocolComposition",
                  "printedName": "Any"
                }
              ]
            }
          ],
          "usr": "s:s25ExpressibleByArrayLiteralP",
          "mangledName": "$ss25ExpressibleByArrayLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "_HasCustomAnyHashableRepresentation",
          "printedName": "_HasCustomAnyHashableRepresentation",
          "usr": "s:s35_HasCustomAnyHashableRepresentationP",
          "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
        },
        {
          "kind": "Conformance",
          "name": "Sequence",
          "printedName": "Sequence",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Element",
              "printedName": "Element",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ProtocolComposition",
                  "printedName": "Any"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Iterator",
              "printedName": "Iterator",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NSFastEnumerationIterator",
                  "printedName": "Foundation.NSFastEnumerationIterator",
                  "usr": "s:10Foundation25NSFastEnumerationIteratorV"
                }
              ]
            }
          ],
          "usr": "s:ST",
          "mangledName": "$sST"
        },
        {
          "kind": "Conformance",
          "name": "CustomReflectable",
          "printedName": "CustomReflectable",
          "usr": "s:s17CustomReflectableP",
          "mangledName": "$ss17CustomReflectableP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "NSSet",
      "printedName": "NSSet",
      "declKind": "Class",
      "usr": "c:objc(cs)NSSet",
      "moduleName": "Foundation",
      "isOpen": true,
      "objc_name": "NSSet",
      "declAttributes": [
        "ObjC",
        "Dynamic"
      ],
      "superclassUsr": "c:objc(cs)NSObject",
      "isExternal": true,
      "inheritsConvenienceInitializers": true,
      "superclassNames": [
        "ObjectiveC.NSObject"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObservingPublishing",
          "printedName": "_KeyValueCodingAndObservingPublishing",
          "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
          "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObserving",
          "printedName": "_KeyValueCodingAndObserving",
          "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
          "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "NMBContainer",
          "printedName": "NMBContainer",
          "usr": "s:6Nimble12NMBContainerP",
          "mangledName": "$s6Nimble12NMBContainerP"
        },
        {
          "kind": "Conformance",
          "name": "NMBCollection",
          "printedName": "NMBCollection",
          "usr": "s:6Nimble13NMBCollectionP",
          "mangledName": "$s6Nimble13NMBCollectionP"
        },
        {
          "kind": "Conformance",
          "name": "Sequence",
          "printedName": "Sequence",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Element",
              "printedName": "Element",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ProtocolComposition",
                  "printedName": "Any"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Iterator",
              "printedName": "Iterator",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NSFastEnumerationIterator",
                  "printedName": "Foundation.NSFastEnumerationIterator",
                  "usr": "s:10Foundation25NSFastEnumerationIteratorV"
                }
              ]
            }
          ],
          "usr": "s:ST",
          "mangledName": "$sST"
        },
        {
          "kind": "Conformance",
          "name": "_HasCustomAnyHashableRepresentation",
          "printedName": "_HasCustomAnyHashableRepresentation",
          "usr": "s:s35_HasCustomAnyHashableRepresentationP",
          "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByArrayLiteral",
          "printedName": "ExpressibleByArrayLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "ArrayLiteralElement",
              "printedName": "ArrayLiteralElement",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ProtocolComposition",
                  "printedName": "Any"
                }
              ]
            }
          ],
          "usr": "s:s25ExpressibleByArrayLiteralP",
          "mangledName": "$ss25ExpressibleByArrayLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "CustomReflectable",
          "printedName": "CustomReflectable",
          "usr": "s:s17CustomReflectableP",
          "mangledName": "$ss17CustomReflectableP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "NSHashTable",
      "printedName": "NSHashTable",
      "declKind": "Class",
      "usr": "c:objc(cs)NSHashTable",
      "moduleName": "Foundation",
      "genericSig": "<τ_0_0 where τ_0_0 : AnyObject>",
      "sugared_genericSig": "<ObjectType where ObjectType : AnyObject>",
      "isOpen": true,
      "intro_iOS": "6.0",
      "objc_name": "NSHashTable",
      "declAttributes": [
        "Available",
        "ObjC",
        "Dynamic"
      ],
      "superclassUsr": "c:objc(cs)NSObject",
      "isExternal": true,
      "inheritsConvenienceInitializers": true,
      "superclassNames": [
        "ObjectiveC.NSObject"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObservingPublishing",
          "printedName": "_KeyValueCodingAndObservingPublishing",
          "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
          "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObserving",
          "printedName": "_KeyValueCodingAndObserving",
          "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
          "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "NMBCollection",
          "printedName": "NMBCollection",
          "usr": "s:6Nimble13NMBCollectionP",
          "mangledName": "$s6Nimble13NMBCollectionP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "NSMapTable",
      "printedName": "NSMapTable",
      "declKind": "Class",
      "usr": "c:objc(cs)NSMapTable",
      "moduleName": "Foundation",
      "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : AnyObject, τ_0_1 : AnyObject>",
      "sugared_genericSig": "<KeyType, ObjectType where KeyType : AnyObject, ObjectType : AnyObject>",
      "isOpen": true,
      "intro_iOS": "6.0",
      "objc_name": "NSMapTable",
      "declAttributes": [
        "Available",
        "ObjC",
        "Dynamic"
      ],
      "superclassUsr": "c:objc(cs)NSObject",
      "isExternal": true,
      "inheritsConvenienceInitializers": true,
      "superclassNames": [
        "ObjectiveC.NSObject"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObservingPublishing",
          "printedName": "_KeyValueCodingAndObservingPublishing",
          "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
          "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObserving",
          "printedName": "_KeyValueCodingAndObserving",
          "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
          "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "NMBCollection",
          "printedName": "NMBCollection",
          "usr": "s:6Nimble13NMBCollectionP",
          "mangledName": "$s6Nimble13NMBCollectionP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "NSIndexSet",
      "printedName": "NSIndexSet",
      "children": [
        {
          "kind": "Var",
          "name": "testDescription",
          "printedName": "testDescription",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Var",
          "usr": "s:So10NSIndexSetC6NimbleE15testDescriptionSSvp",
          "mangledName": "$sSo10NSIndexSetC6NimbleE15testDescriptionSSvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:So10NSIndexSetC6NimbleE15testDescriptionSSvg",
              "mangledName": "$sSo10NSIndexSetC6NimbleE15testDescriptionSSvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "accessorKind": "get"
            }
          ]
        }
      ],
      "declKind": "Class",
      "usr": "c:objc(cs)NSIndexSet",
      "moduleName": "Foundation",
      "isOpen": true,
      "objc_name": "NSIndexSet",
      "declAttributes": [
        "ObjC",
        "Dynamic"
      ],
      "superclassUsr": "c:objc(cs)NSObject",
      "isExternal": true,
      "inheritsConvenienceInitializers": true,
      "superclassNames": [
        "ObjectiveC.NSObject"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObservingPublishing",
          "printedName": "_KeyValueCodingAndObservingPublishing",
          "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
          "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObserving",
          "printedName": "_KeyValueCodingAndObserving",
          "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
          "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "NMBCollection",
          "printedName": "NMBCollection",
          "usr": "s:6Nimble13NMBCollectionP",
          "mangledName": "$s6Nimble13NMBCollectionP"
        },
        {
          "kind": "Conformance",
          "name": "TestOutputStringConvertible",
          "printedName": "TestOutputStringConvertible",
          "usr": "s:6Nimble27TestOutputStringConvertibleP",
          "mangledName": "$s6Nimble27TestOutputStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "_HasCustomAnyHashableRepresentation",
          "printedName": "_HasCustomAnyHashableRepresentation",
          "usr": "s:s35_HasCustomAnyHashableRepresentationP",
          "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
        },
        {
          "kind": "Conformance",
          "name": "Sequence",
          "printedName": "Sequence",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Element",
              "printedName": "Element",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Iterator",
              "printedName": "Iterator",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NSIndexSetIterator",
                  "printedName": "Foundation.NSIndexSetIterator",
                  "usr": "s:10Foundation18NSIndexSetIteratorV"
                }
              ]
            }
          ],
          "usr": "s:ST",
          "mangledName": "$sST"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "NSDictionary",
      "printedName": "NSDictionary",
      "declKind": "Class",
      "usr": "c:objc(cs)NSDictionary",
      "moduleName": "Foundation",
      "isOpen": true,
      "objc_name": "NSDictionary",
      "declAttributes": [
        "ObjC",
        "Dynamic"
      ],
      "superclassUsr": "c:objc(cs)NSObject",
      "isExternal": true,
      "inheritsConvenienceInitializers": true,
      "superclassNames": [
        "ObjectiveC.NSObject"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObservingPublishing",
          "printedName": "_KeyValueCodingAndObservingPublishing",
          "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
          "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObserving",
          "printedName": "_KeyValueCodingAndObserving",
          "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
          "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "NMBCollection",
          "printedName": "NMBCollection",
          "usr": "s:6Nimble13NMBCollectionP",
          "mangledName": "$s6Nimble13NMBCollectionP"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByDictionaryLiteral",
          "printedName": "ExpressibleByDictionaryLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Key",
              "printedName": "Key",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ProtocolComposition",
                  "printedName": "Any"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Value",
              "printedName": "Value",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ProtocolComposition",
                  "printedName": "Any"
                }
              ]
            }
          ],
          "usr": "s:s30ExpressibleByDictionaryLiteralP",
          "mangledName": "$ss30ExpressibleByDictionaryLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "_HasCustomAnyHashableRepresentation",
          "printedName": "_HasCustomAnyHashableRepresentation",
          "usr": "s:s35_HasCustomAnyHashableRepresentationP",
          "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
        },
        {
          "kind": "Conformance",
          "name": "Sequence",
          "printedName": "Sequence",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Element",
              "printedName": "Element",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Tuple",
                  "printedName": "(key: Any, value: Any)",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "ProtocolComposition",
                      "printedName": "Any"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "ProtocolComposition",
                      "printedName": "Any"
                    }
                  ]
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Iterator",
              "printedName": "Iterator",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Iterator",
                  "printedName": "Foundation.NSDictionary.Iterator",
                  "usr": "s:So12NSDictionaryC10FoundationE8IteratorC"
                }
              ]
            }
          ],
          "usr": "s:ST",
          "mangledName": "$sST"
        },
        {
          "kind": "Conformance",
          "name": "CustomReflectable",
          "printedName": "CustomReflectable",
          "usr": "s:s17CustomReflectableP",
          "mangledName": "$ss17CustomReflectableP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "NSNumber",
      "printedName": "NSNumber",
      "children": [
        {
          "kind": "Function",
          "name": "NMB_compare",
          "printedName": "NMB_compare(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "ComparisonResult",
              "printedName": "Foundation.ComparisonResult",
              "usr": "c:@E@NSComparisonResult"
            },
            {
              "kind": "TypeNominal",
              "name": "ImplicitlyUnwrappedOptional",
              "printedName": "Nimble.NMBComparable?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NMBComparable",
                  "printedName": "Nimble.NMBComparable",
                  "usr": "c:@M@Nimble@objc(pl)NMBComparable"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "c:@CM@Nimble@@objc(cs)NSNumber(im)NMB_compare:",
          "mangledName": "$sSo8NSNumberC6NimbleE11NMB_compareySo18NSComparisonResultVAC13NMBComparable_pSgF",
          "moduleName": "Nimble",
          "isOpen": true,
          "objc_name": "NMB_compare:",
          "declAttributes": [
            "Dynamic",
            "ObjC",
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Var",
          "name": "testDescription",
          "printedName": "testDescription",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Var",
          "usr": "s:So8NSNumberC6NimbleE15testDescriptionSSvp",
          "mangledName": "$sSo8NSNumberC6NimbleE15testDescriptionSSvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:So8NSNumberC6NimbleE15testDescriptionSSvg",
              "mangledName": "$sSo8NSNumberC6NimbleE15testDescriptionSSvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "accessorKind": "get"
            }
          ]
        }
      ],
      "declKind": "Class",
      "usr": "c:objc(cs)NSNumber",
      "moduleName": "Foundation",
      "isOpen": true,
      "objc_name": "NSNumber",
      "declAttributes": [
        "ObjC",
        "Dynamic"
      ],
      "superclassUsr": "c:objc(cs)NSValue",
      "isExternal": true,
      "inheritsConvenienceInitializers": true,
      "superclassNames": [
        "Foundation.NSValue",
        "ObjectiveC.NSObject"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObservingPublishing",
          "printedName": "_KeyValueCodingAndObservingPublishing",
          "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
          "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObserving",
          "printedName": "_KeyValueCodingAndObserving",
          "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
          "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "NMBDoubleConvertible",
          "printedName": "NMBDoubleConvertible",
          "usr": "s:6Nimble20NMBDoubleConvertibleP",
          "mangledName": "$s6Nimble20NMBDoubleConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "NMBComparable",
          "printedName": "NMBComparable",
          "usr": "c:@M@Nimble@objc(pl)NMBComparable",
          "mangledName": "$s6Nimble13NMBComparableP"
        },
        {
          "kind": "Conformance",
          "name": "TestOutputStringConvertible",
          "printedName": "TestOutputStringConvertible",
          "usr": "s:6Nimble27TestOutputStringConvertibleP",
          "mangledName": "$s6Nimble27TestOutputStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByFloatLiteral",
          "printedName": "ExpressibleByFloatLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "FloatLiteralType",
              "printedName": "FloatLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Double",
                  "printedName": "Swift.Double",
                  "usr": "s:Sd"
                }
              ]
            }
          ],
          "usr": "s:s25ExpressibleByFloatLiteralP",
          "mangledName": "$ss25ExpressibleByFloatLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByIntegerLiteral",
          "printedName": "ExpressibleByIntegerLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "IntegerLiteralType",
              "printedName": "IntegerLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ]
            }
          ],
          "usr": "s:s27ExpressibleByIntegerLiteralP",
          "mangledName": "$ss27ExpressibleByIntegerLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByBooleanLiteral",
          "printedName": "ExpressibleByBooleanLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "BooleanLiteralType",
              "printedName": "BooleanLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Bool",
                  "printedName": "Swift.Bool",
                  "usr": "s:Sb"
                }
              ]
            }
          ],
          "usr": "s:s27ExpressibleByBooleanLiteralP",
          "mangledName": "$ss27ExpressibleByBooleanLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "_HasCustomAnyHashableRepresentation",
          "printedName": "_HasCustomAnyHashableRepresentation",
          "usr": "s:s35_HasCustomAnyHashableRepresentationP",
          "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "Date",
      "printedName": "Date",
      "children": [
        {
          "kind": "Var",
          "name": "doubleValue",
          "printedName": "doubleValue",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Double",
              "printedName": "Swift.Double",
              "usr": "s:Sd"
            }
          ],
          "declKind": "Var",
          "usr": "s:10Foundation4DateV6NimbleE11doubleValueSdvp",
          "mangledName": "$s10Foundation4DateV6NimbleE11doubleValueSdvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Double",
                  "printedName": "Swift.Double",
                  "usr": "s:Sd"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:10Foundation4DateV6NimbleE11doubleValueSdvg",
              "mangledName": "$s10Foundation4DateV6NimbleE11doubleValueSdvg",
              "moduleName": "Nimble",
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "testDescription",
          "printedName": "testDescription",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Var",
          "usr": "s:10Foundation4DateV6NimbleE15testDescriptionSSvp",
          "mangledName": "$s10Foundation4DateV6NimbleE15testDescriptionSSvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:10Foundation4DateV6NimbleE15testDescriptionSSvg",
              "mangledName": "$s10Foundation4DateV6NimbleE15testDescriptionSSvg",
              "moduleName": "Nimble",
              "accessorKind": "get"
            }
          ]
        }
      ],
      "declKind": "Struct",
      "usr": "s:10Foundation4DateV",
      "mangledName": "$s10Foundation4DateV",
      "moduleName": "Foundation",
      "isExternal": true,
      "conformances": [
        {
          "kind": "Conformance",
          "name": "ReferenceConvertible",
          "printedName": "ReferenceConvertible",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "ReferenceType",
              "printedName": "ReferenceType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NSDate",
                  "printedName": "Foundation.NSDate",
                  "usr": "c:objc(cs)NSDate"
                }
              ]
            }
          ],
          "usr": "s:10Foundation20ReferenceConvertibleP",
          "mangledName": "$s10Foundation20ReferenceConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "Comparable",
          "printedName": "Comparable",
          "usr": "s:SL",
          "mangledName": "$sSL"
        },
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "NMBDoubleConvertible",
          "printedName": "NMBDoubleConvertible",
          "usr": "s:6Nimble20NMBDoubleConvertibleP",
          "mangledName": "$s6Nimble20NMBDoubleConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "TestOutputStringConvertible",
          "printedName": "TestOutputStringConvertible",
          "usr": "s:6Nimble27TestOutputStringConvertibleP",
          "mangledName": "$s6Nimble27TestOutputStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomReflectable",
          "printedName": "CustomReflectable",
          "usr": "s:s17CustomReflectableP",
          "mangledName": "$ss17CustomReflectableP"
        },
        {
          "kind": "Conformance",
          "name": "_ObjectiveCBridgeable",
          "printedName": "_ObjectiveCBridgeable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "_ObjectiveCType",
              "printedName": "_ObjectiveCType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NSDate",
                  "printedName": "Foundation.NSDate",
                  "usr": "c:objc(cs)NSDate"
                }
              ]
            }
          ],
          "usr": "s:s21_ObjectiveCBridgeableP",
          "mangledName": "$ss21_ObjectiveCBridgeableP"
        },
        {
          "kind": "Conformance",
          "name": "_CustomPlaygroundQuickLookable",
          "printedName": "_CustomPlaygroundQuickLookable",
          "usr": "s:s30_CustomPlaygroundQuickLookableP",
          "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
        },
        {
          "kind": "Conformance",
          "name": "Decodable",
          "printedName": "Decodable",
          "usr": "s:Se",
          "mangledName": "$sSe"
        },
        {
          "kind": "Conformance",
          "name": "Encodable",
          "printedName": "Encodable",
          "usr": "s:SE",
          "mangledName": "$sSE"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "NSDate",
      "printedName": "NSDate",
      "children": [
        {
          "kind": "Var",
          "name": "doubleValue",
          "printedName": "doubleValue",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Double",
              "printedName": "Swift.Double",
              "usr": "s:Sd"
            }
          ],
          "declKind": "Var",
          "usr": "s:So6NSDateC6NimbleE11doubleValueSdvp",
          "mangledName": "$sSo6NSDateC6NimbleE11doubleValueSdvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Double",
                  "printedName": "Swift.Double",
                  "usr": "s:Sd"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:So6NSDateC6NimbleE11doubleValueSdvg",
              "mangledName": "$sSo6NSDateC6NimbleE11doubleValueSdvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "testDescription",
          "printedName": "testDescription",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Var",
          "usr": "s:So6NSDateC6NimbleE15testDescriptionSSvp",
          "mangledName": "$sSo6NSDateC6NimbleE15testDescriptionSSvp",
          "moduleName": "Nimble",
          "isOpen": true,
          "declAttributes": [
            "AccessControl"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:So6NSDateC6NimbleE15testDescriptionSSvg",
              "mangledName": "$sSo6NSDateC6NimbleE15testDescriptionSSvg",
              "moduleName": "Nimble",
              "isOpen": true,
              "accessorKind": "get"
            }
          ]
        }
      ],
      "declKind": "Class",
      "usr": "c:objc(cs)NSDate",
      "moduleName": "Foundation",
      "isOpen": true,
      "objc_name": "NSDate",
      "declAttributes": [
        "ObjC",
        "Dynamic"
      ],
      "superclassUsr": "c:objc(cs)NSObject",
      "isExternal": true,
      "inheritsConvenienceInitializers": true,
      "superclassNames": [
        "ObjectiveC.NSObject"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObservingPublishing",
          "printedName": "_KeyValueCodingAndObservingPublishing",
          "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
          "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObserving",
          "printedName": "_KeyValueCodingAndObserving",
          "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
          "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "NMBDoubleConvertible",
          "printedName": "NMBDoubleConvertible",
          "usr": "s:6Nimble20NMBDoubleConvertibleP",
          "mangledName": "$s6Nimble20NMBDoubleConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "TestOutputStringConvertible",
          "printedName": "TestOutputStringConvertible",
          "usr": "s:6Nimble27TestOutputStringConvertibleP",
          "mangledName": "$s6Nimble27TestOutputStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "_CustomPlaygroundQuickLookable",
          "printedName": "_CustomPlaygroundQuickLookable",
          "usr": "s:s30_CustomPlaygroundQuickLookableP",
          "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
        },
        {
          "kind": "Conformance",
          "name": "_HasCustomAnyHashableRepresentation",
          "printedName": "_HasCustomAnyHashableRepresentation",
          "usr": "s:s35_HasCustomAnyHashableRepresentationP",
          "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "NSString",
      "printedName": "NSString",
      "children": [
        {
          "kind": "Function",
          "name": "NMB_compare",
          "printedName": "NMB_compare(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "ComparisonResult",
              "printedName": "Foundation.ComparisonResult",
              "usr": "c:@E@NSComparisonResult"
            },
            {
              "kind": "TypeNominal",
              "name": "ImplicitlyUnwrappedOptional",
              "printedName": "Nimble.NMBComparable?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NMBComparable",
                  "printedName": "Nimble.NMBComparable",
                  "usr": "c:@M@Nimble@objc(pl)NMBComparable"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "c:@CM@Nimble@@objc(cs)NSString(im)NMB_compare:",
          "mangledName": "$sSo8NSStringC6NimbleE11NMB_compareySo18NSComparisonResultVAC13NMBComparable_pSgF",
          "moduleName": "Nimble",
          "isOpen": true,
          "objc_name": "NMB_compare:",
          "declAttributes": [
            "Dynamic",
            "ObjC",
            "AccessControl"
          ],
          "funcSelfKind": "NonMutating"
        }
      ],
      "declKind": "Class",
      "usr": "c:objc(cs)NSString",
      "moduleName": "Foundation",
      "isOpen": true,
      "objc_name": "NSString",
      "declAttributes": [
        "ObjC",
        "Dynamic"
      ],
      "superclassUsr": "c:objc(cs)NSObject",
      "isExternal": true,
      "inheritsConvenienceInitializers": true,
      "superclassNames": [
        "ObjectiveC.NSObject"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObservingPublishing",
          "printedName": "_KeyValueCodingAndObservingPublishing",
          "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
          "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObserving",
          "printedName": "_KeyValueCodingAndObserving",
          "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
          "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "NMBComparable",
          "printedName": "NMBComparable",
          "usr": "c:@M@Nimble@objc(pl)NMBComparable",
          "mangledName": "$s6Nimble13NMBComparableP"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByStringLiteral",
          "printedName": "ExpressibleByStringLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "StringLiteralType",
              "printedName": "StringLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "StaticString",
                  "printedName": "Swift.StaticString",
                  "usr": "s:s12StaticStringV"
                }
              ]
            }
          ],
          "usr": "s:s26ExpressibleByStringLiteralP",
          "mangledName": "$ss26ExpressibleByStringLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByExtendedGraphemeClusterLiteral",
          "printedName": "ExpressibleByExtendedGraphemeClusterLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "ExtendedGraphemeClusterLiteralType",
              "printedName": "ExtendedGraphemeClusterLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "StaticString",
                  "printedName": "Swift.StaticString",
                  "usr": "s:s12StaticStringV"
                }
              ]
            }
          ],
          "usr": "s:s43ExpressibleByExtendedGraphemeClusterLiteralP",
          "mangledName": "$ss43ExpressibleByExtendedGraphemeClusterLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByUnicodeScalarLiteral",
          "printedName": "ExpressibleByUnicodeScalarLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "UnicodeScalarLiteralType",
              "printedName": "UnicodeScalarLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "StaticString",
                  "printedName": "Swift.StaticString",
                  "usr": "s:s12StaticStringV"
                }
              ]
            }
          ],
          "usr": "s:s33ExpressibleByUnicodeScalarLiteralP",
          "mangledName": "$ss33ExpressibleByUnicodeScalarLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "_HasCustomAnyHashableRepresentation",
          "printedName": "_HasCustomAnyHashableRepresentation",
          "usr": "s:s35_HasCustomAnyHashableRepresentationP",
          "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
        },
        {
          "kind": "Conformance",
          "name": "_CustomPlaygroundQuickLookable",
          "printedName": "_CustomPlaygroundQuickLookable",
          "usr": "s:s30_CustomPlaygroundQuickLookableP",
          "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "Array",
      "printedName": "Array",
      "children": [
        {
          "kind": "Var",
          "name": "testDescription",
          "printedName": "testDescription",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Var",
          "usr": "s:Sa6NimbleE15testDescriptionSSvp",
          "mangledName": "$sSa6NimbleE15testDescriptionSSvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:Sa6NimbleE15testDescriptionSSvg",
              "mangledName": "$sSa6NimbleE15testDescriptionSSvg",
              "moduleName": "Nimble",
              "genericSig": "<τ_0_0>",
              "sugared_genericSig": "<Element>",
              "accessorKind": "get"
            }
          ]
        }
      ],
      "declKind": "Struct",
      "usr": "s:Sa",
      "mangledName": "$sSa",
      "moduleName": "Swift",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<Element>",
      "declAttributes": [
        "Frozen"
      ],
      "isExternal": true,
      "conformances": [
        {
          "kind": "Conformance",
          "name": "_DestructorSafeContainer",
          "printedName": "_DestructorSafeContainer",
          "usr": "s:s24_DestructorSafeContainerP",
          "mangledName": "$ss24_DestructorSafeContainerP"
        },
        {
          "kind": "Conformance",
          "name": "TestOutputStringConvertible",
          "printedName": "TestOutputStringConvertible",
          "usr": "s:6Nimble27TestOutputStringConvertibleP",
          "mangledName": "$s6Nimble27TestOutputStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "_ArrayProtocol",
          "printedName": "_ArrayProtocol",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "_Buffer",
              "printedName": "_Buffer",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "_ArrayBuffer",
                  "printedName": "Swift._ArrayBuffer<τ_0_0>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    }
                  ],
                  "usr": "s:s12_ArrayBufferV"
                }
              ]
            }
          ],
          "usr": "s:s14_ArrayProtocolP",
          "mangledName": "$ss14_ArrayProtocolP"
        },
        {
          "kind": "Conformance",
          "name": "RandomAccessCollection",
          "printedName": "RandomAccessCollection",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Element",
              "printedName": "Element",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Index",
              "printedName": "Index",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SubSequence",
              "printedName": "SubSequence",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ArraySlice",
                  "printedName": "Swift.ArraySlice<τ_0_0>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    }
                  ],
                  "usr": "s:s10ArraySliceV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Indices",
              "printedName": "Indices",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Range",
                  "printedName": "Swift.Range<Swift.Int>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Int",
                      "printedName": "Swift.Int",
                      "usr": "s:Si"
                    }
                  ],
                  "usr": "s:Sn"
                }
              ]
            }
          ],
          "usr": "s:Sk",
          "mangledName": "$sSk"
        },
        {
          "kind": "Conformance",
          "name": "MutableCollection",
          "printedName": "MutableCollection",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Element",
              "printedName": "Element",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Index",
              "printedName": "Index",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SubSequence",
              "printedName": "SubSequence",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ArraySlice",
                  "printedName": "Swift.ArraySlice<τ_0_0>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    }
                  ],
                  "usr": "s:s10ArraySliceV"
                }
              ]
            }
          ],
          "usr": "s:SM",
          "mangledName": "$sSM"
        },
        {
          "kind": "Conformance",
          "name": "BidirectionalCollection",
          "printedName": "BidirectionalCollection",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Element",
              "printedName": "Element",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Index",
              "printedName": "Index",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SubSequence",
              "printedName": "SubSequence",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ArraySlice",
                  "printedName": "Swift.ArraySlice<τ_0_0>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    }
                  ],
                  "usr": "s:s10ArraySliceV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Indices",
              "printedName": "Indices",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Range",
                  "printedName": "Swift.Range<Swift.Int>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Int",
                      "printedName": "Swift.Int",
                      "usr": "s:Si"
                    }
                  ],
                  "usr": "s:Sn"
                }
              ]
            }
          ],
          "usr": "s:SK",
          "mangledName": "$sSK"
        },
        {
          "kind": "Conformance",
          "name": "Collection",
          "printedName": "Collection",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Element",
              "printedName": "Element",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Index",
              "printedName": "Index",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Iterator",
              "printedName": "Iterator",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "IndexingIterator",
                  "printedName": "Swift.IndexingIterator<[τ_0_0]>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Array",
                      "printedName": "[τ_0_0]",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "GenericTypeParam",
                          "printedName": "τ_0_0"
                        }
                      ],
                      "usr": "s:Sa"
                    }
                  ],
                  "usr": "s:s16IndexingIteratorV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SubSequence",
              "printedName": "SubSequence",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ArraySlice",
                  "printedName": "Swift.ArraySlice<τ_0_0>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    }
                  ],
                  "usr": "s:s10ArraySliceV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Indices",
              "printedName": "Indices",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Range",
                  "printedName": "Swift.Range<Swift.Int>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Int",
                      "printedName": "Swift.Int",
                      "usr": "s:Si"
                    }
                  ],
                  "usr": "s:Sn"
                }
              ]
            }
          ],
          "usr": "s:Sl",
          "mangledName": "$sSl"
        },
        {
          "kind": "Conformance",
          "name": "Sequence",
          "printedName": "Sequence",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Element",
              "printedName": "Element",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Iterator",
              "printedName": "Iterator",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "IndexingIterator",
                  "printedName": "Swift.IndexingIterator<[τ_0_0]>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Array",
                      "printedName": "[τ_0_0]",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "GenericTypeParam",
                          "printedName": "τ_0_0"
                        }
                      ],
                      "usr": "s:Sa"
                    }
                  ],
                  "usr": "s:s16IndexingIteratorV"
                }
              ]
            }
          ],
          "usr": "s:ST",
          "mangledName": "$sST"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByArrayLiteral",
          "printedName": "ExpressibleByArrayLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "ArrayLiteralElement",
              "printedName": "ArrayLiteralElement",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ]
            }
          ],
          "usr": "s:s25ExpressibleByArrayLiteralP",
          "mangledName": "$ss25ExpressibleByArrayLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "RangeReplaceableCollection",
          "printedName": "RangeReplaceableCollection",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "SubSequence",
              "printedName": "SubSequence",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ArraySlice",
                  "printedName": "Swift.ArraySlice<τ_0_0>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    }
                  ],
                  "usr": "s:s10ArraySliceV"
                }
              ]
            }
          ],
          "usr": "s:Sm",
          "mangledName": "$sSm"
        },
        {
          "kind": "Conformance",
          "name": "CustomReflectable",
          "printedName": "CustomReflectable",
          "usr": "s:s17CustomReflectableP",
          "mangledName": "$ss17CustomReflectableP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "_HasCustomAnyHashableRepresentation",
          "printedName": "_HasCustomAnyHashableRepresentation",
          "usr": "s:s35_HasCustomAnyHashableRepresentationP",
          "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
        },
        {
          "kind": "Conformance",
          "name": "Sendable",
          "printedName": "Sendable",
          "usr": "s:s8SendableP",
          "mangledName": "$ss8SendableP"
        },
        {
          "kind": "Conformance",
          "name": "Encodable",
          "printedName": "Encodable",
          "usr": "s:SE",
          "mangledName": "$sSE"
        },
        {
          "kind": "Conformance",
          "name": "Decodable",
          "printedName": "Decodable",
          "usr": "s:Se",
          "mangledName": "$sSe"
        },
        {
          "kind": "Conformance",
          "name": "_HasContiguousBytes",
          "printedName": "_HasContiguousBytes",
          "usr": "s:s19_HasContiguousBytesP",
          "mangledName": "$ss19_HasContiguousBytesP"
        },
        {
          "kind": "Conformance",
          "name": "EncodableWithConfiguration",
          "printedName": "EncodableWithConfiguration",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "EncodingConfiguration",
              "printedName": "EncodingConfiguration",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "DependentMember",
                  "printedName": "τ_0_0.EncodingConfiguration"
                }
              ]
            }
          ],
          "usr": "s:10Foundation26EncodableWithConfigurationP",
          "mangledName": "$s10Foundation26EncodableWithConfigurationP"
        },
        {
          "kind": "Conformance",
          "name": "DecodableWithConfiguration",
          "printedName": "DecodableWithConfiguration",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "DecodingConfiguration",
              "printedName": "DecodingConfiguration",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "DependentMember",
                  "printedName": "τ_0_0.DecodingConfiguration"
                }
              ]
            }
          ],
          "usr": "s:10Foundation26DecodableWithConfigurationP",
          "mangledName": "$s10Foundation26DecodableWithConfigurationP"
        },
        {
          "kind": "Conformance",
          "name": "DataProtocol",
          "printedName": "DataProtocol",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Regions",
              "printedName": "Regions",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "CollectionOfOne",
                  "printedName": "Swift.CollectionOfOne<[Swift.UInt8]>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Array",
                      "printedName": "[Swift.UInt8]",
                      "children": [
                        {
                          "kind": "TypeNominal",
                          "name": "UInt8",
                          "printedName": "Swift.UInt8",
                          "usr": "s:s5UInt8V"
                        }
                      ],
                      "usr": "s:Sa"
                    }
                  ],
                  "usr": "s:s15CollectionOfOneV"
                }
              ]
            }
          ],
          "usr": "s:10Foundation12DataProtocolP",
          "mangledName": "$s10Foundation12DataProtocolP"
        },
        {
          "kind": "Conformance",
          "name": "MutableDataProtocol",
          "printedName": "MutableDataProtocol",
          "usr": "s:10Foundation19MutableDataProtocolP",
          "mangledName": "$s10Foundation19MutableDataProtocolP"
        },
        {
          "kind": "Conformance",
          "name": "_ObjectiveCBridgeable",
          "printedName": "_ObjectiveCBridgeable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "_ObjectiveCType",
              "printedName": "_ObjectiveCType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NSArray",
                  "printedName": "Foundation.NSArray",
                  "usr": "c:objc(cs)NSArray"
                }
              ]
            }
          ],
          "usr": "s:s21_ObjectiveCBridgeableP",
          "mangledName": "$ss21_ObjectiveCBridgeableP"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "ContiguousBytes",
          "printedName": "ContiguousBytes",
          "usr": "s:10Foundation15ContiguousBytesP",
          "mangledName": "$s10Foundation15ContiguousBytesP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "AnySequence",
      "printedName": "AnySequence",
      "children": [
        {
          "kind": "Var",
          "name": "testDescription",
          "printedName": "testDescription",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Var",
          "usr": "s:s11AnySequenceV6NimbleE15testDescriptionSSvp",
          "mangledName": "$ss11AnySequenceV6NimbleE15testDescriptionSSvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:s11AnySequenceV6NimbleE15testDescriptionSSvg",
              "mangledName": "$ss11AnySequenceV6NimbleE15testDescriptionSSvg",
              "moduleName": "Nimble",
              "genericSig": "<τ_0_0>",
              "sugared_genericSig": "<Element>",
              "accessorKind": "get"
            }
          ]
        }
      ],
      "declKind": "Struct",
      "usr": "s:s11AnySequenceV",
      "mangledName": "$ss11AnySequenceV",
      "moduleName": "Swift",
      "genericSig": "<τ_0_0>",
      "sugared_genericSig": "<Element>",
      "declAttributes": [
        "Frozen"
      ],
      "isExternal": true,
      "conformances": [
        {
          "kind": "Conformance",
          "name": "TestOutputStringConvertible",
          "printedName": "TestOutputStringConvertible",
          "usr": "s:6Nimble27TestOutputStringConvertibleP",
          "mangledName": "$s6Nimble27TestOutputStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "Sequence",
          "printedName": "Sequence",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Element",
              "printedName": "Element",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "GenericTypeParam",
                  "printedName": "τ_0_0"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Iterator",
              "printedName": "Iterator",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "AnyIterator",
                  "printedName": "Swift.AnyIterator<τ_0_0>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "GenericTypeParam",
                      "printedName": "τ_0_0"
                    }
                  ],
                  "usr": "s:s11AnyIteratorV"
                }
              ]
            }
          ],
          "usr": "s:ST",
          "mangledName": "$sST"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "String",
      "printedName": "String",
      "children": [
        {
          "kind": "Var",
          "name": "testDescription",
          "printedName": "testDescription",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Var",
          "usr": "s:SS6NimbleE15testDescriptionSSvp",
          "mangledName": "$sSS6NimbleE15testDescriptionSSvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:SS6NimbleE15testDescriptionSSvg",
              "mangledName": "$sSS6NimbleE15testDescriptionSSvg",
              "moduleName": "Nimble",
              "accessorKind": "get"
            }
          ]
        }
      ],
      "declKind": "Struct",
      "usr": "s:SS",
      "mangledName": "$sSS",
      "moduleName": "Swift",
      "declAttributes": [
        "Frozen"
      ],
      "isExternal": true,
      "conformances": [
        {
          "kind": "Conformance",
          "name": "TestOutputStringConvertible",
          "printedName": "TestOutputStringConvertible",
          "usr": "s:6Nimble27TestOutputStringConvertibleP",
          "mangledName": "$s6Nimble27TestOutputStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "Decodable",
          "printedName": "Decodable",
          "usr": "s:Se",
          "mangledName": "$sSe"
        },
        {
          "kind": "Conformance",
          "name": "Encodable",
          "printedName": "Encodable",
          "usr": "s:SE",
          "mangledName": "$sSE"
        },
        {
          "kind": "Conformance",
          "name": "CodingKeyRepresentable",
          "printedName": "CodingKeyRepresentable",
          "usr": "s:s22CodingKeyRepresentableP",
          "mangledName": "$ss22CodingKeyRepresentableP"
        },
        {
          "kind": "Conformance",
          "name": "_HasContiguousBytes",
          "printedName": "_HasContiguousBytes",
          "usr": "s:s19_HasContiguousBytesP",
          "mangledName": "$ss19_HasContiguousBytesP"
        },
        {
          "kind": "Conformance",
          "name": "CustomReflectable",
          "printedName": "CustomReflectable",
          "usr": "s:s17CustomReflectableP",
          "mangledName": "$ss17CustomReflectableP"
        },
        {
          "kind": "Conformance",
          "name": "_CustomPlaygroundQuickLookable",
          "printedName": "_CustomPlaygroundQuickLookable",
          "usr": "s:s30_CustomPlaygroundQuickLookableP",
          "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
        },
        {
          "kind": "Conformance",
          "name": "TextOutputStream",
          "printedName": "TextOutputStream",
          "usr": "s:s16TextOutputStreamP",
          "mangledName": "$ss16TextOutputStreamP"
        },
        {
          "kind": "Conformance",
          "name": "TextOutputStreamable",
          "printedName": "TextOutputStreamable",
          "usr": "s:s20TextOutputStreamableP",
          "mangledName": "$ss20TextOutputStreamableP"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "Sendable",
          "printedName": "Sendable",
          "usr": "s:s8SendableP",
          "mangledName": "$ss8SendableP"
        },
        {
          "kind": "Conformance",
          "name": "_ExpressibleByBuiltinUnicodeScalarLiteral",
          "printedName": "_ExpressibleByBuiltinUnicodeScalarLiteral",
          "usr": "s:s41_ExpressibleByBuiltinUnicodeScalarLiteralP",
          "mangledName": "$ss41_ExpressibleByBuiltinUnicodeScalarLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "_ExpressibleByBuiltinExtendedGraphemeClusterLiteral",
          "printedName": "_ExpressibleByBuiltinExtendedGraphemeClusterLiteral",
          "usr": "s:s51_ExpressibleByBuiltinExtendedGraphemeClusterLiteralP",
          "mangledName": "$ss51_ExpressibleByBuiltinExtendedGraphemeClusterLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "_ExpressibleByBuiltinStringLiteral",
          "printedName": "_ExpressibleByBuiltinStringLiteral",
          "usr": "s:s34_ExpressibleByBuiltinStringLiteralP",
          "mangledName": "$ss34_ExpressibleByBuiltinStringLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByStringLiteral",
          "printedName": "ExpressibleByStringLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "StringLiteralType",
              "printedName": "StringLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ]
            }
          ],
          "usr": "s:s26ExpressibleByStringLiteralP",
          "mangledName": "$ss26ExpressibleByStringLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByExtendedGraphemeClusterLiteral",
          "printedName": "ExpressibleByExtendedGraphemeClusterLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "ExtendedGraphemeClusterLiteralType",
              "printedName": "ExtendedGraphemeClusterLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ]
            }
          ],
          "usr": "s:s43ExpressibleByExtendedGraphemeClusterLiteralP",
          "mangledName": "$ss43ExpressibleByExtendedGraphemeClusterLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByUnicodeScalarLiteral",
          "printedName": "ExpressibleByUnicodeScalarLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "UnicodeScalarLiteralType",
              "printedName": "UnicodeScalarLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ]
            }
          ],
          "usr": "s:s33ExpressibleByUnicodeScalarLiteralP",
          "mangledName": "$ss33ExpressibleByUnicodeScalarLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "BidirectionalCollection",
          "printedName": "BidirectionalCollection",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Element",
              "printedName": "Element",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Character",
                  "printedName": "Swift.Character",
                  "usr": "s:SJ"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Index",
              "printedName": "Index",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Index",
                  "printedName": "Swift.String.Index",
                  "usr": "s:SS5IndexV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SubSequence",
              "printedName": "SubSequence",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Substring",
                  "printedName": "Swift.Substring",
                  "usr": "s:Ss"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Indices",
              "printedName": "Indices",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "DefaultIndices",
                  "printedName": "Swift.DefaultIndices<Swift.String>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "String",
                      "printedName": "Swift.String",
                      "usr": "s:SS"
                    }
                  ],
                  "usr": "s:SI"
                }
              ]
            }
          ],
          "usr": "s:SK",
          "mangledName": "$sSK"
        },
        {
          "kind": "Conformance",
          "name": "Collection",
          "printedName": "Collection",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Element",
              "printedName": "Element",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Character",
                  "printedName": "Swift.Character",
                  "usr": "s:SJ"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Index",
              "printedName": "Index",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Index",
                  "printedName": "Swift.String.Index",
                  "usr": "s:SS5IndexV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Iterator",
              "printedName": "Iterator",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Iterator",
                  "printedName": "Swift.String.Iterator",
                  "usr": "s:SS8IteratorV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SubSequence",
              "printedName": "SubSequence",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Substring",
                  "printedName": "Swift.Substring",
                  "usr": "s:Ss"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Indices",
              "printedName": "Indices",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "DefaultIndices",
                  "printedName": "Swift.DefaultIndices<Swift.String>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "String",
                      "printedName": "Swift.String",
                      "usr": "s:SS"
                    }
                  ],
                  "usr": "s:SI"
                }
              ]
            }
          ],
          "usr": "s:Sl",
          "mangledName": "$sSl"
        },
        {
          "kind": "Conformance",
          "name": "Sequence",
          "printedName": "Sequence",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Element",
              "printedName": "Element",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Character",
                  "printedName": "Swift.Character",
                  "usr": "s:SJ"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Iterator",
              "printedName": "Iterator",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Iterator",
                  "printedName": "Swift.String.Iterator",
                  "usr": "s:SS8IteratorV"
                }
              ]
            }
          ],
          "usr": "s:ST",
          "mangledName": "$sST"
        },
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Comparable",
          "printedName": "Comparable",
          "usr": "s:SL",
          "mangledName": "$sSL"
        },
        {
          "kind": "Conformance",
          "name": "StringProtocol",
          "printedName": "StringProtocol",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "UTF8View",
              "printedName": "UTF8View",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UTF8View",
                  "printedName": "Swift.String.UTF8View",
                  "usr": "s:SS8UTF8ViewV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "UTF16View",
              "printedName": "UTF16View",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UTF16View",
                  "printedName": "Swift.String.UTF16View",
                  "usr": "s:SS9UTF16ViewV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "UnicodeScalarView",
              "printedName": "UnicodeScalarView",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UnicodeScalarView",
                  "printedName": "Swift.String.UnicodeScalarView",
                  "usr": "s:SS17UnicodeScalarViewV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SubSequence",
              "printedName": "SubSequence",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Substring",
                  "printedName": "Swift.Substring",
                  "usr": "s:Ss"
                }
              ]
            }
          ],
          "usr": "s:Sy",
          "mangledName": "$sSy"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByStringInterpolation",
          "printedName": "ExpressibleByStringInterpolation",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "StringInterpolation",
              "printedName": "StringInterpolation",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "DefaultStringInterpolation",
                  "printedName": "Swift.DefaultStringInterpolation",
                  "usr": "s:s26DefaultStringInterpolationV"
                }
              ]
            }
          ],
          "usr": "s:s32ExpressibleByStringInterpolationP",
          "mangledName": "$ss32ExpressibleByStringInterpolationP"
        },
        {
          "kind": "Conformance",
          "name": "LosslessStringConvertible",
          "printedName": "LosslessStringConvertible",
          "usr": "s:s25LosslessStringConvertibleP",
          "mangledName": "$ss25LosslessStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "RangeReplaceableCollection",
          "printedName": "RangeReplaceableCollection",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "SubSequence",
              "printedName": "SubSequence",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Substring",
                  "printedName": "Swift.Substring",
                  "usr": "s:Ss"
                }
              ]
            }
          ],
          "usr": "s:Sm",
          "mangledName": "$sSm"
        },
        {
          "kind": "Conformance",
          "name": "MirrorPath",
          "printedName": "MirrorPath",
          "usr": "s:s10MirrorPathP",
          "mangledName": "$ss10MirrorPathP"
        },
        {
          "kind": "Conformance",
          "name": "_ObjectiveCBridgeable",
          "printedName": "_ObjectiveCBridgeable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "_ObjectiveCType",
              "printedName": "_ObjectiveCType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NSString",
                  "printedName": "Foundation.NSString",
                  "usr": "c:objc(cs)NSString"
                }
              ]
            }
          ],
          "usr": "s:s21_ObjectiveCBridgeableP",
          "mangledName": "$ss21_ObjectiveCBridgeableP"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "Data",
      "printedName": "Data",
      "children": [
        {
          "kind": "Var",
          "name": "testDescription",
          "printedName": "testDescription",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Var",
          "usr": "s:10Foundation4DataV6NimbleE15testDescriptionSSvp",
          "mangledName": "$s10Foundation4DataV6NimbleE15testDescriptionSSvp",
          "moduleName": "Nimble",
          "declAttributes": [
            "AccessControl"
          ],
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:10Foundation4DataV6NimbleE15testDescriptionSSvg",
              "mangledName": "$s10Foundation4DataV6NimbleE15testDescriptionSSvg",
              "moduleName": "Nimble",
              "accessorKind": "get"
            }
          ]
        }
      ],
      "declKind": "Struct",
      "usr": "s:10Foundation4DataV",
      "mangledName": "$s10Foundation4DataV",
      "moduleName": "Foundation",
      "declAttributes": [
        "Frozen"
      ],
      "isExternal": true,
      "conformances": [
        {
          "kind": "Conformance",
          "name": "ReferenceConvertible",
          "printedName": "ReferenceConvertible",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "ReferenceType",
              "printedName": "ReferenceType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NSData",
                  "printedName": "Foundation.NSData",
                  "usr": "c:objc(cs)NSData"
                }
              ]
            }
          ],
          "usr": "s:10Foundation20ReferenceConvertibleP",
          "mangledName": "$s10Foundation20ReferenceConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "RandomAccessCollection",
          "printedName": "RandomAccessCollection",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Element",
              "printedName": "Element",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt8",
                  "printedName": "Swift.UInt8",
                  "usr": "s:s5UInt8V"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Index",
              "printedName": "Index",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SubSequence",
              "printedName": "SubSequence",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Data",
                  "printedName": "Foundation.Data",
                  "usr": "s:10Foundation4DataV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Indices",
              "printedName": "Indices",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Range",
                  "printedName": "Swift.Range<Swift.Int>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Int",
                      "printedName": "Swift.Int",
                      "usr": "s:Si"
                    }
                  ],
                  "usr": "s:Sn"
                }
              ]
            }
          ],
          "usr": "s:Sk",
          "mangledName": "$sSk"
        },
        {
          "kind": "Conformance",
          "name": "MutableCollection",
          "printedName": "MutableCollection",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Element",
              "printedName": "Element",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt8",
                  "printedName": "Swift.UInt8",
                  "usr": "s:s5UInt8V"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Index",
              "printedName": "Index",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SubSequence",
              "printedName": "SubSequence",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Data",
                  "printedName": "Foundation.Data",
                  "usr": "s:10Foundation4DataV"
                }
              ]
            }
          ],
          "usr": "s:SM",
          "mangledName": "$sSM"
        },
        {
          "kind": "Conformance",
          "name": "RangeReplaceableCollection",
          "printedName": "RangeReplaceableCollection",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "SubSequence",
              "printedName": "SubSequence",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Data",
                  "printedName": "Foundation.Data",
                  "usr": "s:10Foundation4DataV"
                }
              ]
            }
          ],
          "usr": "s:Sm",
          "mangledName": "$sSm"
        },
        {
          "kind": "Conformance",
          "name": "MutableDataProtocol",
          "printedName": "MutableDataProtocol",
          "usr": "s:10Foundation19MutableDataProtocolP",
          "mangledName": "$s10Foundation19MutableDataProtocolP"
        },
        {
          "kind": "Conformance",
          "name": "ContiguousBytes",
          "printedName": "ContiguousBytes",
          "usr": "s:10Foundation15ContiguousBytesP",
          "mangledName": "$s10Foundation15ContiguousBytesP"
        },
        {
          "kind": "Conformance",
          "name": "BidirectionalCollection",
          "printedName": "BidirectionalCollection",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Element",
              "printedName": "Element",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt8",
                  "printedName": "Swift.UInt8",
                  "usr": "s:s5UInt8V"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Index",
              "printedName": "Index",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SubSequence",
              "printedName": "SubSequence",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Data",
                  "printedName": "Foundation.Data",
                  "usr": "s:10Foundation4DataV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Indices",
              "printedName": "Indices",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Range",
                  "printedName": "Swift.Range<Swift.Int>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Int",
                      "printedName": "Swift.Int",
                      "usr": "s:Si"
                    }
                  ],
                  "usr": "s:Sn"
                }
              ]
            }
          ],
          "usr": "s:SK",
          "mangledName": "$sSK"
        },
        {
          "kind": "Conformance",
          "name": "Collection",
          "printedName": "Collection",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Element",
              "printedName": "Element",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt8",
                  "printedName": "Swift.UInt8",
                  "usr": "s:s5UInt8V"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Index",
              "printedName": "Index",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Iterator",
              "printedName": "Iterator",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Iterator",
                  "printedName": "Foundation.Data.Iterator",
                  "usr": "s:10Foundation4DataV8IteratorV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SubSequence",
              "printedName": "SubSequence",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Data",
                  "printedName": "Foundation.Data",
                  "usr": "s:10Foundation4DataV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Indices",
              "printedName": "Indices",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Range",
                  "printedName": "Swift.Range<Swift.Int>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Int",
                      "printedName": "Swift.Int",
                      "usr": "s:Si"
                    }
                  ],
                  "usr": "s:Sn"
                }
              ]
            }
          ],
          "usr": "s:Sl",
          "mangledName": "$sSl"
        },
        {
          "kind": "Conformance",
          "name": "DataProtocol",
          "printedName": "DataProtocol",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Regions",
              "printedName": "Regions",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "CollectionOfOne",
                  "printedName": "Swift.CollectionOfOne<Foundation.Data>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Data",
                      "printedName": "Foundation.Data",
                      "usr": "s:10Foundation4DataV"
                    }
                  ],
                  "usr": "s:s15CollectionOfOneV"
                }
              ]
            }
          ],
          "usr": "s:10Foundation12DataProtocolP",
          "mangledName": "$s10Foundation12DataProtocolP"
        },
        {
          "kind": "Conformance",
          "name": "Sequence",
          "printedName": "Sequence",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Element",
              "printedName": "Element",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt8",
                  "printedName": "Swift.UInt8",
                  "usr": "s:s5UInt8V"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Iterator",
              "printedName": "Iterator",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Iterator",
                  "printedName": "Foundation.Data.Iterator",
                  "usr": "s:10Foundation4DataV8IteratorV"
                }
              ]
            }
          ],
          "usr": "s:ST",
          "mangledName": "$sST"
        },
        {
          "kind": "Conformance",
          "name": "TestOutputStringConvertible",
          "printedName": "TestOutputStringConvertible",
          "usr": "s:6Nimble27TestOutputStringConvertibleP",
          "mangledName": "$s6Nimble27TestOutputStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomReflectable",
          "printedName": "CustomReflectable",
          "usr": "s:s17CustomReflectableP",
          "mangledName": "$ss17CustomReflectableP"
        },
        {
          "kind": "Conformance",
          "name": "_ObjectiveCBridgeable",
          "printedName": "_ObjectiveCBridgeable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "_ObjectiveCType",
              "printedName": "_ObjectiveCType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NSData",
                  "printedName": "Foundation.NSData",
                  "usr": "c:objc(cs)NSData"
                }
              ]
            }
          ],
          "usr": "s:s21_ObjectiveCBridgeableP",
          "mangledName": "$ss21_ObjectiveCBridgeableP"
        },
        {
          "kind": "Conformance",
          "name": "Decodable",
          "printedName": "Decodable",
          "usr": "s:Se",
          "mangledName": "$sSe"
        },
        {
          "kind": "Conformance",
          "name": "Encodable",
          "printedName": "Encodable",
          "usr": "s:SE",
          "mangledName": "$sSE"
        }
      ]
    }
  ],
  "json_format_version": 6
}